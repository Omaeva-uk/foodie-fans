{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { loadScript } from 'static/lib/load-script';\nimport { removeScript } from 'static/lib/remove-script';\n\nvar useGoogleLogin = function useGoogleLogin(_ref) {\n  _s();\n\n  var _ref$onSuccess = _ref.onSuccess,\n      onSuccess = _ref$onSuccess === void 0 ? Function : _ref$onSuccess,\n      _ref$onFailure = _ref.onFailure,\n      onFailure = _ref$onFailure === void 0 ? Function : _ref$onFailure,\n      onScriptLoadFailure = _ref.onScriptLoadFailure,\n      clientId = _ref.clientId,\n      autoLoad = _ref.autoLoad,\n      _ref$jsSrc = _ref.jsSrc,\n      jsSrc = _ref$jsSrc === void 0 ? 'https://accounts.google.com/gsi/client' : _ref$jsSrc;\n\n  var _useState = useState(false),\n      loaded = _useState[0],\n      setLoaded = _useState[1];\n\n  function handleSigninSuccess(res) {\n    onSuccess(res);\n  }\n\n  function signIn() {\n    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (loaded) {\n      var google = window.google;\n      google.accounts.id.prompt();\n    }\n  }\n\n  function renderButtonSignIn() {\n    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (loaded) {\n      var google = window.google;\n      google.accounts.id.renderButton(document.getElementById('btnLoginWithGoogle'), // Ensure the element exist and it is a div to display correcctly\n      {\n        theme: 'outline',\n        size: 'large'\n      } // Customization attributes\n      );\n    }\n  }\n\n  useEffect(function () {\n    var unmounted = false;\n    var onLoadFailure = onScriptLoadFailure || onFailure;\n    loadScript(document, 'script', 'google-login', jsSrc, function () {\n      var google = window.google;\n      google.accounts.id.initialize({\n        client_id: clientId,\n        callback: function callback(data) {\n          handleSigninSuccess(data);\n        }\n      });\n\n      if (!unmounted) {\n        setLoaded(true);\n      }\n    }, function (err) {\n      onLoadFailure(err);\n    });\n    return function () {\n      unmounted = true;\n      removeScript(document, 'google-login');\n    };\n  }, []);\n  useEffect(function () {\n    if (autoLoad) {\n      signIn();\n    }\n  }, [loaded]);\n  return {\n    signIn: signIn,\n    loaded: loaded,\n    renderButtonSignIn: renderButtonSignIn\n  };\n};\n\n_s(useGoogleLogin, \"jL9xxUwNf3qk9P9ZTkUmolSIsH0=\");\n\nexport default useGoogleLogin;","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/lib/hook/use-google-login.ts"],"names":["useState","useEffect","loadScript","removeScript","useGoogleLogin","onSuccess","Function","onFailure","onScriptLoadFailure","clientId","autoLoad","jsSrc","loaded","setLoaded","handleSigninSuccess","res","signIn","e","preventDefault","google","window","accounts","id","prompt","renderButtonSignIn","renderButton","document","getElementById","theme","size","unmounted","onLoadFailure","initialize","client_id","callback","data","err"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { loadScript } from 'static/lib/load-script';\nimport { removeScript } from 'static/lib/remove-script';\n\ninterface IProps {\n  clientId: string;\n  onSuccess: Function;\n  onFailure: Function;\n  onScriptLoadFailure?: Function;\n  autoLoad?: boolean;\n  jsSrc?: string;\n}\n\nconst useGoogleLogin = ({\n  onSuccess = Function,\n  onFailure = Function,\n  onScriptLoadFailure,\n  clientId,\n  autoLoad,\n  jsSrc = 'https://accounts.google.com/gsi/client'\n}: IProps) => {\n  const [loaded, setLoaded] = useState(false);\n\n  function handleSigninSuccess(res) {\n    onSuccess(res);\n  }\n\n  function signIn(e = null) {\n    if (e) {\n      e.preventDefault();\n    }\n    if (loaded) {\n      const google = (window as any).google;\n      google.accounts.id.prompt();\n    }\n  }\n\n  function renderButtonSignIn(e = null) {\n    if (e) {\n      e.preventDefault();\n    }\n    if (loaded) {\n      const google = (window as any).google;\n      google.accounts.id.renderButton(\n        document.getElementById('btnLoginWithGoogle'), // Ensure the element exist and it is a div to display correcctly\n        { theme: 'outline', size: 'large' } // Customization attributes\n      );\n    }\n  }\n\n  useEffect(() => {\n    let unmounted = false;\n    const onLoadFailure = onScriptLoadFailure || onFailure;\n    loadScript(\n      document,\n      'script',\n      'google-login',\n      jsSrc,\n      () => {\n        const google = (window as any).google;\n        google.accounts.id.initialize({\n          client_id: clientId,\n          callback: data => {\n            handleSigninSuccess(data);\n          }\n        });\n        if (!unmounted) {\n          setLoaded(true);\n        }\n      },\n      err => {\n        onLoadFailure(err);\n      }\n    );\n\n    return () => {\n      unmounted = true;\n      removeScript(document, 'google-login');\n    };\n  }, []);\n\n  useEffect(() => {\n    if (autoLoad) {\n      signIn();\n    }\n  }, [loaded]);\n\n  return { signIn, loaded, renderButtonSignIn };\n};\n\nexport default useGoogleLogin;\n"]},"metadata":{},"sourceType":"module"}