{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent, createRef } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { utilsService } from '@services/index';\nexport class GoogleReCaptcha extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"recaptchaRef\", void 0);\n  }\n\n  componentDidMount() {\n    if (!this.recaptchaRef) {\n      this.recaptchaRef = /*#__PURE__*/createRef();\n    }\n  }\n\n  async handleVerifyCapcha(token) {\n    const {\n      handleVerify\n    } = this.props;\n\n    if (token) {\n      const resp = await utilsService.verifyRecaptcha(token);\n      handleVerify(resp);\n    } else {\n      handleVerify({\n        success: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      settings\n    } = this.props;\n\n    if (!this.recaptchaRef) {\n      this.recaptchaRef = /*#__PURE__*/createRef();\n    }\n\n    return __jsx(\"div\", {\n      className: \"recaptcha-box\"\n    }, (settings === null || settings === void 0 ? void 0 : settings.enableGoogleReCaptcha) && __jsx(ReCAPTCHA, {\n      ref: this.recaptchaRef,\n      sitekey: settings === null || settings === void 0 ? void 0 : settings.googleReCaptchaSiteKey,\n      onChange: this.handleVerifyCapcha.bind(this)\n    }));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/common/recaptcha.tsx"],"names":["PureComponent","createRef","ReCAPTCHA","utilsService","GoogleReCaptcha","componentDidMount","recaptchaRef","handleVerifyCapcha","token","handleVerify","props","resp","verifyRecaptcha","success","render","settings","enableGoogleReCaptcha","googleReCaptchaSiteKey","bind"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,OAAzC;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAOA,OAAO,MAAMC,eAAN,SAA8BJ,aAA9B,CAAoD;AAAA;AAAA;;AAAA;AAAA;;AAGzDK,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKC,YAAV,EAAwB;AACtB,WAAKA,YAAL,gBAAoBL,SAAS,EAA7B;AACD;AACF;;AAEuB,QAAlBM,kBAAkB,CAACC,KAAD,EAAgB;AACtC,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;;AACA,QAAIF,KAAJ,EAAW;AACT,YAAMG,IAAI,GAAG,MAAMR,YAAY,CAACS,eAAb,CAA6BJ,KAA7B,CAAnB;AACAC,MAAAA,YAAY,CAACE,IAAD,CAAZ;AACD,KAHD,MAGO;AACLF,MAAAA,YAAY,CAAC;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAZ;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKL,KAA1B;;AACA,QAAI,CAAC,KAAKJ,YAAV,EAAwB;AACtB,WAAKA,YAAL,gBAAoBL,SAAS,EAA7B;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACG,CAAAc,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,qBAAV,KACD,MAAC,SAAD;AACE,MAAA,GAAG,EAAE,KAAKV,YADZ;AAEE,MAAA,OAAO,EAAES,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEE,sBAFrB;AAGE,MAAA,QAAQ,EAAE,KAAKV,kBAAL,CAAwBW,IAAxB,CAA6B,IAA7B;AAHZ,MAFF,CADF;AAWD;;AAnCwD","sourcesContent":["import { PureComponent, createRef } from 'react';\nimport { ISettings } from 'src/interfaces';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { utilsService } from '@services/index';\n\ninterface IProps {\n  settings: ISettings;\n  handleVerify: Function;\n}\n\nexport class GoogleReCaptcha extends PureComponent<IProps> {\n  recaptchaRef: any;\n\n  componentDidMount() {\n    if (!this.recaptchaRef) {\n      this.recaptchaRef = createRef();\n    }\n  }\n\n  async handleVerifyCapcha(token: string) {\n    const { handleVerify } = this.props;\n    if (token) {\n      const resp = await utilsService.verifyRecaptcha(token);\n      handleVerify(resp);\n    } else {\n      handleVerify({ success: false });\n    }\n  }\n\n  render() {\n    const { settings } = this.props;\n    if (!this.recaptchaRef) {\n      this.recaptchaRef = createRef();\n    }\n    return (\n      <div className=\"recaptcha-box\">\n        {settings?.enableGoogleReCaptcha && (\n        <ReCAPTCHA\n          ref={this.recaptchaRef}\n          sitekey={settings?.googleReCaptchaSiteKey}\n          onChange={this.handleVerifyCapcha.bind(this)}\n        />\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}