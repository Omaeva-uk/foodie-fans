{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { performerService } from '@services/index';\nimport { getList, getListFail, getListSuccess, getProfile, getProfileFail, getProfileSuccess } from './actions';\nvar performerSagas = [{\n  on: getList,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return performerService.search(data.payload);\n\n          case 3:\n            resp = _context.sent;\n            _context.next = 6;\n            return put(getListSuccess(resp.data));\n\n          case 6:\n            _context.next = 15;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            _context.next = 12;\n            return Promise.resolve(_context.t0);\n\n          case 12:\n            error = _context.sent;\n            _context.next = 15;\n            return put(getListFail(error));\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}, {\n  on: getProfile,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return performerService.findOne(data.payload);\n\n          case 3:\n            resp = _context2.sent;\n            _context2.next = 6;\n            return put(getProfileSuccess(resp.data));\n\n          case 6:\n            _context2.next = 15;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.next = 12;\n            return Promise.resolve(_context2.t0);\n\n          case 12:\n            error = _context2.sent;\n            _context2.next = 15;\n            return put(getProfileFail(error));\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}];\nexport default flatten([createSagas(performerSagas)]);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/performer/sagas.ts"],"names":["flatten","put","createSagas","performerService","getList","getListFail","getListSuccess","getProfile","getProfileFail","getProfileSuccess","performerSagas","on","worker","data","search","payload","resp","Promise","resolve","error","findOne"],"mappings":";AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,SACEC,OADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,UAJF,EAKEC,cALF,EAMEC,iBANF,QAOO,WAPP;AASA,IAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,EAAE,EAAEP,OADN;AAEIQ,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMV,gBAAgB,CAACW,MAAjB,CAAwBD,IAAI,CAACE,OAA7B,CAAN;;AAJnB;AAIYC,YAAAA,IAJZ;AAAA;AAKM,mBAAMf,GAAG,CAACK,cAAc,CAACU,IAAI,CAACH,IAAN,CAAf,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMI,OAAO,CAACC,OAAR,aAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAMlB,GAAG,CAACI,WAAW,CAACc,KAAD,CAAZ,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADqB,EAarB;AACER,EAAAA,EAAE,EAAEJ,UADN;AAEIK,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMV,gBAAgB,CAACiB,OAAjB,CAAyBP,IAAI,CAACE,OAA9B,CAAN;;AAJnB;AAIYC,YAAAA,IAJZ;AAAA;AAKM,mBAAMf,GAAG,CAACQ,iBAAiB,CAACO,IAAI,CAACH,IAAN,CAAlB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMI,OAAO,CAACC,OAAR,cAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAMlB,GAAG,CAACO,cAAc,CAACW,KAAD,CAAf,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAbqB,CAAvB;AA2BA,eAAenB,OAAO,CAAC,CAACE,WAAW,CAACQ,cAAD,CAAZ,CAAD,CAAtB","sourcesContent":["import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { performerService } from '@services/index';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  getList,\n  getListFail,\n  getListSuccess,\n  getProfile,\n  getProfileFail,\n  getProfileSuccess\n} from './actions';\n\nconst performerSagas = [\n  {\n    on: getList,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield performerService.search(data.payload);\n        yield put(getListSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getListFail(error));\n      }\n    }\n  },\n  {\n    on: getProfile,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield performerService.findOne(data.payload);\n        yield put(getProfileSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getProfileFail(error));\n      }\n    }\n  }\n];\n\nexport default flatten([createSagas(performerSagas)]);\n"]},"metadata":{},"sourceType":"module"}