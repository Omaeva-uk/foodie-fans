{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { Avatar, message, Tooltip } from 'antd';\nimport { TickIcon } from 'src/icons';\nimport { HeartFilled, HeartOutlined } from '@ant-design/icons';\nimport Link from 'next/link';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { followService } from 'src/services';\nimport './performer.less';\n\nclass PerformerCard extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isFollowed: false,\n      requesting: false\n    });\n\n    _defineProperty(this, \"handleJoinStream\", e => {\n      e.preventDefault();\n      const {\n        user,\n        performer\n      } = this.props;\n\n      if (!user._id) {\n        message.error('Please log in or register!');\n        return;\n      }\n\n      if (user.isPerformer) return;\n\n      if (!(performer !== null && performer !== void 0 && performer.isSubscribed)) {\n        message.error('Please subscribe to this model!');\n        return;\n      }\n\n      Router.push({\n        pathname: '/streaming/details',\n        query: {\n          performer: JSON.stringify(performer),\n          username: (performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)\n        }\n      }, `/streaming/${(performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)}`);\n    });\n\n    _defineProperty(this, \"handleFollow\", async () => {\n      const {\n        performer,\n        user,\n        onFollow\n      } = this.props;\n      const {\n        isFollowed,\n        requesting\n      } = this.state;\n      if (requesting || user.isPerformer) return;\n\n      if (!user._id) {\n        message.error('Please log in or register!');\n        return;\n      }\n\n      try {\n        this.setState({\n          requesting: true\n        });\n\n        if (!isFollowed) {\n          await followService.create(performer === null || performer === void 0 ? void 0 : performer._id);\n          this.setState({\n            isFollowed: true,\n            requesting: false\n          });\n        } else {\n          await followService.delete(performer === null || performer === void 0 ? void 0 : performer._id);\n          this.setState({\n            isFollowed: false,\n            requesting: false\n          });\n        }\n\n        onFollow && onFollow();\n      } catch (e) {\n        const error = await e;\n        message.error(error.message || 'Error occured, please try again later');\n        this.setState({\n          requesting: false\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    const {\n      performer\n    } = this.props;\n    this.setState({\n      isFollowed: !!(performer !== null && performer !== void 0 && performer.isFollowed)\n    });\n  }\n\n  render() {\n    const {\n      performer,\n      countries,\n      user\n    } = this.props;\n    const {\n      isFollowed\n    } = this.state;\n    const country = countries && countries.length && countries.find(c => c.code === performer.country);\n    return __jsx(\"div\", {\n      className: \"model-card\",\n      style: {\n        backgroundImage: `url(${(performer === null || performer === void 0 ? void 0 : performer.cover) || '/static/banner-image.jpg'})`\n      }\n    }, __jsx(\"div\", {\n      className: \"hovering\"\n    }, (performer === null || performer === void 0 ? void 0 : performer.isFreeSubscription) && __jsx(\"span\", {\n      className: \"card-free\"\n    }, \"Free\"), (performer === null || performer === void 0 ? void 0 : performer.live) > 0 && __jsx(\"span\", {\n      className: \"live-status\",\n      \"aria-hidden\": true,\n      onClick: this.handleJoinStream.bind(this)\n    }, \"Live\"), __jsx(\"span\", {\n      className: \"card-age\"\n    }, moment().diff(moment(performer.dateOfBirth), 'years') > 0 && `${moment().diff(moment(performer.dateOfBirth), 'years')}+`), __jsx(\"div\", {\n      className: \"card-img\"\n    }, __jsx(Avatar, {\n      alt: \"avatar\",\n      src: (performer === null || performer === void 0 ? void 0 : performer.avatar) || '/static/no-avatar.png'\n    })), __jsx(\"span\", {\n      className: (performer === null || performer === void 0 ? void 0 : performer.isOnline) > 0 ? 'online-status active' : 'online-status'\n    }), __jsx(Link, {\n      href: {\n        pathname: '/model/profile',\n        query: {\n          username: (performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)\n        }\n      },\n      as: `/${(performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)}`\n    }, __jsx(\"a\", null, __jsx(\"div\", {\n      className: \"model-name\"\n    }, __jsx(\"div\", {\n      className: \"name\"\n    }, (performer === null || performer === void 0 ? void 0 : performer.name) || 'N/A', ' ', country && __jsx(\"img\", {\n      alt: \"performer-country\",\n      className: \"model-country\",\n      src: country === null || country === void 0 ? void 0 : country.flag\n    }), ' ', (performer === null || performer === void 0 ? void 0 : performer.verifiedAccount) && __jsx(TickIcon, null)), __jsx(\"p\", null, `@${(performer === null || performer === void 0 ? void 0 : performer.username) || 'n/a'}`)))), !(user !== null && user !== void 0 && user.isPerformer) && __jsx(\"a\", {\n      \"aria-hidden\": true,\n      onClick: () => this.handleFollow(),\n      className: !isFollowed ? 'follow-btn' : 'follow-btn active'\n    }, isFollowed ? __jsx(Tooltip, {\n      title: \"Following\"\n    }, __jsx(HeartFilled, null)) : __jsx(Tooltip, {\n      title: \"Follow\"\n    }, __jsx(HeartOutlined, null)))));\n  }\n\n}\n\nconst maptStateToProps = state => ({\n  user: _objectSpread({}, state.user.current)\n});\n\nexport default connect(maptStateToProps)(PerformerCard);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/card.tsx"],"names":["PureComponent","Avatar","message","Tooltip","TickIcon","HeartFilled","HeartOutlined","Link","moment","connect","Router","followService","PerformerCard","isFollowed","requesting","e","preventDefault","user","performer","props","_id","error","isPerformer","isSubscribed","push","pathname","query","JSON","stringify","username","onFollow","state","setState","create","delete","componentDidMount","render","countries","country","length","find","c","code","backgroundImage","cover","isFreeSubscription","live","handleJoinStream","bind","diff","dateOfBirth","avatar","isOnline","name","flag","verifiedAccount","handleFollow","maptStateToProps","current"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport { Avatar, message, Tooltip } from 'antd';\nimport { TickIcon } from 'src/icons';\nimport { HeartFilled, HeartOutlined } from '@ant-design/icons';\nimport { IPerformer, ICountry, IUser } from 'src/interfaces';\nimport Link from 'next/link';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { followService } from 'src/services';\nimport './performer.less';\n\ninterface IProps {\n  performer: IPerformer;\n  countries: ICountry[];\n  user: IUser;\n  onFollow?: Function;\n}\n\nclass PerformerCard extends PureComponent<IProps> {\n  state = {\n    isFollowed: false,\n    requesting: false\n  };\n\n  componentDidMount(): void {\n    const { performer } = this.props;\n    this.setState({ isFollowed: !!performer?.isFollowed });\n  }\n\n  handleJoinStream = (e) => {\n    e.preventDefault();\n    const { user, performer } = this.props;\n    if (!user._id) {\n      message.error('Please log in or register!');\n      return;\n    }\n    if (user.isPerformer) return;\n    if (!performer?.isSubscribed) {\n      message.error('Please subscribe to this model!');\n      return;\n    }\n    Router.push({\n      pathname: '/streaming/details',\n      query: {\n        performer: JSON.stringify(performer),\n        username: performer?.username || performer?._id\n      }\n    }, `/streaming/${performer?.username || performer?._id}`);\n  }\n\n  handleFollow = async () => {\n    const { performer, user, onFollow } = this.props;\n    const { isFollowed, requesting } = this.state;\n    if (requesting || user.isPerformer) return;\n    if (!user._id) {\n      message.error('Please log in or register!');\n      return;\n    }\n    try {\n      this.setState({ requesting: true });\n      if (!isFollowed) {\n        await followService.create(performer?._id);\n        this.setState({ isFollowed: true, requesting: false });\n      } else {\n        await followService.delete(performer?._id);\n        this.setState({ isFollowed: false, requesting: false });\n      }\n      onFollow && onFollow();\n    } catch (e) {\n      const error = await e;\n      message.error(error.message || 'Error occured, please try again later');\n      this.setState({ requesting: false });\n    }\n  };\n\n  render() {\n    const { performer, countries, user } = this.props;\n    const { isFollowed } = this.state;\n    const country = countries && countries.length && countries.find((c) => c.code === performer.country);\n\n    return (\n      <div\n        className=\"model-card\"\n        style={{\n          backgroundImage: `url(${performer?.cover || '/static/banner-image.jpg'})`\n        }}\n      >\n        <div className=\"hovering\">\n          {performer?.isFreeSubscription && (\n          <span className=\"card-free\">Free</span>\n          )}\n          {performer?.live > 0 && <span className=\"live-status\" aria-hidden onClick={this.handleJoinStream.bind(this)}>Live</span>}\n\n          <span className=\"card-age\">\n            {moment().diff(moment(performer.dateOfBirth), 'years') > 0 && `${moment().diff(moment(performer.dateOfBirth), 'years')}+`}\n          </span>\n          <div className=\"card-img\">\n            <Avatar alt=\"avatar\" src={performer?.avatar || '/static/no-avatar.png'} />\n          </div>\n          <span className={performer?.isOnline > 0 ? 'online-status active' : 'online-status'} />\n          <Link\n            href={{\n              pathname: '/model/profile',\n              query: { username: performer?.username || performer?._id }\n            }}\n            as={`/${performer?.username || performer?._id}`}\n          >\n            <a>\n              <div className=\"model-name\">\n                <div className=\"name\">\n                  {performer?.name || 'N/A'}\n                  {' '}\n                  {country && (\n                  <img alt=\"performer-country\" className=\"model-country\" src={country?.flag} />\n                  )}\n                  {' '}\n                  {performer?.verifiedAccount && <TickIcon />}\n                </div>\n                <p>\n                  {`@${performer?.username || 'n/a'}`}\n                </p>\n              </div>\n\n            </a>\n          </Link>\n          {!user?.isPerformer && (\n            <a aria-hidden onClick={() => this.handleFollow()} className={!isFollowed ? 'follow-btn' : 'follow-btn active'}>\n              {isFollowed ? <Tooltip title=\"Following\"><HeartFilled /></Tooltip> : <Tooltip title=\"Follow\"><HeartOutlined /></Tooltip>}\n            </a>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst maptStateToProps = (state) => ({ user: { ...state.user.current } });\nexport default connect(maptStateToProps)(PerformerCard);\n"]},"metadata":{},"sourceType":"module"}