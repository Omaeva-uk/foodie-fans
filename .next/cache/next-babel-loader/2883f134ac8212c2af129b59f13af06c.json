{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { Button } from 'antd';\nexport var StripeConnectForm = /*#__PURE__*/function (_PureComponent) {\n  _inherits(StripeConnectForm, _PureComponent);\n\n  var _super = _createSuper(StripeConnectForm);\n\n  function StripeConnectForm() {\n    _classCallCheck(this, StripeConnectForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StripeConnectForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          stripeAccount = _this$props.stripeAccount,\n          loginUrl = _this$props.loginUrl,\n          onConnectAccount = _this$props.onConnectAccount;\n      return __jsx(\"div\", {\n        className: \"account-form\"\n      }, __jsx(\"h4\", {\n        className: \"text-center\"\n      }, \"The Stripe connect account will be used to automatically payouts. You can also save your Banking or PayPal account to request manual payouts\"), stripeAccount && stripeAccount.payoutsEnabled && stripeAccount.detailsSubmitted && __jsx(\"div\", {\n        className: \"text-center\"\n      }, __jsx(\"p\", null, \"You are connected with Stripe!\"), __jsx(Button, {\n        className: \"primary\"\n      }, __jsx(\"a\", {\n        href: loginUrl,\n        target: \"_blank\",\n        rel: \"noreferrer\"\n      }, \"Click here to log in\")), __jsx(Button, {\n        className: \"secondary\",\n        disabled: loading,\n        loading: loading,\n        onClick: onConnectAccount.bind(this)\n      }, \"Reconnect by another account\")), (!stripeAccount || stripeAccount && !stripeAccount.payoutsEnabled || stripeAccount && !stripeAccount.detailsSubmitted) && __jsx(\"div\", null, __jsx(\"p\", null, \"Please click here to complete the onboarding process & start earning money.\"), __jsx(Button, {\n        className: \"secondary\",\n        disabled: loading,\n        loading: loading,\n        onClick: onConnectAccount.bind(this)\n      }, \"Connect with Stripe\")));\n    }\n  }]);\n\n  return StripeConnectForm;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/stripe-connect-form.tsx"],"names":["PureComponent","Button","StripeConnectForm","props","loading","stripeAccount","loginUrl","onConnectAccount","payoutsEnabled","detailsSubmitted","bind"],"mappings":";;;;;;;;;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SACEC,MADF,QAEO,MAFP;AAWA,WAAaC,iBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS;AACP,wBAEI,KAAKC,KAFT;AAAA,UACEC,OADF,eACEA,OADF;AAAA,UACWC,aADX,eACWA,aADX;AAAA,UAC0BC,QAD1B,eAC0BA,QAD1B;AAAA,UACoCC,gBADpC,eACoCA,gBADpC;AAGA,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,wJADF,EAEGF,aAAa,IAAIA,aAAa,CAACG,cAA/B,IAAiDH,aAAa,CAACI,gBAA/D,IACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,kDADF,EAEE,MAAC,MAAD;AAAQ,QAAA,SAAS,EAAC;AAAlB,SACE;AAAG,QAAA,IAAI,EAAEH,QAAT;AAAmB,QAAA,MAAM,EAAC,QAA1B;AAAmC,QAAA,GAAG,EAAC;AAAvC,gCADF,CAFF,EAOE,MAAC,MAAD;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,QAAQ,EAAEF,OAFZ;AAGE,QAAA,OAAO,EAAEA,OAHX;AAIE,QAAA,OAAO,EAAEG,gBAAgB,CAACG,IAAjB,CAAsB,IAAtB;AAJX,wCAPF,CAHJ,EAoBG,CAAC,CAACL,aAAD,IAAmBA,aAAa,IAAI,CAACA,aAAa,CAACG,cAAnD,IAAuEH,aAAa,IAAI,CAACA,aAAa,CAACI,gBAAxG,KACC,mBACE,+FADF,EAEE,MAAC,MAAD;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,QAAQ,EAAEL,OAFZ;AAGE,QAAA,OAAO,EAAEA,OAHX;AAIE,QAAA,OAAO,EAAEG,gBAAgB,CAACG,IAAjB,CAAsB,IAAtB;AAJX,+BAFF,CArBJ,CADF;AAoCD;AAzCH;;AAAA;AAAA,EAAuCV,aAAvC","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  Button\n} from 'antd';\n\ninterface IProps {\n  loading: boolean;\n  stripeAccount: any;\n  loginUrl: string;\n  onConnectAccount: Function;\n}\n\nexport class StripeConnectForm extends PureComponent<IProps> {\n  render() {\n    const {\n      loading, stripeAccount, loginUrl, onConnectAccount\n    } = this.props;\n    return (\n      <div className=\"account-form\">\n        <h4 className=\"text-center\">The Stripe connect account will be used to automatically payouts. You can also save your Banking or PayPal account to request manual payouts</h4>\n        {stripeAccount && stripeAccount.payoutsEnabled && stripeAccount.detailsSubmitted && (\n          <div className=\"text-center\">\n            <p>You are connected with Stripe!</p>\n            <Button className=\"primary\">\n              <a href={loginUrl} target=\"_blank\" rel=\"noreferrer\">\n                Click here to log in\n              </a>\n            </Button>\n            <Button\n              className=\"secondary\"\n              disabled={loading}\n              loading={loading}\n              onClick={onConnectAccount.bind(this)}\n            >\n              Reconnect by another account\n            </Button>\n          </div>\n        )}\n        {(!stripeAccount || (stripeAccount && !stripeAccount.payoutsEnabled) || (stripeAccount && !stripeAccount.detailsSubmitted)) && (\n          <div>\n            <p>Please click here to complete the onboarding process & start earning money.</p>\n            <Button\n              className=\"secondary\"\n              disabled={loading}\n              loading={loading}\n              onClick={onConnectAccount.bind(this)}\n            >\n              Connect with Stripe\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}