{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { feedService } from '@services/index';\nimport { getFeeds, getFeedsSuccess, getFeedsFail, moreFeeds, moreFeedsSuccess, moreFeedsFail, getVideoFeeds, getVideoFeedsFail, getVideoFeedsSuccess, getPhotoFeeds, getPhotoFeedsFail, getPhotoFeedsSuccess, moreVideoFeeds, morePhotoFeeds, morePhotoFeedsSuccess, morePhotoFeedsFail } from './actions';\nvar performerSagas = [{\n  on: getFeeds,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!data.payload.isHome) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return feedService.userHomeFeeds(data.payload);\n\n          case 4:\n            _context.t0 = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.next = 9;\n            return feedService.userSearch(data.payload);\n\n          case 9:\n            _context.t0 = _context.sent;\n\n          case 10:\n            resp = _context.t0;\n            _context.next = 13;\n            return put(getFeedsSuccess(resp.data));\n\n          case 13:\n            _context.next = 22;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t1 = _context[\"catch\"](0);\n            _context.next = 19;\n            return Promise.resolve(_context.t1);\n\n          case 19:\n            error = _context.sent;\n            _context.next = 22;\n            return put(getFeedsFail(error));\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, worker, null, [[0, 15]]);\n  })\n}, {\n  on: moreFeeds,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!data.payload.isHome) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.next = 4;\n            return feedService.userHomeFeeds(data.payload);\n\n          case 4:\n            _context2.t0 = _context2.sent;\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.next = 9;\n            return feedService.userSearch(data.payload);\n\n          case 9:\n            _context2.t0 = _context2.sent;\n\n          case 10:\n            resp = _context2.t0;\n            _context2.next = 13;\n            return put(moreFeedsSuccess(resp.data));\n\n          case 13:\n            _context2.next = 22;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t1 = _context2[\"catch\"](0);\n            _context2.next = 19;\n            return Promise.resolve(_context2.t1);\n\n          case 19:\n            error = _context2.sent;\n            _context2.next = 22;\n            return put(moreFeedsFail(error));\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, worker, null, [[0, 15]]);\n  })\n}, {\n  on: getVideoFeeds,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return feedService.userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {\n              postType: 'video'\n            }));\n\n          case 3:\n            resp = _context3.sent;\n            _context3.next = 6;\n            return put(getVideoFeedsSuccess(resp.data));\n\n          case 6:\n            _context3.next = 15;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            _context3.next = 12;\n            return Promise.resolve(_context3.t0);\n\n          case 12:\n            error = _context3.sent;\n            _context3.next = 15;\n            return put(getVideoFeedsFail(error));\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}, {\n  on: moreVideoFeeds,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return feedService.userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {\n              postType: 'video'\n            }));\n\n          case 3:\n            resp = _context4.sent;\n            _context4.next = 6;\n            return put(moreFeedsSuccess(resp.data));\n\n          case 6:\n            _context4.next = 15;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            _context4.next = 12;\n            return Promise.resolve(_context4.t0);\n\n          case 12:\n            error = _context4.sent;\n            _context4.next = 15;\n            return put(moreFeedsFail(error));\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}, {\n  on: getPhotoFeeds,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return feedService.userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {\n              postType: 'photo'\n            }));\n\n          case 3:\n            resp = _context5.sent;\n            _context5.next = 6;\n            return put(getPhotoFeedsSuccess(resp.data));\n\n          case 6:\n            _context5.next = 15;\n            break;\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](0);\n            _context5.next = 12;\n            return Promise.resolve(_context5.t0);\n\n          case 12:\n            error = _context5.sent;\n            _context5.next = 15;\n            return put(getPhotoFeedsFail(error));\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}, {\n  on: morePhotoFeeds,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return feedService.userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {\n              postType: 'photo'\n            }));\n\n          case 3:\n            resp = _context6.sent;\n            _context6.next = 6;\n            return put(morePhotoFeedsSuccess(resp.data));\n\n          case 6:\n            _context6.next = 15;\n            break;\n\n          case 8:\n            _context6.prev = 8;\n            _context6.t0 = _context6[\"catch\"](0);\n            _context6.next = 12;\n            return Promise.resolve(_context6.t0);\n\n          case 12:\n            error = _context6.sent;\n            _context6.next = 15;\n            return put(morePhotoFeedsFail(error));\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}];\nexport default flatten([createSagas(performerSagas)]);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/feed/sagas.ts"],"names":["flatten","put","createSagas","feedService","getFeeds","getFeedsSuccess","getFeedsFail","moreFeeds","moreFeedsSuccess","moreFeedsFail","getVideoFeeds","getVideoFeedsFail","getVideoFeedsSuccess","getPhotoFeeds","getPhotoFeedsFail","getPhotoFeedsSuccess","moreVideoFeeds","morePhotoFeeds","morePhotoFeedsSuccess","morePhotoFeedsFail","performerSagas","on","worker","data","payload","isHome","userHomeFeeds","userSearch","resp","Promise","resolve","error","postType"],"mappings":";;;;;;;AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,SACEC,QADF,EACYC,eADZ,EAC6BC,YAD7B,EAEEC,SAFF,EAEaC,gBAFb,EAE+BC,aAF/B,EAGEC,aAHF,EAGiBC,iBAHjB,EAGoCC,oBAHpC,EAIEC,aAJF,EAIiBC,iBAJjB,EAIoCC,oBAJpC,EAI0DC,cAJ1D,EAI0EC,cAJ1E,EAI0FC,qBAJ1F,EAIiHC,kBAJjH,QAKO,WALP;AAOA,IAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,EAAE,EAAEjB,QADN;AAEIkB,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,iBAImBA,IAAI,CAACC,OAAL,CAAaC,MAJhC;AAAA;AAAA;AAAA;;AAAA;AAIyC,mBAAMtB,WAAW,CAACuB,aAAZ,CAA0BH,IAAI,CAACC,OAA/B,CAAN;;AAJzC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAIyF,mBAAMrB,WAAW,CAACwB,UAAZ,CAAuBJ,IAAI,CAACC,OAA5B,CAAN;;AAJzF;AAAA;;AAAA;AAIYI,YAAAA,IAJZ;AAAA;AAKM,mBAAM3B,GAAG,CAACI,eAAe,CAACuB,IAAI,CAACL,IAAN,CAAhB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMM,OAAO,CAACC,OAAR,aAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAM9B,GAAG,CAACK,YAAY,CAACyB,KAAD,CAAb,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADqB,EAarB;AACEV,EAAAA,EAAE,EAAEd,SADN;AAEIe,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,iBAImBA,IAAI,CAACC,OAAL,CAAaC,MAJhC;AAAA;AAAA;AAAA;;AAAA;AAIyC,mBAAMtB,WAAW,CAACuB,aAAZ,CAA0BH,IAAI,CAACC,OAA/B,CAAN;;AAJzC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAIyF,mBAAMrB,WAAW,CAACwB,UAAZ,CAAuBJ,IAAI,CAACC,OAA5B,CAAN;;AAJzF;AAAA;;AAAA;AAIYI,YAAAA,IAJZ;AAAA;AAKM,mBAAM3B,GAAG,CAACO,gBAAgB,CAACoB,IAAI,CAACL,IAAN,CAAjB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMM,OAAO,CAACC,OAAR,cAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAM9B,GAAG,CAACQ,aAAa,CAACsB,KAAD,CAAd,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAbqB,EAyBrB;AACEV,EAAAA,EAAE,EAAEX,aADN;AAEIY,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMpB,WAAW,CAACwB,UAAZ,iCAA4BJ,IAAI,CAACC,OAAjC;AAA0CQ,cAAAA,QAAQ,EAAE;AAApD,eAAN;;AAJnB;AAIYJ,YAAAA,IAJZ;AAAA;AAKM,mBAAM3B,GAAG,CAACW,oBAAoB,CAACgB,IAAI,CAACL,IAAN,CAArB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMM,OAAO,CAACC,OAAR,cAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAM9B,GAAG,CAACU,iBAAiB,CAACoB,KAAD,CAAlB,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAzBqB,EAqCrB;AACEV,EAAAA,EAAE,EAAEL,cADN;AAEIM,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMpB,WAAW,CAACwB,UAAZ,iCAA4BJ,IAAI,CAACC,OAAjC;AAA0CQ,cAAAA,QAAQ,EAAE;AAApD,eAAN;;AAJnB;AAIYJ,YAAAA,IAJZ;AAAA;AAKM,mBAAM3B,GAAG,CAACO,gBAAgB,CAACoB,IAAI,CAACL,IAAN,CAAjB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMM,OAAO,CAACC,OAAR,cAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAM9B,GAAG,CAACQ,aAAa,CAACsB,KAAD,CAAd,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CArCqB,EAkDrB;AACEV,EAAAA,EAAE,EAAER,aADN;AAEIS,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMpB,WAAW,CAACwB,UAAZ,iCAA4BJ,IAAI,CAACC,OAAjC;AAA0CQ,cAAAA,QAAQ,EAAE;AAApD,eAAN;;AAJnB;AAIYJ,YAAAA,IAJZ;AAAA;AAKM,mBAAM3B,GAAG,CAACc,oBAAoB,CAACa,IAAI,CAACL,IAAN,CAArB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMM,OAAO,CAACC,OAAR,cAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAM9B,GAAG,CAACa,iBAAiB,CAACiB,KAAD,CAAlB,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAlDqB,EA8DrB;AACEV,EAAAA,EAAE,EAAEJ,cADN;AAEIK,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMpB,WAAW,CAACwB,UAAZ,iCAA4BJ,IAAI,CAACC,OAAjC;AAA0CQ,cAAAA,QAAQ,EAAE;AAApD,eAAN;;AAJnB;AAIYJ,YAAAA,IAJZ;AAAA;AAKM,mBAAM3B,GAAG,CAACiB,qBAAqB,CAACU,IAAI,CAACL,IAAN,CAAtB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMM,OAAO,CAACC,OAAR,cAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAM9B,GAAG,CAACkB,kBAAkB,CAACY,KAAD,CAAnB,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CA9DqB,CAAvB;AA4EA,eAAe/B,OAAO,CAAC,CAACE,WAAW,CAACkB,cAAD,CAAZ,CAAD,CAAtB","sourcesContent":["import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { feedService } from '@services/index';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  getFeeds, getFeedsSuccess, getFeedsFail,\n  moreFeeds, moreFeedsSuccess, moreFeedsFail,\n  getVideoFeeds, getVideoFeedsFail, getVideoFeedsSuccess,\n  getPhotoFeeds, getPhotoFeedsFail, getPhotoFeedsSuccess, moreVideoFeeds, morePhotoFeeds, morePhotoFeedsSuccess, morePhotoFeedsFail\n} from './actions';\n\nconst performerSagas = [\n  {\n    on: getFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = data.payload.isHome ? yield feedService.userHomeFeeds(data.payload) : yield feedService.userSearch(data.payload);\n        yield put(getFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getFeedsFail(error));\n      }\n    }\n  },\n  {\n    on: moreFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = data.payload.isHome ? yield feedService.userHomeFeeds(data.payload) : yield feedService.userSearch(data.payload);\n        yield put(moreFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(moreFeedsFail(error));\n      }\n    }\n  },\n  {\n    on: getVideoFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield feedService.userSearch({ ...data.payload, postType: 'video' });\n        yield put(getVideoFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getVideoFeedsFail(error));\n      }\n    }\n  },\n  {\n    on: moreVideoFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield feedService.userSearch({ ...data.payload, postType: 'video' });\n        yield put(moreFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(moreFeedsFail(error));\n      }\n    }\n  },\n\n  {\n    on: getPhotoFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield feedService.userSearch({ ...data.payload, postType: 'photo' });\n        yield put(getPhotoFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getPhotoFeedsFail(error));\n      }\n    }\n  },\n  {\n    on: morePhotoFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield feedService.userSearch({ ...data.payload, postType: 'photo' });\n        yield put(morePhotoFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(morePhotoFeedsFail(error));\n      }\n    }\n  }\n];\n\nexport default flatten([createSagas(performerSagas)]);\n"]},"metadata":{},"sourceType":"module"}