{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { getComments, getCommentsSuccess, getCommentsFail, moreComment, moreCommentSuccess, moreCommentFail, createComment, createCommentFail, createCommentSuccess, deleteCommentSuccess } from './actions';\nconst initialState = {\n  activeObject: {},\n  commentMapping: {},\n  comment: {\n    requesting: false,\n    error: null,\n    success: false,\n    data: null\n  }\n};\nconst commentReducers = [{\n  on: getComments,\n\n  reducer(state, data) {\n    const {\n      objectId\n    } = data.payload;\n\n    const nextState = _objectSpread({}, state);\n\n    nextState.activeObject._id = objectId;\n    nextState.commentMapping[objectId] = {\n      requesting: true,\n      items: [],\n      total: 0\n    };\n    return _objectSpread({}, nextState);\n  }\n\n}, {\n  on: getCommentsSuccess,\n\n  reducer(state, data) {\n    const nextState = _objectSpread({}, state);\n\n    const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : nextState.activeObject._id;\n\n    if (objectId) {\n      nextState.commentMapping[objectId] = {\n        items: data.payload.data,\n        total: data.payload.total,\n        requesting: false\n      };\n    }\n\n    return _objectSpread({}, nextState);\n  }\n\n}, {\n  on: getCommentsFail,\n\n  reducer(state, data) {\n    const nextState = _objectSpread({}, state);\n\n    const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : nextState.activeObject._id;\n\n    if (objectId) {\n      nextState.commentMapping[objectId] = {\n        items: [],\n        total: 0,\n        requesting: false\n      };\n    }\n\n    return _objectSpread({}, nextState);\n  }\n\n}, {\n  on: moreComment,\n\n  reducer(state, data) {\n    const {\n      objectId\n    } = data.payload;\n\n    const nextState = _objectSpread({}, state);\n\n    nextState.commentMapping[objectId].requesting = true;\n    return _objectSpread({}, state);\n  }\n\n}, {\n  on: moreCommentSuccess,\n\n  reducer(state, data) {\n    const nextState = _objectSpread({}, state);\n\n    const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : null;\n\n    if (objectId) {\n      nextState.commentMapping[objectId] = {\n        items: [...nextState.commentMapping[objectId].items, ...data.payload.data],\n        total: data.payload.total,\n        requesting: false\n      };\n    }\n\n    return _objectSpread({}, nextState);\n  }\n\n}, {\n  on: moreCommentFail,\n\n  reducer(state, data) {\n    const nextState = _objectSpread({}, state);\n\n    const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : null;\n\n    if (objectId) {\n      nextState.commentMapping[objectId] = {\n        items: [],\n        total: 0,\n        requesting: false\n      };\n    }\n\n    return _objectSpread({}, nextState);\n  }\n\n}, {\n  on: createComment,\n\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      comment: _objectSpread(_objectSpread({}, state.comment), {}, {\n        requesting: true,\n        error: null,\n        success: false\n      })\n    });\n  }\n\n}, {\n  on: createCommentSuccess,\n\n  reducer(state, data) {\n    var _nextState$commentMap;\n\n    const nextState = _objectSpread({}, state);\n\n    const {\n      objectId\n    } = data.payload;\n\n    if (!(nextState !== null && nextState !== void 0 && (_nextState$commentMap = nextState.commentMapping[objectId]) !== null && _nextState$commentMap !== void 0 && _nextState$commentMap.items)) {\n      nextState.commentMapping[objectId].items = [];\n      nextState.commentMapping[objectId].total = 0;\n    }\n\n    nextState.commentMapping[objectId].items.unshift(data.payload);\n    nextState.commentMapping[objectId].total += 1;\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      comment: {\n        requesting: false,\n        data: data.payload,\n        error: null,\n        success: true\n      }\n    });\n  }\n\n}, {\n  on: createCommentFail,\n\n  reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      comment: {\n        requesting: false,\n        data: null,\n        error: data.payload,\n        success: false\n      }\n    });\n  }\n\n}, {\n  on: deleteCommentSuccess,\n\n  reducer(state, data) {\n    const nextState = _objectSpread({}, state);\n\n    const {\n      objectId,\n      _id\n    } = data.payload;\n    nextState.commentMapping[objectId].items.splice(nextState.commentMapping[objectId].items.findIndex(item => item._id === _id), 1);\n    nextState.commentMapping[objectId].total -= 1;\n    return _objectSpread({}, nextState);\n  }\n\n}];\nexport default merge({}, createReducers('comment', [commentReducers], initialState));","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/comment/reducers.ts"],"names":["merge","createReducers","getComments","getCommentsSuccess","getCommentsFail","moreComment","moreCommentSuccess","moreCommentFail","createComment","createCommentFail","createCommentSuccess","deleteCommentSuccess","initialState","activeObject","commentMapping","comment","requesting","error","success","data","commentReducers","on","reducer","state","objectId","payload","nextState","_id","items","total","length","unshift","splice","findIndex","item"],"mappings":"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","sourcesContent":["import { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { IReduxAction } from '@interfaces/redux';\nimport {\n  getComments, getCommentsSuccess, getCommentsFail,\n  moreComment, moreCommentSuccess, moreCommentFail,\n  createComment, createCommentFail, createCommentSuccess,\n  deleteCommentSuccess\n} from './actions';\n\nconst initialState = {\n  activeObject: {},\n  commentMapping: {},\n  comment: {\n    requesting: false,\n    error: null,\n    success: false,\n    data: null\n  }\n};\n\nconst commentReducers = [\n  {\n    on: getComments,\n    reducer(state: any, data: IReduxAction<any>) {\n      const { objectId } = data.payload;\n      const nextState = { ...state };\n      nextState.activeObject._id = objectId;\n      nextState.commentMapping[objectId] = {\n        requesting: true,\n        items: [],\n        total: 0\n      };\n      return {\n        ...nextState\n      };\n    }\n  },\n  {\n    on: getCommentsSuccess,\n    reducer(state: any, data: any) {\n      const nextState = { ...state };\n      const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : nextState.activeObject._id;\n      if (objectId) {\n        nextState.commentMapping[objectId] = {\n          items: data.payload.data,\n          total: data.payload.total,\n          requesting: false\n        };\n      }\n      return {\n        ...nextState\n      };\n    }\n  },\n  {\n    on: getCommentsFail,\n    reducer(state: any, data: any) {\n      const nextState = { ...state };\n      const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : nextState.activeObject._id;\n      if (objectId) {\n        nextState.commentMapping[objectId] = {\n          items: [],\n          total: 0,\n          requesting: false\n        };\n      }\n      return {\n        ...nextState\n      };\n    }\n  },\n  {\n    on: moreComment,\n    reducer(state: any, data: IReduxAction<any>) {\n      const { objectId } = data.payload;\n      const nextState = { ...state };\n      nextState.commentMapping[objectId].requesting = true;\n      return {\n        ...state\n      };\n    }\n  },\n  {\n    on: moreCommentSuccess,\n    reducer(state: any, data: any) {\n      const nextState = { ...state };\n      const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : null;\n      if (objectId) {\n        nextState.commentMapping[objectId] = {\n          items: [...nextState.commentMapping[objectId].items, ...data.payload.data],\n          total: data.payload.total,\n          requesting: false\n        };\n      }\n      return {\n        ...nextState\n      };\n    }\n  },\n  {\n    on: moreCommentFail,\n    reducer(state: any, data: any) {\n      const nextState = { ...state };\n      const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : null;\n      if (objectId) {\n        nextState.commentMapping[objectId] = {\n          items: [],\n          total: 0,\n          requesting: false\n        };\n      }\n      return {\n        ...nextState\n      };\n    }\n  },\n  {\n    on: createComment,\n    reducer(state: any) {\n      return {\n        ...state,\n        comment: {\n          ...state.comment,\n          requesting: true,\n          error: null,\n          success: false\n        }\n      };\n    }\n  },\n  {\n    on: createCommentSuccess,\n    reducer(state: any, data: any) {\n      const nextState = { ...state };\n      const { objectId } = data.payload;\n      if (!nextState?.commentMapping[objectId]?.items) {\n        nextState.commentMapping[objectId].items = [];\n        nextState.commentMapping[objectId].total = 0;\n      }\n      nextState.commentMapping[objectId].items.unshift(data.payload);\n      nextState.commentMapping[objectId].total += 1;\n      return {\n        ...nextState,\n        comment: {\n          requesting: false,\n          data: data.payload,\n          error: null,\n          success: true\n        }\n      };\n    }\n  },\n  {\n    on: createCommentFail,\n    reducer(state: any, data: any) {\n      return {\n        ...state,\n        comment: {\n          requesting: false,\n          data: null,\n          error: data.payload,\n          success: false\n        }\n      };\n    }\n  },\n  {\n    on: deleteCommentSuccess,\n    reducer(state: any, data: any) {\n      const nextState = { ...state };\n      const { objectId, _id } = data.payload;\n      nextState.commentMapping[objectId].items.splice(\n        nextState.commentMapping[objectId].items.findIndex((item) => item._id === _id),\n        1\n      );\n      nextState.commentMapping[objectId].total -= 1;\n      return {\n        ...nextState\n      };\n    }\n  }\n];\n\nexport default merge({}, createReducers('comment', [commentReducers], initialState));\n"]},"metadata":{},"sourceType":"module"}