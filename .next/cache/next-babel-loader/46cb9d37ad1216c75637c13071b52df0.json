{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { Alert, Spin } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport FeedCard from './post-card';\nimport { FeedGridCard } from './grid-card';\n\nvar ScrollListFeed = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ScrollListFeed, _PureComponent);\n\n  var _super = _createSuper(ScrollListFeed);\n\n  function ScrollListFeed() {\n    _classCallCheck(this, ScrollListFeed);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ScrollListFeed, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          _this$props$items = _this$props.items,\n          items = _this$props$items === void 0 ? [] : _this$props$items,\n          loadMore = _this$props.loadMore,\n          onDelete = _this$props.onDelete,\n          canLoadmore = _this$props.canLoadmore,\n          _this$props$loading = _this$props.loading,\n          loading = _this$props$loading === void 0 ? false : _this$props$loading,\n          _this$props$isGrid = _this$props.isGrid,\n          isGrid = _this$props$isGrid === void 0 ? false : _this$props$isGrid,\n          notFoundText = _this$props.notFoundText;\n      return __jsx(InfiniteScroll, {\n        dataLength: items.length,\n        hasMore: canLoadmore,\n        loader: null,\n        next: loadMore,\n        endMessage: null,\n        scrollThreshold: 0.8\n      }, __jsx(\"div\", {\n        className: isGrid ? 'grid-view' : 'fixed-scroll'\n      }, items.length > 0 && items.map(function (item) {\n        if (isGrid) {\n          return __jsx(FeedGridCard, {\n            feed: item,\n            key: item._id\n          });\n        }\n\n        return __jsx(FeedCard, {\n          feed: item,\n          key: item._id,\n          onDelete: onDelete.bind(_this)\n        });\n      })), !items.length && !loading && __jsx(\"div\", {\n        className: \"main-container custom\"\n      }, __jsx(Alert, {\n        className: \"text-center\",\n        message: notFoundText || 'No post was found',\n        type: \"info\"\n      })), loading && __jsx(\"div\", {\n        className: \"text-center\"\n      }, __jsx(Spin, null)));\n    }\n  }]);\n\n  return ScrollListFeed;\n}(PureComponent);\n\nexport { ScrollListFeed as default };","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/post/scroll-list.tsx"],"names":["PureComponent","Alert","Spin","InfiniteScroll","FeedCard","FeedGridCard","ScrollListFeed","props","items","loadMore","onDelete","canLoadmore","loading","isGrid","notFoundText","length","map","item","_id","bind"],"mappings":";;;;;;;;;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,MAA5B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,YAAT,QAA6B,aAA7B;;IAYqBC,c;;;;;;;;;;;;;WACnB,kBAAS;AAAA;;AACP,wBAQI,KAAKC,KART;AAAA,0CACEC,KADF;AAAA,UACEA,KADF,kCACU,EADV;AAAA,UAEEC,QAFF,eAEEA,QAFF;AAAA,UAGEC,QAHF,eAGEA,QAHF;AAAA,UAIEC,WAJF,eAIEA,WAJF;AAAA,4CAKEC,OALF;AAAA,UAKEA,OALF,oCAKY,KALZ;AAAA,2CAMEC,MANF;AAAA,UAMEA,MANF,mCAMW,KANX;AAAA,UAOEC,YAPF,eAOEA,YAPF;AASA,aACE,MAAC,cAAD;AACE,QAAA,UAAU,EAAEN,KAAK,CAACO,MADpB;AAEE,QAAA,OAAO,EAAEJ,WAFX;AAGE,QAAA,MAAM,EAAE,IAHV;AAIE,QAAA,IAAI,EAAEF,QAJR;AAKE,QAAA,UAAU,EAAE,IALd;AAME,QAAA,eAAe,EAAE;AANnB,SAQE;AAAK,QAAA,SAAS,EAAEI,MAAM,GAAG,WAAH,GAAiB;AAAvC,SACGL,KAAK,CAACO,MAAN,GAAe,CAAf,IACIP,KAAK,CAACQ,GAAN,CAAU,UAACC,IAAD,EAAU;AACrB,YAAIJ,MAAJ,EAAY;AACV,iBAAO,MAAC,YAAD;AAAc,YAAA,IAAI,EAAEI,IAApB;AAA0B,YAAA,GAAG,EAAEA,IAAI,CAACC;AAApC,YAAP;AACD;;AACD,eACE,MAAC,QAAD;AACE,UAAA,IAAI,EAAED,IADR;AAEE,UAAA,GAAG,EAAEA,IAAI,CAACC,GAFZ;AAGE,UAAA,QAAQ,EAAER,QAAQ,CAACS,IAAT,CAAc,KAAd;AAHZ,UADF;AAOD,OAXE,CAFP,CARF,EAuBG,CAACX,KAAK,CAACO,MAAP,IAAiB,CAACH,OAAlB,IACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,KAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,OAAO,EAAEE,YAAY,IAAI,mBAF3B;AAGE,QAAA,IAAI,EAAC;AAHP,QADF,CAxBJ,EAgCGF,OAAO,IACN;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,IAAD,OADF,CAjCJ,CADF;AAwCD;;;;EAnDyCZ,a;;SAAvBM,c","sourcesContent":["import { PureComponent } from 'react';\nimport { Alert, Spin } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { IFeed } from '@interfaces/index';\nimport FeedCard from './post-card';\nimport { FeedGridCard } from './grid-card';\n\ninterface IProps {\n  items: IFeed[];\n  canLoadmore: boolean;\n  loadMore(): Function;\n  onDelete(): Function;\n  loading?: boolean;\n  isGrid?: boolean;\n  notFoundText?: string;\n}\n\nexport default class ScrollListFeed extends PureComponent<IProps> {\n  render() {\n    const {\n      items = [],\n      loadMore,\n      onDelete,\n      canLoadmore,\n      loading = false,\n      isGrid = false,\n      notFoundText\n    } = this.props;\n    return (\n      <InfiniteScroll\n        dataLength={items.length}\n        hasMore={canLoadmore}\n        loader={null}\n        next={loadMore}\n        endMessage={null}\n        scrollThreshold={0.8}\n      >\n        <div className={isGrid ? 'grid-view' : 'fixed-scroll'}>\n          {items.length > 0\n            && items.map((item) => {\n              if (isGrid) {\n                return <FeedGridCard feed={item} key={item._id} />;\n              }\n              return (\n                <FeedCard\n                  feed={item}\n                  key={item._id}\n                  onDelete={onDelete.bind(this)}\n                />\n              );\n            })}\n        </div>\n        {!items.length && !loading && (\n          <div className=\"main-container custom\">\n            <Alert\n              className=\"text-center\"\n              message={notFoundText || 'No post was found'}\n              type=\"info\"\n            />\n          </div>\n        )}\n        {loading && (\n          <div className=\"text-center\">\n            <Spin />\n          </div>\n        )}\n      </InfiniteScroll>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}