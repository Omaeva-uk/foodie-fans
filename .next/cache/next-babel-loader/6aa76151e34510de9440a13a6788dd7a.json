{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var OrderService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(OrderService, _APIRequest);\n\n  var _super = _createSuper(OrderService);\n\n  function OrderService() {\n    _classCallCheck(this, OrderService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(OrderService, [{\n    key: \"performerSearch\",\n    value: function performerSearch(payload) {\n      return this.get(this.buildUrl('/orders/search', payload));\n    }\n  }, {\n    key: \"userSearch\",\n    value: function userSearch(payload) {\n      return this.get(this.buildUrl('/orders/users/search', payload));\n    }\n  }, {\n    key: \"findById\",\n    value: function findById(id) {\n      return this.get(\"/orders/\".concat(id));\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, data) {\n      return this.put(\"/orders/\".concat(id, \"/update\"), data);\n    }\n  }, {\n    key: \"updateDeliveryAddress\",\n    value: function updateDeliveryAddress(id, data) {\n      return this.put(\"/orders/\".concat(id, \"/update/delivery-address\"), data);\n    }\n  }, {\n    key: \"getDownloadLinkDigital\",\n    value: function getDownloadLinkDigital(productId) {\n      return this.get(\"/user/performer-assets/products/\".concat(productId, \"/download-link\"));\n    }\n  }]);\n\n  return OrderService;\n}(APIRequest);\nexport var orderService = new OrderService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/order.service.ts"],"names":["APIRequest","OrderService","payload","get","buildUrl","id","data","put","productId","orderService"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,WAAaC,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,yBAAgBC,OAAhB,EAAyB;AACvB,aAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,gBAAd,EAAgCF,OAAhC,CAAT,CAAP;AACD;AAHH;AAAA;AAAA,WAKE,oBAAWA,OAAX,EAAoB;AAClB,aAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,sBAAd,EAAsCF,OAAtC,CAAT,CAAP;AACD;AAPH;AAAA;AAAA,WASE,kBAASG,EAAT,EAAa;AACX,aAAO,KAAKF,GAAL,mBAAoBE,EAApB,EAAP;AACD;AAXH;AAAA;AAAA,WAaE,gBAAOA,EAAP,EAAWC,IAAX,EAAiB;AACf,aAAO,KAAKC,GAAL,mBAAoBF,EAApB,cAAiCC,IAAjC,CAAP;AACD;AAfH;AAAA;AAAA,WAiBE,+BAAsBD,EAAtB,EAA0BC,IAA1B,EAAgC;AAC9B,aAAO,KAAKC,GAAL,mBAAoBF,EAApB,+BAAkDC,IAAlD,CAAP;AACD;AAnBH;AAAA;AAAA,WAqBE,gCAAuBE,SAAvB,EAA0C;AACxC,aAAO,KAAKL,GAAL,2CAA4CK,SAA5C,oBAAP;AACD;AAvBH;;AAAA;AAAA,EAAkCR,UAAlC;AA0BA,OAAO,IAAMS,YAAY,GAAG,IAAIR,YAAJ,EAArB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class OrderService extends APIRequest {\n  performerSearch(payload) {\n    return this.get(this.buildUrl('/orders/search', payload));\n  }\n\n  userSearch(payload) {\n    return this.get(this.buildUrl('/orders/users/search', payload));\n  }\n\n  findById(id) {\n    return this.get(`/orders/${id}`);\n  }\n\n  update(id, data) {\n    return this.put(`/orders/${id}/update`, data);\n  }\n\n  updateDeliveryAddress(id, data) {\n    return this.put(`/orders/${id}/update/delivery-address`, data);\n  }\n\n  getDownloadLinkDigital(productId: string) {\n    return this.get(`/user/performer-assets/products/${productId}/download-link`);\n  }\n}\n\nexport const orderService = new OrderService();\n"]},"metadata":{},"sourceType":"module"}