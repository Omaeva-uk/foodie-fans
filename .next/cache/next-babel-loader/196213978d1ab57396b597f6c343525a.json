{"ast":null,"code":"import { APIRequest } from './api-request';\n\nclass GalleryService extends APIRequest {\n  create(payload) {\n    return this.post('/performer/performer-assets/galleries', payload);\n  }\n\n  search(param) {\n    return this.get(this.buildUrl('/performer/performer-assets/galleries/search', param));\n  }\n\n  userSearch(param) {\n    return this.get(this.buildUrl('/user/performer-assets/galleries/search', param));\n  }\n\n  update(id, payload) {\n    return this.put(`/performer/performer-assets/galleries/${id}`, payload);\n  }\n\n  findById(id) {\n    return this.get(`/performer/performer-assets/galleries/${id}/view`);\n  }\n\n  userViewDetails(id, headers) {\n    return this.get(`/user/performer-assets/galleries/${id}/view`, headers);\n  }\n\n  delete(id) {\n    return this.del(`/performer/performer-assets/galleries/${id}`);\n  }\n\n  getBookmarks(payload) {\n    return this.get(this.buildUrl('/reactions/galleries/bookmark', payload));\n  }\n\n}\n\nexport const galleryService = new GalleryService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/gallery.service.ts"],"names":["APIRequest","GalleryService","create","payload","post","search","param","get","buildUrl","userSearch","update","id","put","findById","userViewDetails","headers","delete","del","getBookmarks","galleryService"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;;AAEA,MAAMC,cAAN,SAA6BD,UAA7B,CAAwC;AACtCE,EAAAA,MAAM,CAACC,OAAD,EAAU;AACd,WAAO,KAAKC,IAAL,CAAU,uCAAV,EAAmDD,OAAnD,CAAP;AACD;;AAEDE,EAAAA,MAAM,CAACC,KAAD,EAAc;AAClB,WAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,8CAAd,EAA8DF,KAA9D,CAAT,CAAP;AACD;;AAEDG,EAAAA,UAAU,CAACH,KAAD,EAAc;AACtB,WAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,yCAAd,EAAyDF,KAAzD,CAAT,CAAP;AACD;;AAEDI,EAAAA,MAAM,CAACC,EAAD,EAAaR,OAAb,EAAsB;AAC1B,WAAO,KAAKS,GAAL,CAAU,yCAAwCD,EAAG,EAArD,EAAwDR,OAAxD,CAAP;AACD;;AAEDU,EAAAA,QAAQ,CAACF,EAAD,EAAa;AACnB,WAAO,KAAKJ,GAAL,CAAU,yCAAwCI,EAAG,OAArD,CAAP;AACD;;AAEDG,EAAAA,eAAe,CAACH,EAAD,EAAaI,OAAb,EAA4B;AACzC,WAAO,KAAKR,GAAL,CAAU,oCAAmCI,EAAG,OAAhD,EAAwDI,OAAxD,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACL,EAAD,EAAa;AACjB,WAAO,KAAKM,GAAL,CAAU,yCAAwCN,EAAG,EAArD,CAAP;AACD;;AAEDO,EAAAA,YAAY,CAACf,OAAD,EAAU;AACpB,WAAO,KAAKI,GAAL,CAAS,KAAKC,QAAL,CAAc,+BAAd,EAA+CL,OAA/C,CAAT,CAAP;AACD;;AA/BqC;;AAkCxC,OAAO,MAAMgB,cAAc,GAAG,IAAIlB,cAAJ,EAAvB","sourcesContent":["import { APIRequest } from './api-request';\n\nclass GalleryService extends APIRequest {\n  create(payload) {\n    return this.post('/performer/performer-assets/galleries', payload);\n  }\n\n  search(param?: any) {\n    return this.get(this.buildUrl('/performer/performer-assets/galleries/search', param));\n  }\n\n  userSearch(param?: any) {\n    return this.get(this.buildUrl('/user/performer-assets/galleries/search', param));\n  }\n\n  update(id: string, payload) {\n    return this.put(`/performer/performer-assets/galleries/${id}`, payload);\n  }\n\n  findById(id: string) {\n    return this.get(`/performer/performer-assets/galleries/${id}/view`);\n  }\n\n  userViewDetails(id: string, headers?: any) {\n    return this.get(`/user/performer-assets/galleries/${id}/view`, headers);\n  }\n\n  delete(id: string) {\n    return this.del(`/performer/performer-assets/galleries/${id}`);\n  }\n\n  getBookmarks(payload) {\n    return this.get(this.buildUrl('/reactions/galleries/bookmark', payload));\n  }\n}\n\nexport const galleryService = new GalleryService();\n"]},"metadata":{},"sourceType":"module"}