{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Upload, message } from 'antd';\nimport { LoadingOutlined, CameraOutlined } from '@ant-design/icons';\nimport { PureComponent } from 'react';\nimport { getGlobalConfig } from '@services/config';\n\nfunction getBase64(img, callback) {\n  var reader = new FileReader();\n  reader.addEventListener('load', function () {\n    return callback(reader.result);\n  });\n  reader.readAsDataURL(img);\n}\n\nfunction _beforeUpload(file) {\n  var uploadImmediately = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var config = getGlobalConfig();\n  var isLt5M = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5);\n\n  if (!isLt5M) {\n    message.error(\"Image is too large please provide an image \".concat(config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5, \"MB or below\"));\n  }\n\n  return uploadImmediately;\n}\n\nexport var ImageUpload = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ImageUpload, _PureComponent);\n\n  var _super = _createSuper(ImageUpload);\n\n  function ImageUpload() {\n    var _this;\n\n    _classCallCheck(this, ImageUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false,\n      imageUrl: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (info) {\n      var _this$props = _this.props,\n          onFileReaded = _this$props.onFileReaded,\n          onUploaded = _this$props.onUploaded;\n\n      if (info.file.status === 'uploading') {\n        _this.setState({\n          loading: true\n        });\n\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        onFileReaded && onFileReaded(info.file.originFileObj); // Get this url from response in real world.\n\n        getBase64(info.file.originFileObj, function (imageUrl) {\n          _this.setState({\n            imageUrl: imageUrl,\n            loading: false\n          });\n\n          onUploaded && onUploaded({\n            response: info.file.response,\n            base64: imageUrl\n          });\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(ImageUpload, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var imageUrl = this.props.imageUrl;\n      this.setState({\n        imageUrl: imageUrl\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _this$props2$options = _this$props2.options,\n          options = _this$props2$options === void 0 ? {} : _this$props2$options,\n          accept = _this$props2.accept,\n          headers = _this$props2.headers,\n          uploadUrl = _this$props2.uploadUrl,\n          uploadImmediately = _this$props2.uploadImmediately;\n      var _this$state = this.state,\n          imageUrl = _this$state.imageUrl,\n          loading = _this$state.loading;\n\n      var uploadButton = __jsx(\"div\", null, loading ? __jsx(LoadingOutlined, null) : __jsx(CameraOutlined, null));\n\n      return __jsx(Upload, {\n        accept: accept || 'image/*',\n        name: options.fieldName || 'file',\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        showUploadList: false,\n        action: uploadUrl,\n        beforeUpload: function beforeUpload(file) {\n          return _beforeUpload(file, typeof uploadImmediately === 'boolean' ? uploadImmediately : true);\n        },\n        onChange: this.handleChange,\n        headers: headers\n      }, imageUrl ? __jsx(\"img\", {\n        src: imageUrl,\n        alt: \"file\",\n        style: {\n          width: '100%'\n        }\n      }) : uploadButton);\n    }\n  }]);\n\n  return ImageUpload;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/file/image-upload.tsx"],"names":["Upload","message","LoadingOutlined","CameraOutlined","PureComponent","getGlobalConfig","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","uploadImmediately","config","isLt5M","size","NEXT_PUBLIC_MAX_SIZE_IMAGE","error","ImageUpload","loading","imageUrl","info","props","onFileReaded","onUploaded","status","setState","originFileObj","response","base64","options","accept","headers","uploadUrl","state","uploadButton","fieldName","handleChange","width"],"mappings":"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","sourcesContent":["import { Upload, message } from 'antd';\nimport { LoadingOutlined, CameraOutlined } from '@ant-design/icons';\nimport { PureComponent } from 'react';\nimport { getGlobalConfig } from '@services/config';\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file, uploadImmediately = true) {\n  const config = getGlobalConfig();\n  const isLt5M = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5);\n  if (!isLt5M) {\n    message.error(`Image is too large please provide an image ${config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5}MB or below`);\n  }\n  return uploadImmediately;\n}\n\ninterface IState {\n  loading: boolean;\n  imageUrl: string;\n}\n\ninterface IProps {\n  accept?: string;\n  imageUrl?: string;\n  uploadUrl?: string;\n  headers?: any;\n  onUploaded?: Function;\n  onFileReaded?: Function;\n  options?: any;\n  uploadImmediately?: boolean;\n}\n\nexport class ImageUpload extends PureComponent<IProps, IState> {\n  state = {\n    loading: false,\n    imageUrl: ''\n  };\n\n  componentDidMount() {\n    const { imageUrl } = this.props;\n    this.setState({ imageUrl });\n  }\n\n  handleChange = (info: any) => {\n    const { onFileReaded, onUploaded } = this.props;\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      onFileReaded && onFileReaded(info.file.originFileObj);\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        this.setState({\n          imageUrl,\n          loading: false\n        });\n        onUploaded && onUploaded({\n          response: info.file.response,\n          base64: imageUrl\n        });\n      });\n    }\n  };\n\n  render() {\n    const {\n      options = {}, accept, headers, uploadUrl, uploadImmediately\n    } = this.props;\n    const { imageUrl, loading } = this.state;\n    const uploadButton = (\n      <div>\n        {loading ? <LoadingOutlined /> : <CameraOutlined />}\n      </div>\n    );\n    return (\n      <Upload\n        accept={accept || 'image/*'}\n        name={options.fieldName || 'file'}\n        listType=\"picture-card\"\n        className=\"avatar-uploader\"\n        showUploadList={false}\n        action={uploadUrl}\n        beforeUpload={(file) => beforeUpload(file, typeof uploadImmediately === 'boolean' ? uploadImmediately : true)}\n        onChange={this.handleChange}\n        headers={headers}\n      >\n        {imageUrl ? (\n          <img src={imageUrl} alt=\"file\" style={{ width: '100%' }} />\n        ) : (\n          uploadButton\n        )}\n      </Upload>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}