{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { Form, Button, Input, Row, Col } from 'antd';\nvar layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nvar validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  }\n};\nexport var PerformerPaypalForm = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerPaypalForm, _PureComponent);\n\n  var _super = _createSuper(PerformerPaypalForm);\n\n  function PerformerPaypalForm() {\n    _classCallCheck(this, PerformerPaypalForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PerformerPaypalForm, [{\n    key: \"render\",\n    value: function render() {\n      var _user$paypalSetting;\n\n      var _this$props = this.props,\n          onFinish = _this$props.onFinish,\n          user = _this$props.user,\n          updating = _this$props.updating;\n      return __jsx(Form, _extends({}, layout, {\n        name: \"nest-messages\",\n        onFinish: onFinish.bind(this),\n        validateMessages: validateMessages,\n        initialValues: (user === null || user === void 0 ? void 0 : (_user$paypalSetting = user.paypalSetting) === null || _user$paypalSetting === void 0 ? void 0 : _user$paypalSetting.value) || {\n          email: '',\n          phoneNumber: ''\n        },\n        labelAlign: \"left\",\n        className: \"account-form\"\n      }), __jsx(Row, null, __jsx(Col, {\n        lg: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"email\",\n        label: \"Paypal account email\" // help=\"You must upgrade to Business account to receive the payout from Admin\"\n\n      }, __jsx(Input, null)), __jsx(Form.Item, {\n        className: \"text-center\"\n      }, __jsx(Button, {\n        className: \"secondary\",\n        htmlType: \"submit\",\n        disabled: updating,\n        loading: updating\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return PerformerPaypalForm;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/paypalForm.tsx"],"names":["PureComponent","Form","Button","Input","Row","Col","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","PerformerPaypalForm","props","onFinish","user","updating","bind","paypalSetting","value","phoneNumber"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SACEC,IADF,EACQC,MADR,EACgBC,KADhB,EACuBC,GADvB,EAC4BC,GAD5B,QAEO,MAFP;AAKA,IAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADG;AAEbC,EAAAA,UAAU,EAAE;AAAED,IAAAA,IAAI,EAAE;AAAR;AAFC,CAAf;AAKA,IAAME,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE,yBADa;AAEvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,uBADF;AAELC,IAAAA,MAAM,EAAE;AAFH;AAFgB,CAAzB;AAcA,WAAaC,mBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS;AAAA;;AACP,wBAAqC,KAAKC,KAA1C;AAAA,UAAQC,QAAR,eAAQA,QAAR;AAAA,UAAkBC,IAAlB,eAAkBA,IAAlB;AAAA,UAAwBC,QAAxB,eAAwBA,QAAxB;AACA,aACE,MAAC,IAAD,eACMb,MADN;AAEE,QAAA,IAAI,EAAC,eAFP;AAGE,QAAA,QAAQ,EAAEW,QAAQ,CAACG,IAAT,CAAc,IAAd,CAHZ;AAIE,QAAA,gBAAgB,EAAEV,gBAJpB;AAKE,QAAA,aAAa,EAAE,CAAAQ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,mCAAAA,IAAI,CAAEG,aAAN,4EAAqBC,KAArB,KAA8B;AAC3CT,UAAAA,KAAK,EAAE,EADoC;AAE3CU,UAAAA,WAAW,EAAE;AAF8B,SAL/C;AASE,QAAA,UAAU,EAAC,MATb;AAUE,QAAA,SAAS,EAAC;AAVZ,UAYE,MAAC,GAAD,QACE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE;AAAjB,SACE,MAAC,IAAD,CAAM,IAAN;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,sBAFR,CAGE;;AAHF,SAKE,MAAC,KAAD,OALF,CADF,EAQE,MAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC;AAArB,SACE,MAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,QAAQ,EAAC,QAAvC;AAAgD,QAAA,QAAQ,EAAEJ,QAA1D;AAAoE,QAAA,OAAO,EAAEA;AAA7E,kBADF,CARF,CADF,CAZF,CADF;AA6CD;AAhDH;;AAAA;AAAA,EAAyCnB,aAAzC","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  Form, Button, Input, Row, Col\n} from 'antd';\nimport { IPerformer } from 'src/interfaces';\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }\n};\n\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  }\n};\n\ninterface IProps {\n  onFinish: Function;\n  user: IPerformer;\n  updating?: boolean;\n}\n\nexport class PerformerPaypalForm extends PureComponent<IProps> {\n  render() {\n    const { onFinish, user, updating } = this.props;\n    return (\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish.bind(this)}\n        validateMessages={validateMessages}\n        initialValues={user?.paypalSetting?.value || {\n          email: '',\n          phoneNumber: ''\n        }}\n        labelAlign=\"left\"\n        className=\"account-form\"\n      >\n        <Row>\n          <Col lg={12} xs={24}>\n            <Form.Item\n              name=\"email\"\n              label=\"Paypal account email\"\n              // help=\"You must upgrade to Business account to receive the payout from Admin\"\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item className=\"text-center\">\n              <Button className=\"secondary\" htmlType=\"submit\" disabled={updating} loading={updating}>\n                Submit\n              </Button>\n            </Form.Item>\n          </Col>\n          {/* <Col lg={12} xs={24}>\n            <Form.Item\n              name=\"phoneNumber\"\n              label=\"Paypal Phone Number\"\n              validateTrigger={['onChange', 'onBlur']}\n              rules={[{ required: true },\n                {\n                  pattern: new RegExp(/^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/u),\n                  message: 'Please enter valid phone number format eg +86 800 555 1234'\n                }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col> */}\n        </Row>\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}