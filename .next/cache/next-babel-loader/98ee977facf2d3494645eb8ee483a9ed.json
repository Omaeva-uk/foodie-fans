{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component, Children } from 'react';\nimport SocketIO from 'socket.io-client';\nimport { authService } from '@services/auth.service';\nimport { connect } from 'react-redux';\nimport { getGlobalConfig } from '@services/config';\nimport { warning, debug } from './utils';\nimport { SocketContext } from './SocketContext';\n\nvar Socket = /*#__PURE__*/function (_Component) {\n  _inherits(Socket, _Component);\n\n  var _super = _createSuper(Socket);\n\n  function Socket(props) {\n    var _this;\n\n    _classCallCheck(this, Socket);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"socket\", void 0);\n\n    _this.connect();\n\n    return _this;\n  }\n\n  _createClass(Socket, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var loggedIn = this.props.loggedIn;\n\n      if (nextProps.loggedIn !== loggedIn) {\n        this.connect();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.socket && this.socket.close();\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      if (!this.socket) {\n        return false;\n      }\n\n      var token = authService.getToken();\n      return this.socket.emit('auth/login', {\n        token: token\n      });\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      var _this2 = this;\n\n      var token = authService.getToken();\n\n      if (!true || !token) {\n        return;\n      }\n\n      var config = getGlobalConfig();\n      var _this$props$uri = this.props.uri,\n          uri = _this$props$uri === void 0 ? config.NEXT_PUBLIC_SOCKET_ENDPOINT : _this$props$uri;\n      var options = {\n        transports: ['websocket', 'polling', 'long-polling'],\n        query: token ? \"token=\".concat(token) : ''\n      };\n      this.socket = SocketIO(uri, this.mergeOptions(options));\n      this.socket.status = 'initialized';\n      this.socket.on('connect', function () {\n        _this2.socket.status = 'connected';\n\n        if (token) {\n          _this2.login();\n        }\n\n        debug('connected');\n      });\n      this.socket.on('disconnect', function () {\n        _this2.socket.status = 'disconnected';\n        debug('disconnect');\n      });\n      this.socket.on('error', function (err) {\n        _this2.socket.status = 'failed';\n        warning('error', err);\n      });\n      this.socket.on('reconnect', function (data) {\n        _this2.socket.status = 'connected';\n\n        if (token) {\n          _this2.login();\n        }\n\n        debug('reconnect', data);\n      });\n      this.socket.on('reconnect_attempt', function () {\n        debug('reconnect_attempt');\n      });\n      this.socket.on('reconnecting', function () {\n        _this2.socket.status = 'reconnecting';\n        debug('reconnecting');\n      });\n      this.socket.on('reconnect_failed', function (error) {\n        _this2.socket.status = 'failed';\n        warning('reconnect_failed', error);\n      });\n    }\n  }, {\n    key: \"mergeOptions\",\n    value: function mergeOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var defaultOptions = {\n        reconnection: true,\n        reconnectionAttempts: Infinity,\n        reconnectionDelay: 1 * 1000,\n        reconnectionDelayMax: 10 * 1000,\n        autoConnect: true,\n        transports: ['websocket', 'polling', 'long-polling'],\n        rejectUnauthorized: true\n      };\n      return _objectSpread(_objectSpread({}, defaultOptions), options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return __jsx(SocketContext.Provider, {\n        value: this.socket\n      }, Children.only(children));\n    }\n  }]);\n\n  return Socket;\n}(Component);\n\nvar mapStates = function mapStates(state) {\n  return {\n    loggedIn: state.auth.loggedIn\n  };\n};\n\nexport default connect(mapStates, null)(Socket);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/socket/Socket.tsx"],"names":["Component","Children","SocketIO","authService","connect","getGlobalConfig","warning","debug","SocketContext","Socket","props","nextProps","loggedIn","socket","close","token","getToken","emit","config","uri","NEXT_PUBLIC_SOCKET_ENDPOINT","options","transports","query","mergeOptions","status","on","login","err","data","error","defaultOptions","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","autoConnect","rejectUnauthorized","children","only","mapStates","state","auth"],"mappings":"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","sourcesContent":["import { Component, Children } from 'react';\nimport SocketIO from 'socket.io-client';\nimport { authService } from '@services/auth.service';\nimport { connect } from 'react-redux';\nimport { getGlobalConfig } from '@services/config';\nimport { warning, debug } from './utils';\nimport { SocketContext } from './SocketContext';\n\ninterface ISocketProps {\n  uri?: string;\n  children: any;\n  loggedIn: boolean;\n}\n\nclass Socket extends Component<ISocketProps> {\n  socket;\n\n  constructor(props) {\n    super(props);\n    this.connect();\n  }\n\n  shouldComponentUpdate(nextProps: any) {\n    const { loggedIn } = this.props;\n    if (nextProps.loggedIn !== loggedIn) {\n      this.connect();\n    }\n    return true;\n  }\n\n  componentWillUnmount() {\n    this.socket && this.socket.close();\n  }\n\n  login() {\n    if (!this.socket) {\n      return false;\n    }\n\n    const token = authService.getToken();\n    return this.socket.emit('auth/login', {\n      token\n    });\n  }\n\n  connect() {\n    const token = authService.getToken();\n    if (!process.browser || !token) {\n      return;\n    }\n    const config = getGlobalConfig();\n    const { uri = config.NEXT_PUBLIC_SOCKET_ENDPOINT } = this.props;\n    const options = {\n      transports: ['websocket', 'polling', 'long-polling'],\n      query: token ? `token=${token}` : ''\n    };\n    this.socket = SocketIO(uri, this.mergeOptions(options));\n\n    this.socket.status = 'initialized';\n\n    this.socket.on('connect', () => {\n      this.socket.status = 'connected';\n      if (token) {\n        this.login();\n      }\n      debug('connected');\n    });\n\n    this.socket.on('disconnect', () => {\n      this.socket.status = 'disconnected';\n      debug('disconnect');\n    });\n\n    this.socket.on('error', (err) => {\n      this.socket.status = 'failed';\n      warning('error', err);\n    });\n\n    this.socket.on('reconnect', (data) => {\n      this.socket.status = 'connected';\n      if (token) {\n        this.login();\n      }\n      debug('reconnect', data);\n    });\n\n    this.socket.on('reconnect_attempt', () => {\n      debug('reconnect_attempt');\n    });\n\n    this.socket.on('reconnecting', () => {\n      this.socket.status = 'reconnecting';\n      debug('reconnecting');\n    });\n\n    this.socket.on('reconnect_failed', (error) => {\n      this.socket.status = 'failed';\n      warning('reconnect_failed', error);\n    });\n  }\n\n  mergeOptions(options = {}) {\n    const defaultOptions = {\n      reconnection: true,\n      reconnectionAttempts: Infinity,\n      reconnectionDelay: 1 * 1000,\n      reconnectionDelayMax: 10 * 1000,\n      autoConnect: true,\n      transports: ['websocket', 'polling', 'long-polling'],\n      rejectUnauthorized: true\n    };\n    return { ...defaultOptions, ...options };\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <SocketContext.Provider value={this.socket}>\n        {Children.only(children)}\n      </SocketContext.Provider>\n    );\n  }\n}\n\nconst mapStates = (state: any) => ({\n  loggedIn: state.auth.loggedIn\n});\n\nexport default connect(mapStates, null)(Socket);\n"]},"metadata":{},"sourceType":"module"}