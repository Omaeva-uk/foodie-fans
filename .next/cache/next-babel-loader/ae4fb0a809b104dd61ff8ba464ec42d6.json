{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { Form, Row, Col, message, Image } from 'antd';\nimport { ImageUpload } from '@components/file';\nimport { performerService, authService } from '@services/index';\nimport './performer.less';\nconst layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nexport class PerformerVerificationForm extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"idVerificationFileId\", void 0);\n\n    _defineProperty(this, \"documentVerificationFileId\", void 0);\n\n    _defineProperty(this, \"state\", {\n      idImage: '',\n      documentImage: ''\n    });\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (user.documentVerification) {\n      var _user$documentVerific, _user$documentVerific2;\n\n      this.documentVerificationFileId = user === null || user === void 0 ? void 0 : (_user$documentVerific = user.documentVerification) === null || _user$documentVerific === void 0 ? void 0 : _user$documentVerific._id;\n      this.setState({\n        documentImage: user === null || user === void 0 ? void 0 : (_user$documentVerific2 = user.documentVerification) === null || _user$documentVerific2 === void 0 ? void 0 : _user$documentVerific2.url\n      });\n    }\n\n    if (user.idVerification) {\n      var _user$idVerification, _user$idVerification2;\n\n      this.idVerificationFileId = user === null || user === void 0 ? void 0 : (_user$idVerification = user.idVerification) === null || _user$idVerification === void 0 ? void 0 : _user$idVerification._id;\n      this.setState({\n        idImage: user === null || user === void 0 ? void 0 : (_user$idVerification2 = user.idVerification) === null || _user$idVerification2 === void 0 ? void 0 : _user$idVerification2.url\n      });\n    }\n  }\n\n  onFileUploaded(type, file) {\n    if (file && type === 'idFile') {\n      var _file$response, _file$response$data, _file$response2;\n\n      this.idVerificationFileId = file === null || file === void 0 ? void 0 : (_file$response = file.response) === null || _file$response === void 0 ? void 0 : (_file$response$data = _file$response.data) === null || _file$response$data === void 0 ? void 0 : _file$response$data._id;\n      this.setState({\n        idImage: file === null || file === void 0 ? void 0 : (_file$response2 = file.response) === null || _file$response2 === void 0 ? void 0 : _file$response2.data.url\n      });\n    }\n\n    if (file && type === 'documentFile') {\n      var _file$response3, _file$response3$data, _file$response4;\n\n      this.documentVerificationFileId = file === null || file === void 0 ? void 0 : (_file$response3 = file.response) === null || _file$response3 === void 0 ? void 0 : (_file$response3$data = _file$response3.data) === null || _file$response3$data === void 0 ? void 0 : _file$response3$data._id;\n      this.setState({\n        documentImage: file === null || file === void 0 ? void 0 : (_file$response4 = file.response) === null || _file$response4 === void 0 ? void 0 : _file$response4.data.url\n      });\n    }\n\n    message.success('Photo has been uploaded!');\n  }\n\n  render() {\n    const {\n      idImage,\n      documentImage\n    } = this.state;\n    const documentUploadUrl = performerService.getDocumentUploadUrl();\n    const headers = {\n      authorization: authService.getToken()\n    };\n    return __jsx(Form, _extends({}, layout, {\n      name: \"nest-messages\",\n      labelAlign: \"left\",\n      className: \"account-form\"\n    }), __jsx(Row, null, __jsx(Col, {\n      xs: 24,\n      sm: 24,\n      md: 12\n    }, __jsx(Form.Item, {\n      labelCol: {\n        span: 24\n      },\n      label: \"Your government issued ID\",\n      className: \"model-photo-verification\"\n    }, __jsx(\"div\", {\n      className: \"document-upload\"\n    }, __jsx(ImageUpload, {\n      accept: \"image/*\",\n      headers: headers,\n      uploadUrl: `${documentUploadUrl}/idVerificationId`,\n      onUploaded: this.onFileUploaded.bind(this, 'idFile')\n    }), idImage ? __jsx(Image, {\n      alt: \"id-img\",\n      src: idImage,\n      style: {\n        height: '150px'\n      }\n    }) : __jsx(\"img\", {\n      src: \"/static/front-id.png\",\n      height: \"150px\",\n      alt: \"id-img\"\n    })), __jsx(\"div\", {\n      className: \"ant-form-item-explain\",\n      style: {\n        textAlign: 'left'\n      }\n    }, __jsx(\"ul\", {\n      className: \"list-issued-id\"\n    }, __jsx(\"li\", null, \"Government-issued ID card\"), __jsx(\"li\", null, \"National Id card\"), __jsx(\"li\", null, \"Passport\"), __jsx(\"li\", null, \"Driving license\"))))), __jsx(Col, {\n      xs: 24,\n      sm: 24,\n      md: 12\n    }, __jsx(Form.Item, {\n      labelCol: {\n        span: 24\n      },\n      label: \"Your selfie with your ID and handwritten note\",\n      className: \"model-photo-verification\"\n    }, __jsx(\"div\", {\n      className: \"document-upload\"\n    }, __jsx(ImageUpload, {\n      accept: \"image/*\",\n      headers: headers,\n      uploadUrl: `${documentUploadUrl}/documentVerificationId`,\n      onUploaded: this.onFileUploaded.bind(this, 'documentFile')\n    }), documentImage ? __jsx(Image, {\n      alt: \"id-img\",\n      src: documentImage,\n      style: {\n        height: '150px'\n      }\n    }) : __jsx(\"img\", {\n      src: \"/static/holding-id.jpg\",\n      height: \"150px\",\n      alt: \"holding-id\"\n    })), __jsx(\"div\", {\n      className: \"ant-form-item-explain\",\n      style: {\n        textAlign: 'left'\n      }\n    }, __jsx(\"ul\", {\n      className: \"list-issued-id\"\n    }, __jsx(\"li\", null, \"On a blank piece of white paper write your name, today's date and our website address\", ' ', window.location.hash), __jsx(\"li\", null, \"Hold your paper and your ID so we can clearly see hoth\"), __jsx(\"li\", null, \"Take a selfie of you, your ID and your handwritten note. All three elements (you, your ID and your writting) must be clearly visible without copying or editing\")))))));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/verificationForm.tsx"],"names":["PureComponent","Form","Row","Col","message","Image","ImageUpload","performerService","authService","layout","labelCol","span","wrapperCol","PerformerVerificationForm","idImage","documentImage","componentDidMount","user","props","documentVerification","documentVerificationFileId","_id","setState","url","idVerification","idVerificationFileId","onFileUploaded","type","file","response","data","success","render","state","documentUploadUrl","getDocumentUploadUrl","headers","authorization","getToken","bind","height","textAlign","window","location","hash"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  Form, Button, Row, Col, message, Image\n} from 'antd';\nimport { IPerformer } from 'src/interfaces';\nimport { ImageUpload } from '@components/file';\nimport { performerService, authService } from '@services/index';\nimport './performer.less';\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }\n};\n\ninterface IProps {\n  user: IPerformer;\n}\n\nexport class PerformerVerificationForm extends PureComponent<IProps> {\n  idVerificationFileId: string;\n\n  documentVerificationFileId: string;\n\n  state = {\n    idImage: '',\n    documentImage: ''\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    if (user.documentVerification) {\n      this.documentVerificationFileId = user?.documentVerification?._id;\n      this.setState({ documentImage: user?.documentVerification?.url });\n    }\n    if (user.idVerification) {\n      this.idVerificationFileId = user?.idVerification?._id;\n      this.setState({ idImage: user?.idVerification?.url });\n    }\n  }\n\n  onFileUploaded(type, file) {\n    if (file && type === 'idFile') {\n      this.idVerificationFileId = file?.response?.data?._id;\n      this.setState({ idImage: file?.response?.data.url });\n    }\n    if (file && type === 'documentFile') {\n      this.documentVerificationFileId = file?.response?.data?._id;\n      this.setState({ documentImage: file?.response?.data.url });\n    }\n    message.success('Photo has been uploaded!');\n  }\n\n  render() {\n    const {\n      idImage, documentImage\n    } = this.state;\n    const documentUploadUrl = performerService.getDocumentUploadUrl();\n    const headers = {\n      authorization: authService.getToken()\n    };\n    return (\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        labelAlign=\"left\"\n        className=\"account-form\"\n      >\n        <Row>\n          <Col xs={24} sm={24} md={12}>\n            <Form.Item\n              labelCol={{ span: 24 }}\n              label=\"Your government issued ID\"\n              className=\"model-photo-verification\"\n            >\n              <div className=\"document-upload\">\n                <ImageUpload accept=\"image/*\" headers={headers} uploadUrl={`${documentUploadUrl}/idVerificationId`} onUploaded={this.onFileUploaded.bind(this, 'idFile')} />\n                {idImage ? (\n                  <Image alt=\"id-img\" src={idImage} style={{ height: '150px' }} />\n                ) : <img src=\"/static/front-id.png\" height=\"150px\" alt=\"id-img\" />}\n              </div>\n              <div className=\"ant-form-item-explain\" style={{ textAlign: 'left' }}>\n                <ul className=\"list-issued-id\">\n                  <li>Government-issued ID card</li>\n                  <li>National Id card</li>\n                  <li>Passport</li>\n                  <li>Driving license</li>\n                </ul>\n              </div>\n            </Form.Item>\n          </Col>\n          <Col xs={24} sm={24} md={12}>\n            <Form.Item\n              labelCol={{ span: 24 }}\n              label=\"Your selfie with your ID and handwritten note\"\n              className=\"model-photo-verification\"\n            >\n              <div className=\"document-upload\">\n                <ImageUpload accept=\"image/*\" headers={headers} uploadUrl={`${documentUploadUrl}/documentVerificationId`} onUploaded={this.onFileUploaded.bind(this, 'documentFile')} />\n                {documentImage ? (\n                  <Image alt=\"id-img\" src={documentImage} style={{ height: '150px' }} />\n                ) : <img src=\"/static/holding-id.jpg\" height=\"150px\" alt=\"holding-id\" />}\n              </div>\n              <div className=\"ant-form-item-explain\" style={{ textAlign: 'left' }}>\n                <ul className=\"list-issued-id\">\n                  <li>\n                    On a blank piece of white paper write your name, today&apos;s date and our website address\n                    {' '}\n                    {window.location.hash}\n                  </li>\n                  <li>Hold your paper and your ID so we can clearly see hoth</li>\n                  <li>Take a selfie of you, your ID and your handwritten note. All three elements (you, your ID and your writting) must be clearly visible without copying or editing</li>\n                </ul>\n              </div>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}