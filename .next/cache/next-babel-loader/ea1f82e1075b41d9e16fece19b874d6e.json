{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { videoService } from '@services/index';\nimport { getVideos, getVideosFail, getVideosSuccess, moreVideo, moreVideoFail, moreVideoSuccess, getRelated, getRelatedSuccess, getRelatedFail } from './actions';\nconst videoSagas = [{\n  on: getVideos,\n\n  *worker(data) {\n    try {\n      const resp = yield videoService.userSearch(_objectSpread({}, data.payload));\n      yield put(getVideosSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(getVideosFail(error));\n    }\n  }\n\n}, {\n  on: moreVideo,\n\n  *worker(data) {\n    try {\n      const resp = yield videoService.userSearch(_objectSpread({}, data.payload));\n      yield put(moreVideoSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(moreVideoFail(error));\n    }\n  }\n\n}, {\n  on: getRelated,\n\n  *worker(data) {\n    try {\n      const resp = yield videoService.userSearch(data.payload);\n      yield put(getRelatedSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(getRelatedFail(error));\n    }\n  }\n\n}];\nexport default flatten([createSagas(videoSagas)]);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/video/sagas.ts"],"names":["flatten","put","createSagas","videoService","getVideos","getVideosFail","getVideosSuccess","moreVideo","moreVideoFail","moreVideoSuccess","getRelated","getRelatedSuccess","getRelatedFail","videoSagas","on","worker","data","resp","userSearch","payload","e","error","Promise","resolve"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,SACEC,SADF,EACaC,aADb,EAC4BC,gBAD5B,EAEEC,SAFF,EAEaC,aAFb,EAE4BC,gBAF5B,EAGEC,UAHF,EAGcC,iBAHd,EAGiCC,cAHjC,QAIO,WAJP;AAMA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,EAAE,EAAEV,SADN;;AAEE,GAAEW,MAAF,CAASC,IAAT,EAAkC;AAChC,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMd,YAAY,CAACe,UAAb,mBAA6BF,IAAI,CAACG,OAAlC,EAAnB;AACA,YAAMlB,GAAG,CAACK,gBAAgB,CAACW,IAAI,CAACD,IAAN,CAAjB,CAAT;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACV,YAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgBH,CAAhB,CAApB;AACA,YAAMnB,GAAG,CAACI,aAAa,CAACgB,KAAD,CAAd,CAAT;AACD;AACF;;AAVH,CADiB,EAajB;AACEP,EAAAA,EAAE,EAAEP,SADN;;AAEE,GAAEQ,MAAF,CAASC,IAAT,EAAkC;AAChC,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMd,YAAY,CAACe,UAAb,mBAA6BF,IAAI,CAACG,OAAlC,EAAnB;AACA,YAAMlB,GAAG,CAACQ,gBAAgB,CAACQ,IAAI,CAACD,IAAN,CAAjB,CAAT;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACV,YAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgBH,CAAhB,CAApB;AACA,YAAMnB,GAAG,CAACO,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;;AAVH,CAbiB,EAyBjB;AACEP,EAAAA,EAAE,EAAEJ,UADN;;AAEE,GAAEK,MAAF,CAASC,IAAT,EAAkC;AAChC,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMd,YAAY,CAACe,UAAb,CAAwBF,IAAI,CAACG,OAA7B,CAAnB;AACA,YAAMlB,GAAG,CAACU,iBAAiB,CAACM,IAAI,CAACD,IAAN,CAAlB,CAAT;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACV,YAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgBH,CAAhB,CAApB;AACA,YAAMnB,GAAG,CAACW,cAAc,CAACS,KAAD,CAAf,CAAT;AACD;AACF;;AAVH,CAzBiB,CAAnB;AAuCA,eAAerB,OAAO,CAAC,CAACE,WAAW,CAACW,UAAD,CAAZ,CAAD,CAAtB","sourcesContent":["import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { videoService } from '@services/index';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  getVideos, getVideosFail, getVideosSuccess,\n  moreVideo, moreVideoFail, moreVideoSuccess,\n  getRelated, getRelatedSuccess, getRelatedFail\n} from './actions';\n\nconst videoSagas = [\n  {\n    on: getVideos,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield videoService.userSearch({ ...data.payload });\n        yield put(getVideosSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getVideosFail(error));\n      }\n    }\n  },\n  {\n    on: moreVideo,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield videoService.userSearch({ ...data.payload });\n        yield put(moreVideoSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(moreVideoFail(error));\n      }\n    }\n  },\n  {\n    on: getRelated,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield videoService.userSearch(data.payload);\n        yield put(getRelatedSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getRelatedFail(error));\n      }\n    }\n  }\n];\n\nexport default flatten([createSagas(videoSagas)]);\n"]},"metadata":{},"sourceType":"module"}