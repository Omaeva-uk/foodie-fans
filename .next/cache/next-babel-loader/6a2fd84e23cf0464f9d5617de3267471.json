{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-prototype-builtins */\nimport { Component } from 'react';\nimport { Menu, Dropdown, Divider, message, Modal, Tooltip, Button, Avatar } from 'antd';\nimport { HeartOutlined, CommentOutlined, BookOutlined, UnlockOutlined, MoreOutlined, DollarOutlined, LockOutlined, FlagOutlined, FileImageOutlined, VideoCameraOutlined } from '@ant-design/icons';\nimport { TickIcon } from 'src/icons';\nimport Link from 'next/link';\nimport { CommentForm, ListComments } from '@components/comment';\nimport { getComments, moreComment, createComment, deleteComment } from '@redux/comment/actions';\nimport { formatDate, videoDuration, shortenLargeNumber } from '@lib/index';\nimport { reactionService, feedService, tokenTransctionService, paymentService, reportService } from '@services/index';\nimport { connect } from 'react-redux';\nimport { TipPerformerForm } from '@components/performer/tip-form';\nimport ReactMomentCountDown from 'react-moment-countdown';\nimport moment from 'moment';\nimport { VideoPlayer } from '@components/common/video-player';\nimport { ConfirmSubscriptionPerformerForm } from '@components/performer';\nimport { ReportForm } from '@components/report/report-form';\nimport Router from 'next/router';\nimport { updateBalance } from '@redux/user/actions';\nimport Loader from '@components/common/base/loader';\nimport { PurchaseFeedForm } from './confirm-purchase';\nimport FeedSlider from './post-slider';\nimport './index.less';\n\nclass FeedCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isOpenComment: false,\n      isLiked: false,\n      isBookMarked: false,\n      isBought: false,\n      totalLike: 0,\n      totalComment: 0,\n      isFirstLoadComment: true,\n      itemPerPage: 10,\n      commentPage: 0,\n      isHovered: false,\n      openTipModal: false,\n      openPurchaseModal: false,\n      openTeaser: false,\n      submiting: false,\n      polls: [],\n      requesting: false,\n      openSubscriptionModal: false,\n      openReportModal: false,\n      subscriptionType: ''\n    });\n\n    _defineProperty(this, \"handleJoinStream\", () => {\n      var _feed$performer, _feed$performer2, _feed$performer3, _feed$performer4;\n\n      const {\n        user,\n        feed\n      } = this.props;\n\n      if (!user._id) {\n        message.error('Please log in or register!');\n        return;\n      }\n\n      if (user.isPerformer) return;\n\n      if (!(feed !== null && feed !== void 0 && feed.isSubscribed)) {\n        message.error('Please subscribe to this model!');\n        return;\n      }\n\n      Router.push({\n        pathname: '/streaming/details',\n        query: {\n          performer: JSON.stringify(feed === null || feed === void 0 ? void 0 : feed.performer),\n          username: (feed === null || feed === void 0 ? void 0 : (_feed$performer = feed.performer) === null || _feed$performer === void 0 ? void 0 : _feed$performer.username) || (feed === null || feed === void 0 ? void 0 : (_feed$performer2 = feed.performer) === null || _feed$performer2 === void 0 ? void 0 : _feed$performer2._id)\n        }\n      }, `/streaming/${(feed === null || feed === void 0 ? void 0 : (_feed$performer3 = feed.performer) === null || _feed$performer3 === void 0 ? void 0 : _feed$performer3.username) || (feed === null || feed === void 0 ? void 0 : (_feed$performer4 = feed.performer) === null || _feed$performer4 === void 0 ? void 0 : _feed$performer4._id)}`);\n    });\n\n    _defineProperty(this, \"handleLike\", async () => {\n      const {\n        feed\n      } = this.props;\n      const {\n        isLiked,\n        totalLike,\n        requesting\n      } = this.state;\n      if (requesting) return;\n\n      try {\n        await this.setState({\n          requesting: true\n        });\n\n        if (!isLiked) {\n          await reactionService.create({\n            objectId: feed._id,\n            action: 'like',\n            objectType: 'feed'\n          });\n          this.setState({\n            isLiked: true,\n            totalLike: totalLike + 1,\n            requesting: false\n          });\n        } else {\n          await reactionService.delete({\n            objectId: feed._id,\n            action: 'like',\n            objectType: 'feed'\n          });\n          this.setState({\n            isLiked: false,\n            totalLike: totalLike - 1,\n            requesting: false\n          });\n        }\n      } catch (e) {\n        const error = await e;\n        message.error(error.message || 'Error occured, please try again later');\n        this.setState({\n          requesting: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleBookmark\", async () => {\n      const {\n        feed,\n        user\n      } = this.props;\n      const {\n        isBookMarked,\n        requesting\n      } = this.state;\n      if (requesting || !user._id || user.isPerformer) return;\n\n      try {\n        await this.setState({\n          requesting: true\n        });\n\n        if (!isBookMarked) {\n          await reactionService.create({\n            objectId: feed._id,\n            action: 'book_mark',\n            objectType: 'feed'\n          });\n          this.setState({\n            isBookMarked: true,\n            requesting: false\n          });\n        } else {\n          await reactionService.delete({\n            objectId: feed._id,\n            action: 'book_mark',\n            objectType: 'feed'\n          });\n          this.setState({\n            isBookMarked: false,\n            requesting: false\n          });\n        }\n      } catch (e) {\n        const error = await e;\n        message.error(error.message || 'Error occured, please try again later');\n        this.setState({\n          requesting: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleReport\", async payload => {\n      const {\n        feed\n      } = this.props;\n\n      try {\n        await this.setState({\n          requesting: true\n        });\n        await reportService.create(_objectSpread(_objectSpread({}, payload), {}, {\n          target: 'feed',\n          targetId: feed._id,\n          performerId: feed.fromSourceId\n        }));\n        message.success('Your report has been sent');\n      } catch (e) {\n        const err = await e;\n        message.error(err.message || 'error occured, please try again later');\n      } finally {\n        this.setState({\n          requesting: false,\n          openReportModal: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"onOpenComment\", () => {\n      const {\n        feed,\n        getComments: handleGetComment\n      } = this.props;\n      const {\n        isOpenComment,\n        isFirstLoadComment,\n        itemPerPage,\n        commentPage\n      } = this.state;\n      this.setState({\n        isOpenComment: !isOpenComment\n      });\n\n      if (isFirstLoadComment) {\n        this.setState({\n          isFirstLoadComment: false\n        });\n        handleGetComment({\n          objectId: feed._id,\n          limit: itemPerPage,\n          offset: commentPage\n        });\n      }\n    });\n\n    _defineProperty(this, \"copyLink\", () => {\n      const {\n        feed\n      } = this.props;\n      const str = `${window.location.origin}/post/${(feed === null || feed === void 0 ? void 0 : feed.slug) || (feed === null || feed === void 0 ? void 0 : feed._id)}`;\n      const el = document.createElement('textarea');\n      el.value = str;\n      el.setAttribute('readonly', '');\n      el.style.position = 'absolute';\n      el.style.left = '-9999px';\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      message.success('Copied to clipboard');\n    });\n\n    _defineProperty(this, \"moreComment\", async () => {\n      const {\n        feed,\n        moreComment: handleLoadMore\n      } = this.props;\n      const {\n        commentPage,\n        itemPerPage\n      } = this.state;\n      this.setState({\n        commentPage: commentPage + 1\n      });\n      handleLoadMore({\n        limit: itemPerPage,\n        offset: (commentPage + 1) * itemPerPage,\n        objectId: feed._id\n      });\n    });\n\n    _defineProperty(this, \"deleteComment\", item => {\n      const {\n        deleteComment: handleDelete\n      } = this.props;\n      if (!window.confirm('Are you sure to remove this comment?')) return;\n      handleDelete(item._id);\n    });\n\n    _defineProperty(this, \"subscribe\", async () => {\n      const {\n        feed,\n        user,\n        settings\n      } = this.props;\n      const {\n        subscriptionType\n      } = this.state;\n\n      if (!user._id) {\n        message.error('Please log in!');\n        Router.push('/');\n        return;\n      }\n\n      if (user.isPerformer) return;\n\n      if (settings.paymentGateway === 'stripe' && !user.stripeCardIds.length) {\n        message.error('Please add payment card');\n        Router.push('/user/cards');\n        return;\n      }\n\n      try {\n        this.setState({\n          submiting: true\n        });\n        const resp = await paymentService.subscribePerformer({\n          type: subscriptionType || 'monthly',\n          performerId: feed.fromSourceId,\n          paymentGateway: settings.paymentGateway\n        });\n\n        if (settings.paymentGateway === 'ccbill') {\n          var _resp$data;\n\n          window.location.href = resp === null || resp === void 0 ? void 0 : (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : _resp$data.paymentUrl;\n        } else {\n          this.setState({\n            openSubscriptionModal: false\n          });\n        }\n      } catch (e) {\n        const err = await e;\n        message.error(err.message || 'error occured, please try again later');\n        this.setState({\n          openSubscriptionModal: false,\n          submiting: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"sendTip\", async price => {\n      var _feed$performer5;\n\n      const {\n        feed,\n        user,\n        updateBalance: handleUpdateBalance\n      } = this.props;\n\n      if (user._id === (feed === null || feed === void 0 ? void 0 : (_feed$performer5 = feed.performer) === null || _feed$performer5 === void 0 ? void 0 : _feed$performer5._id)) {\n        message.error('Models cannot tip for themselves');\n        return;\n      }\n\n      if (user.balance < price) {\n        message.error('Your wallet balance is not enough');\n        Router.push('/wallet');\n        return;\n      }\n\n      try {\n        var _feed$performer6, _feed$performer7;\n\n        await this.setState({\n          requesting: true\n        });\n        await tokenTransctionService.sendTip(feed === null || feed === void 0 ? void 0 : (_feed$performer6 = feed.performer) === null || _feed$performer6 === void 0 ? void 0 : _feed$performer6._id, {\n          performerId: feed === null || feed === void 0 ? void 0 : (_feed$performer7 = feed.performer) === null || _feed$performer7 === void 0 ? void 0 : _feed$performer7._id,\n          price\n        });\n        message.success('Thank you for the tip');\n        handleUpdateBalance({\n          token: -price\n        });\n      } catch (e) {\n        const err = await e;\n        message.error(err.message || 'error occured, please try again later');\n      } finally {\n        this.setState({\n          requesting: false,\n          openTipModal: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"purchaseFeed\", async () => {\n      const {\n        feed,\n        user,\n        updateBalance: handleUpdateBalance\n      } = this.props;\n\n      if (user.balance < feed.price) {\n        message.error('Your wallet balance is not enough');\n        Router.push('/wallet');\n        return;\n      }\n\n      try {\n        await this.setState({\n          requesting: true\n        });\n        await tokenTransctionService.purchaseFeed(feed._id, {});\n        message.success('Unlocked successfully!');\n        this.setState({\n          isBought: true\n        });\n        handleUpdateBalance({\n          token: -feed.price\n        });\n      } catch (e) {\n        const error = await e;\n        message.error(error.message || 'Error occured, please try again later');\n      } finally {\n        this.setState({\n          requesting: false,\n          openPurchaseModal: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"votePoll\", async poll => {\n      const {\n        feed\n      } = this.props;\n      const {\n        polls\n      } = this.state;\n      const isExpired = new Date(feed.pollExpiredAt) < new Date();\n\n      if (isExpired) {\n        message.error('The poll is now closed');\n        return;\n      }\n\n      if (!window.confirm('Vote it?')) return;\n\n      try {\n        await this.setState({\n          requesting: true\n        });\n        await feedService.votePoll(poll._id);\n        const index = polls.findIndex(p => p._id === poll._id);\n        await this.setState(prevState => {\n          const newItems = [...prevState.polls];\n          newItems[index].totalVote += 1;\n          return {\n            polls: newItems,\n            requesting: false\n          };\n        });\n      } catch (e) {\n        const error = await e;\n        message.error(error.message || 'Something went wrong, please try again later');\n        this.setState({\n          requesting: false\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    const {\n      feed\n    } = this.props;\n\n    if (feed) {\n      this.setState({\n        isLiked: feed.isLiked,\n        isBookMarked: feed.isBookMarked,\n        isBought: feed.isBought,\n        totalLike: feed.totalLike,\n        totalComment: feed.totalComment,\n        polls: feed.polls ? feed.polls : []\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      feed,\n      commentMapping,\n      comment\n    } = this.props;\n    const {\n      totalComment\n    } = this.state;\n\n    if (!prevProps.comment.data && comment.data && comment.data.objectId === feed._id || prevProps.commentMapping[feed._id] && totalComment !== commentMapping[feed._id].total) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        totalComment: commentMapping[feed._id].total\n      });\n    }\n  }\n\n  render() {\n    var _feed$thumbnail, _feed$thumbnail2, _images$, _images$2, _feed$teaser, _feed$teaser2, _videos$, _videos$2, _feed$performer8, _feed$performer9, _feed$performer10, _feed$performer11, _feed$performer12, _feed$performer13, _feed$teaser3, _feed$teaser4;\n\n    const {\n      feed,\n      user,\n      commentMapping,\n      comment,\n      onDelete: handleDelete,\n      createComment: handleCreateComment,\n      siteName\n    } = this.props;\n    const {\n      performer\n    } = feed;\n    const {\n      requesting: commenting\n    } = comment;\n    const fetchingComment = commentMapping.hasOwnProperty(feed._id) ? commentMapping[feed._id].requesting : false;\n    const comments = commentMapping.hasOwnProperty(feed._id) ? commentMapping[feed._id].items : [];\n    const totalComments = commentMapping.hasOwnProperty(feed._id) ? commentMapping[feed._id].total : 0;\n    const {\n      isOpenComment,\n      isLiked,\n      totalComment,\n      totalLike,\n      isHovered,\n      isBought,\n      openTipModal,\n      openPurchaseModal,\n      submiting,\n      polls,\n      isBookMarked,\n      openTeaser,\n      openSubscriptionModal,\n      openReportModal,\n      requesting,\n      subscriptionType\n    } = this.state;\n    let canView = !feed.isSale && feed.isSubscribed || feed.isSale && isBought || feed.type === 'text' || feed.isSale && !feed.price;\n\n    if (!(user !== null && user !== void 0 && user._id) || `${user === null || user === void 0 ? void 0 : user._id}` !== `${feed === null || feed === void 0 ? void 0 : feed.fromSourceId}` && user !== null && user !== void 0 && user.isPerformer) {\n      canView = false;\n    }\n\n    const images = feed.files && feed.files.filter(f => f.type === 'feed-photo');\n    const videos = feed.files && feed.files.filter(f => f.type === 'feed-video');\n    const thumbUrl = (feed === null || feed === void 0 ? void 0 : (_feed$thumbnail = feed.thumbnail) === null || _feed$thumbnail === void 0 ? void 0 : _feed$thumbnail.thumbnails) && (feed === null || feed === void 0 ? void 0 : (_feed$thumbnail2 = feed.thumbnail) === null || _feed$thumbnail2 === void 0 ? void 0 : _feed$thumbnail2.thumbnails[0]) || images && images[0] && ((_images$ = images[0]) === null || _images$ === void 0 ? void 0 : _images$.thumbnails) && ((_images$2 = images[0]) === null || _images$2 === void 0 ? void 0 : _images$2.thumbnails[0]) || (feed === null || feed === void 0 ? void 0 : feed.teaser) && (feed === null || feed === void 0 ? void 0 : (_feed$teaser = feed.teaser) === null || _feed$teaser === void 0 ? void 0 : _feed$teaser.thumbnails) && (feed === null || feed === void 0 ? void 0 : (_feed$teaser2 = feed.teaser) === null || _feed$teaser2 === void 0 ? void 0 : _feed$teaser2.thumbnails[0]) || videos && videos[0] && ((_videos$ = videos[0]) === null || _videos$ === void 0 ? void 0 : _videos$.thumbnails) && ((_videos$2 = videos[0]) === null || _videos$2 === void 0 ? void 0 : _videos$2.thumbnails[0]) || '/static/leaf.jpg';\n    let totalVote = 0;\n    polls && polls.forEach(poll => {\n      totalVote += poll.totalVote;\n    });\n\n    const menu = __jsx(Menu, {\n      key: `menu_${feed._id}`\n    }, __jsx(Menu.Item, {\n      key: `post_detail_${feed._id}`\n    }, __jsx(Link, {\n      href: {\n        pathname: '/post',\n        query: {\n          id: feed.slug || feed._id\n        }\n      },\n      as: `/post/${feed.slug || feed._id}`\n    }, __jsx(\"a\", null, \"Details\"))), user._id === feed.fromSourceId && __jsx(Menu.Item, {\n      key: `edit_post_${feed._id}`\n    }, __jsx(Link, {\n      href: {\n        pathname: '/model/my-post/edit',\n        query: {\n          id: feed._id\n        }\n      }\n    }, __jsx(\"a\", null, \"Edit post\"))), __jsx(Menu.Item, {\n      key: `copy_link_${feed._id}`,\n      onClick: () => this.copyLink()\n    }, __jsx(\"a\", null, \"Copy link to clipboard\")), user._id === feed.fromSourceId && __jsx(Divider, {\n      style: {\n        margin: '10px 0'\n      }\n    }), user._id === feed.fromSourceId && __jsx(Menu.Item, {\n      key: `delete_post_${feed._id}`\n    }, __jsx(\"a\", {\n      \"aria-hidden\": true,\n      onClick: handleDelete.bind(this, feed)\n    }, \"Delete post\")));\n\n    const dropdown = __jsx(Dropdown, {\n      overlay: menu\n    }, __jsx(\"a\", {\n      \"aria-hidden\": true,\n      className: \"dropdown-options\",\n      onClick: e => e.preventDefault()\n    }, __jsx(MoreOutlined, null)));\n\n    return __jsx(\"div\", {\n      className: \"feed-card\"\n    }, __jsx(\"div\", {\n      className: \"feed-top\"\n    }, __jsx(Link, {\n      href: {\n        pathname: '/model/profile',\n        query: {\n          username: (performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)\n        }\n      },\n      as: `/${(performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)}`\n    }, __jsx(\"div\", {\n      className: \"feed-top-left\"\n    }, __jsx(Avatar, {\n      alt: \"per_atv\",\n      src: (performer === null || performer === void 0 ? void 0 : performer.avatar) || '/static/no-avatar.png',\n      size: 40\n    }), __jsx(\"div\", {\n      className: \"feed-name\"\n    }, __jsx(\"h4\", null, (performer === null || performer === void 0 ? void 0 : performer.name) || 'N/A', ' ', (performer === null || performer === void 0 ? void 0 : performer.verifiedAccount) && __jsx(TickIcon, null), \"\\xA0\\xA0\", (performer === null || performer === void 0 ? void 0 : performer.live) > 0 && (user === null || user === void 0 ? void 0 : user._id) !== (performer === null || performer === void 0 ? void 0 : performer._id) && __jsx(\"a\", {\n      \"aria-hidden\": true,\n      onClick: this.handleJoinStream,\n      className: \"live-status\"\n    }, \"Live\")), __jsx(\"h5\", null, \"@\", (performer === null || performer === void 0 ? void 0 : performer.username) || 'n/a')), !(performer !== null && performer !== void 0 && performer.isOnline) ? __jsx(\"span\", {\n      className: \"online-status\"\n    }) : __jsx(\"span\", {\n      className: \"online-status active\"\n    }))), __jsx(\"div\", {\n      className: \"feed-top-right\"\n    }, __jsx(\"span\", {\n      className: \"feed-time\"\n    }, formatDate(feed.updatedAt, 'MMM DD')), dropdown)), __jsx(\"div\", {\n      className: \"feed-container\"\n    }, __jsx(\"div\", {\n      className: \"feed-text\"\n    }, feed.text, polls && polls.length > 0 && __jsx(\"div\", {\n      className: \"feed-polls\"\n    }, feed.pollDescription && __jsx(\"h4\", {\n      className: \"p-question\"\n    }, feed.pollDescription), polls.map(poll => __jsx(\"div\", {\n      \"aria-hidden\": true,\n      className: \"p-item\",\n      key: poll._id,\n      onClick: this.votePoll.bind(this, poll)\n    }, __jsx(\"span\", {\n      className: \"p-desc\"\n    }, poll === null || poll === void 0 ? void 0 : poll.description), ' ', __jsx(\"span\", null, (poll === null || poll === void 0 ? void 0 : poll.totalVote) || 0))), __jsx(\"div\", {\n      className: \"total-vote\"\n    }, __jsx(\"span\", null, \"Total\", ' ', shortenLargeNumber(totalVote), ' ', totalVote < 2 ? 'vote' : 'votes'), feed.pollExpiredAt && moment(feed.pollExpiredAt).isAfter(moment()) ? __jsx(\"span\", null, `${moment(feed.pollExpiredAt).diff(moment(), 'days')}d `, __jsx(ReactMomentCountDown, {\n      toDate: moment(feed.pollExpiredAt)\n    })) : __jsx(\"span\", null, \"Closed\")))), canView && __jsx(\"div\", {\n      className: \"feed-content\"\n    }, __jsx(FeedSlider, {\n      feed: feed\n    })), !canView && __jsx(\"div\", {\n      className: \"lock-content\"\n    }, __jsx(\"div\", {\n      className: \"feed-bg\",\n      style: {\n        backgroundImage: `url(${thumbUrl})`,\n        filter: thumbUrl === '/static/leaf.jpg' ? 'blur(2px)' : 'blur(20px)'\n      }\n    }), __jsx(\"div\", {\n      className: \"lock-middle\"\n    }, isHovered ? __jsx(UnlockOutlined, null) : __jsx(LockOutlined, null), !feed.isSale && !feed.isSubscribed && __jsx(Button, {\n      onMouseEnter: () => this.setState({\n        isHovered: true\n      }),\n      onMouseLeave: () => this.setState({\n        isHovered: false\n      }),\n      disabled: user.isPerformer,\n      className: \"secondary\",\n      onClick: () => this.setState({\n        openSubscriptionModal: true\n      })\n    }, \"Subscribe to unlock\"), feed.isSale && feed.price > 0 && !isBought && __jsx(Button, {\n      onMouseEnter: () => this.setState({\n        isHovered: true\n      }),\n      onMouseLeave: () => this.setState({\n        isHovered: false\n      }),\n      disabled: user.isPerformer,\n      className: \"secondary\",\n      onClick: () => this.setState({\n        openPurchaseModal: true\n      })\n    }, \"Pay $\", (feed.price || 0).toFixed(2), ' ', \"to unlock\"), feed.isSale && !feed.price && !user._id && __jsx(Button, {\n      onMouseEnter: () => this.setState({\n        isHovered: true\n      }),\n      onMouseLeave: () => this.setState({\n        isHovered: false\n      }),\n      disabled: user.isPerformer,\n      className: \"secondary\",\n      onClick: () => Router.push({\n        pathname: '/model/profile',\n        query: {\n          username: (performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)\n        }\n      }, `/${(performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)}`)\n    }, \"Follow for free\"), feed.teaser && __jsx(Button, {\n      className: \"teaser-btn\",\n      type: \"link\",\n      onClick: () => this.setState({\n        openTeaser: true\n      })\n    }, \"View teaser\")), feed.files && feed.files.length > 0 && __jsx(\"div\", {\n      className: \"count-media\"\n    }, __jsx(\"span\", {\n      className: \"count-media-item\"\n    }, images.length > 0 && __jsx(\"span\", null, images.length, ' ', __jsx(FileImageOutlined, null), ' '), videos.length > 0 && images.length > 0 && '|', videos.length > 0 && __jsx(\"span\", null, videos.length > 1 && videos.length, ' ', __jsx(VideoCameraOutlined, null), ' ', videos.length === 1 && videoDuration(videos[0].duration)))))), __jsx(\"div\", {\n      className: \"feed-bottom\"\n    }, __jsx(\"div\", {\n      className: \"feed-actions\"\n    }, __jsx(\"div\", {\n      className: \"action-item\"\n    }, __jsx(\"span\", {\n      \"aria-hidden\": true,\n      className: isLiked ? 'action-ico active' : 'action-ico',\n      onClick: this.handleLike.bind(this)\n    }, __jsx(HeartOutlined, null), ' ', shortenLargeNumber(totalLike)), __jsx(\"span\", {\n      \"aria-hidden\": true,\n      className: isOpenComment ? 'action-ico active' : 'action-ico',\n      onClick: this.onOpenComment.bind(this)\n    }, __jsx(CommentOutlined, null), ' ', shortenLargeNumber(totalComment)), performer && __jsx(\"span\", {\n      \"aria-hidden\": true,\n      className: \"action-ico\",\n      onClick: () => this.setState({\n        openTipModal: true\n      })\n    }, __jsx(DollarOutlined, null), ' ', \"Send tip\")), __jsx(\"div\", {\n      className: \"action-item\"\n    }, __jsx(\"span\", {\n      \"aria-hidden\": true,\n      className: openReportModal ? 'action-ico active' : 'action-ico',\n      onClick: () => this.setState({\n        openReportModal: true\n      })\n    }, __jsx(Tooltip, {\n      title: \"Report\"\n    }, __jsx(FlagOutlined, null))), __jsx(\"span\", {\n      \"aria-hidden\": true,\n      className: isBookMarked ? 'action-ico active' : 'action-ico',\n      onClick: this.handleBookmark.bind(this)\n    }, __jsx(Tooltip, {\n      title: !isBookMarked ? 'Add to Bookmarks' : 'Remove from Bookmarks'\n    }, __jsx(BookOutlined, null))))), isOpenComment && __jsx(\"div\", {\n      className: \"feed-comment\"\n    }, __jsx(CommentForm, {\n      creator: user,\n      onSubmit: handleCreateComment.bind(this),\n      objectId: feed._id,\n      objectType: \"feed\",\n      requesting: commenting,\n      siteName: siteName\n    }), __jsx(ListComments, {\n      key: `list_comments_${feed._id}_${comments.length}`,\n      requesting: fetchingComment,\n      comments: comments,\n      total: totalComments,\n      onDelete: this.deleteComment.bind(this),\n      user: user,\n      canReply: true\n    }), comments.length < totalComments && __jsx(\"p\", {\n      className: \"text-center\"\n    }, __jsx(\"a\", {\n      \"aria-hidden\": true,\n      onClick: this.moreComment.bind(this)\n    }, \"More comments...\")))), __jsx(Modal, {\n      key: \"tip_performer\",\n      className: \"tip-modal\",\n      title: null,\n      width: 600,\n      visible: openTipModal,\n      onOk: () => this.setState({\n        openTipModal: false\n      }),\n      footer: null,\n      onCancel: () => this.setState({\n        openTipModal: false\n      })\n    }, __jsx(TipPerformerForm, {\n      performer: performer,\n      submiting: requesting,\n      onFinish: this.sendTip.bind(this)\n    })), __jsx(Modal, {\n      key: \"purchase_post\",\n      className: \"purchase-modal\",\n      title: null,\n      visible: openPurchaseModal,\n      footer: null,\n      width: 600,\n      destroyOnClose: true,\n      onCancel: () => this.setState({\n        openPurchaseModal: false\n      })\n    }, __jsx(PurchaseFeedForm, {\n      feed: feed,\n      submiting: requesting,\n      onFinish: this.purchaseFeed.bind(this)\n    })), __jsx(Modal, {\n      key: \"report_post\",\n      className: \"subscription-modal\",\n      title: null,\n      visible: openReportModal,\n      footer: null,\n      destroyOnClose: true,\n      onCancel: () => this.setState({\n        openReportModal: false\n      })\n    }, __jsx(ReportForm, {\n      performer: performer,\n      submiting: requesting,\n      onFinish: this.handleReport.bind(this)\n    })), __jsx(Modal, {\n      key: \"subscribe_performer\",\n      className: \"subscription-modal\",\n      width: 600,\n      centered: true,\n      title: null,\n      visible: openSubscriptionModal,\n      footer: null,\n      destroyOnClose: true,\n      onCancel: () => this.setState({\n        openSubscriptionModal: false,\n        subscriptionType: ''\n      })\n    }, !subscriptionType ? __jsx(\"div\", {\n      className: \"subscription-btn-grp\"\n    }, __jsx(\"h2\", {\n      style: {\n        paddingTop: 25\n      }\n    }, \"SUBSCRIBE TO UNLOCK\"), (feed === null || feed === void 0 ? void 0 : (_feed$performer8 = feed.performer) === null || _feed$performer8 === void 0 ? void 0 : _feed$performer8.isFreeSubscription) && __jsx(Button, {\n      className: \"primary\",\n      disabled: !user || !user._id || submiting && subscriptionType === 'free',\n      onClick: () => {\n        this.setState({\n          openSubscriptionModal: true,\n          subscriptionType: 'free'\n        });\n      }\n    }, \"SUBSCRIBE FOR FREE FOR\", ' ', (feed === null || feed === void 0 ? void 0 : (_feed$performer9 = feed.performer) === null || _feed$performer9 === void 0 ? void 0 : _feed$performer9.durationFreeSubscriptionDays) || 1, ' ', (feed === null || feed === void 0 ? void 0 : (_feed$performer10 = feed.performer) === null || _feed$performer10 === void 0 ? void 0 : _feed$performer10.durationFreeSubscriptionDays) > 1 ? 'DAYS' : 'DAY'), (feed === null || feed === void 0 ? void 0 : (_feed$performer11 = feed.performer) === null || _feed$performer11 === void 0 ? void 0 : _feed$performer11.monthlyPrice) && __jsx(Button, {\n      className: \"primary\",\n      disabled: !user || !user._id || submiting && subscriptionType === 'monthly',\n      onClick: () => {\n        this.setState({\n          openSubscriptionModal: true,\n          subscriptionType: 'monthly'\n        });\n      }\n    }, \"MONTHLY SUBSCRIPTION FOR $\", ((feed === null || feed === void 0 ? void 0 : (_feed$performer12 = feed.performer) === null || _feed$performer12 === void 0 ? void 0 : _feed$performer12.monthlyPrice) || 0).toFixed(2)), (feed === null || feed === void 0 ? void 0 : feed.performer.yearlyPrice) && __jsx(Button, {\n      className: \"secondary\",\n      disabled: !user || !user._id || submiting && subscriptionType === 'yearly',\n      onClick: () => {\n        this.setState({\n          openSubscriptionModal: true,\n          subscriptionType: 'yearly'\n        });\n      }\n    }, \"YEARLY SUBSCRIPTON FOR $\", ((feed === null || feed === void 0 ? void 0 : (_feed$performer13 = feed.performer) === null || _feed$performer13 === void 0 ? void 0 : _feed$performer13.yearlyPrice) || 0).toFixed(2))) : __jsx(ConfirmSubscriptionPerformerForm, {\n      type: subscriptionType,\n      performer: performer,\n      submiting: submiting,\n      onFinish: this.subscribe.bind(this)\n    })), __jsx(Modal, {\n      key: \"teaser_video\",\n      title: \"Teaser video\",\n      visible: openTeaser,\n      footer: null,\n      onCancel: () => this.setState({\n        openTeaser: false\n      }),\n      width: 650,\n      destroyOnClose: true,\n      className: \"modal-teaser-preview\"\n    }, __jsx(VideoPlayer, {\n      key: feed === null || feed === void 0 ? void 0 : (_feed$teaser3 = feed.teaser) === null || _feed$teaser3 === void 0 ? void 0 : _feed$teaser3._id,\n      autoplay: true,\n      controls: true,\n      playsinline: true,\n      fluid: true,\n      sources: [{\n        src: feed === null || feed === void 0 ? void 0 : (_feed$teaser4 = feed.teaser) === null || _feed$teaser4 === void 0 ? void 0 : _feed$teaser4.url,\n        type: 'video/mp4'\n      }]\n    })), submiting && __jsx(Loader, {\n      customText: \"We are processing your payment, please do not reload this page until it's done.\"\n    }));\n  }\n\n}\n\nconst mapStates = state => {\n  const {\n    commentMapping,\n    comment\n  } = state.comment;\n  return {\n    siteName: state.ui.siteName,\n    user: state.user.current,\n    commentMapping,\n    comment,\n    settings: state.settings\n  };\n};\n\nconst mapDispatch = {\n  getComments,\n  moreComment,\n  createComment,\n  deleteComment,\n  updateBalance\n};\nexport default connect(mapStates, mapDispatch)(FeedCard);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/post/post-card.tsx"],"names":["Component","Menu","Dropdown","Divider","message","Modal","Tooltip","Button","Avatar","HeartOutlined","CommentOutlined","BookOutlined","UnlockOutlined","MoreOutlined","DollarOutlined","LockOutlined","FlagOutlined","FileImageOutlined","VideoCameraOutlined","TickIcon","Link","CommentForm","ListComments","getComments","moreComment","createComment","deleteComment","formatDate","videoDuration","shortenLargeNumber","reactionService","feedService","tokenTransctionService","paymentService","reportService","connect","TipPerformerForm","ReactMomentCountDown","moment","VideoPlayer","ConfirmSubscriptionPerformerForm","ReportForm","Router","updateBalance","Loader","PurchaseFeedForm","FeedSlider","FeedCard","isOpenComment","isLiked","isBookMarked","isBought","totalLike","totalComment","isFirstLoadComment","itemPerPage","commentPage","isHovered","openTipModal","openPurchaseModal","openTeaser","submiting","polls","requesting","openSubscriptionModal","openReportModal","subscriptionType","user","feed","props","_id","error","isPerformer","isSubscribed","push","pathname","query","performer","JSON","stringify","username","state","setState","create","objectId","action","objectType","delete","e","payload","target","targetId","performerId","fromSourceId","success","err","handleGetComment","limit","offset","str","window","location","origin","slug","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","handleLoadMore","item","handleDelete","confirm","settings","paymentGateway","stripeCardIds","length","resp","subscribePerformer","type","href","data","paymentUrl","price","handleUpdateBalance","balance","sendTip","token","purchaseFeed","poll","isExpired","Date","pollExpiredAt","votePoll","index","findIndex","p","prevState","newItems","totalVote","componentDidMount","componentDidUpdate","prevProps","commentMapping","comment","total","render","onDelete","handleCreateComment","siteName","commenting","fetchingComment","hasOwnProperty","comments","items","totalComments","canView","isSale","images","files","filter","f","videos","thumbUrl","thumbnail","thumbnails","teaser","forEach","menu","id","copyLink","margin","bind","dropdown","preventDefault","avatar","name","verifiedAccount","live","handleJoinStream","isOnline","updatedAt","text","pollDescription","map","description","isAfter","diff","backgroundImage","toFixed","duration","handleLike","onOpenComment","handleBookmark","handleReport","paddingTop","isFreeSubscription","durationFreeSubscriptionDays","monthlyPrice","yearlyPrice","subscribe","autoplay","controls","playsinline","fluid","sources","src","url","mapStates","ui","current","mapDispatch"],"mappings":"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","sourcesContent":["/* eslint-disable no-prototype-builtins */\nimport { Component } from 'react';\nimport {\n  Menu, Dropdown, Divider, message, Modal, Tooltip, Button, Avatar\n} from 'antd';\nimport {\n  HeartOutlined, CommentOutlined, BookOutlined, UnlockOutlined,\n  MoreOutlined, DollarOutlined, LockOutlined, FlagOutlined,\n  FileImageOutlined, VideoCameraOutlined\n} from '@ant-design/icons';\nimport { TickIcon } from 'src/icons';\nimport Link from 'next/link';\nimport { CommentForm, ListComments } from '@components/comment';\nimport {\n  getComments, moreComment, createComment, deleteComment\n} from '@redux/comment/actions';\nimport { formatDate, videoDuration, shortenLargeNumber } from '@lib/index';\nimport {\n  reactionService, feedService, tokenTransctionService, paymentService, reportService\n} from '@services/index';\nimport { connect } from 'react-redux';\nimport { TipPerformerForm } from '@components/performer/tip-form';\nimport ReactMomentCountDown from 'react-moment-countdown';\nimport moment from 'moment';\nimport { VideoPlayer } from '@components/common/video-player';\nimport { ConfirmSubscriptionPerformerForm } from '@components/performer';\nimport { ReportForm } from '@components/report/report-form';\nimport Router from 'next/router';\nimport { updateBalance } from '@redux/user/actions';\nimport Loader from '@components/common/base/loader';\nimport { IFeed, ISettings, IUser } from 'src/interfaces';\nimport { PurchaseFeedForm } from './confirm-purchase';\nimport FeedSlider from './post-slider';\nimport './index.less';\n\ninterface IProps {\n  feed: IFeed;\n  onDelete?: Function;\n  user: IUser;\n  updateBalance: Function;\n  getComments: Function;\n  moreComment: Function;\n  createComment: Function;\n  deleteComment: Function;\n  commentMapping: any;\n  comment: any;\n  siteName: string;\n  settings: ISettings;\n}\n\nclass FeedCard extends Component<IProps> {\n  state = {\n    isOpenComment: false,\n    isLiked: false,\n    isBookMarked: false,\n    isBought: false,\n    totalLike: 0,\n    totalComment: 0,\n    isFirstLoadComment: true,\n    itemPerPage: 10,\n    commentPage: 0,\n    isHovered: false,\n    openTipModal: false,\n    openPurchaseModal: false,\n    openTeaser: false,\n    submiting: false,\n    polls: [],\n    requesting: false,\n    openSubscriptionModal: false,\n    openReportModal: false,\n    subscriptionType: ''\n  }\n\n  componentDidMount() {\n    const { feed } = this.props;\n    if (feed) {\n      this.setState({\n        isLiked: feed.isLiked,\n        isBookMarked: feed.isBookMarked,\n        isBought: feed.isBought,\n        totalLike: feed.totalLike,\n        totalComment: feed.totalComment,\n        polls: feed.polls ? feed.polls : []\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { feed, commentMapping, comment } = this.props;\n    const { totalComment } = this.state;\n    if ((!prevProps.comment.data && comment.data && comment.data.objectId === feed._id)\n      || (prevProps.commentMapping[feed._id] && totalComment !== commentMapping[feed._id].total)) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ totalComment: commentMapping[feed._id].total });\n    }\n  }\n\n  handleJoinStream = () => {\n    const { user, feed } = this.props;\n    if (!user._id) {\n      message.error('Please log in or register!');\n      return;\n    }\n    if (user.isPerformer) return;\n    if (!feed?.isSubscribed) {\n      message.error('Please subscribe to this model!');\n      return;\n    }\n    Router.push({\n      pathname: '/streaming/details',\n      query: {\n        performer: JSON.stringify(feed?.performer),\n        username: feed?.performer?.username || feed?.performer?._id\n      }\n    }, `/streaming/${feed?.performer?.username || feed?.performer?._id}`);\n  }\n\n  handleLike = async () => {\n    const { feed } = this.props;\n    const { isLiked, totalLike, requesting } = this.state;\n    if (requesting) return;\n    try {\n      await this.setState({ requesting: true });\n      if (!isLiked) {\n        await reactionService.create({\n          objectId: feed._id,\n          action: 'like',\n          objectType: 'feed'\n        });\n        this.setState({ isLiked: true, totalLike: totalLike + 1, requesting: false });\n      } else {\n        await reactionService.delete({\n          objectId: feed._id,\n          action: 'like',\n          objectType: 'feed'\n        });\n        this.setState({ isLiked: false, totalLike: totalLike - 1, requesting: false });\n      }\n    } catch (e) {\n      const error = await e;\n      message.error(error.message || 'Error occured, please try again later');\n      this.setState({ requesting: false });\n    }\n  }\n\n  handleBookmark = async () => {\n    const { feed, user } = this.props;\n    const { isBookMarked, requesting } = this.state;\n    if (requesting || !user._id || user.isPerformer) return;\n    try {\n      await this.setState({ requesting: true });\n      if (!isBookMarked) {\n        await reactionService.create({\n          objectId: feed._id,\n          action: 'book_mark',\n          objectType: 'feed'\n        });\n        this.setState({ isBookMarked: true, requesting: false });\n      } else {\n        await reactionService.delete({\n          objectId: feed._id,\n          action: 'book_mark',\n          objectType: 'feed'\n        });\n        this.setState({ isBookMarked: false, requesting: false });\n      }\n    } catch (e) {\n      const error = await e;\n      message.error(error.message || 'Error occured, please try again later');\n      this.setState({ requesting: false });\n    }\n  }\n\n  handleReport = async (payload: any) => {\n    const { feed } = this.props;\n    try {\n      await this.setState({ requesting: true });\n      await reportService.create({\n        ...payload, target: 'feed', targetId: feed._id, performerId: feed.fromSourceId\n      });\n      message.success('Your report has been sent');\n    } catch (e) {\n      const err = await e;\n      message.error(err.message || 'error occured, please try again later');\n    } finally {\n      this.setState({ requesting: false, openReportModal: false });\n    }\n  }\n\n  onOpenComment = () => {\n    const { feed, getComments: handleGetComment } = this.props;\n    const {\n      isOpenComment, isFirstLoadComment, itemPerPage, commentPage\n    } = this.state;\n    this.setState({ isOpenComment: !isOpenComment });\n    if (isFirstLoadComment) {\n      this.setState({ isFirstLoadComment: false });\n      handleGetComment({\n        objectId: feed._id,\n        limit: itemPerPage,\n        offset: commentPage\n      });\n    }\n  }\n\n  copyLink = () => {\n    const { feed } = this.props;\n    const str = `${window.location.origin}/post/${feed?.slug || feed?._id}`;\n    const el = document.createElement('textarea');\n    el.value = str;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    message.success('Copied to clipboard');\n  }\n\n  moreComment = async () => {\n    const { feed, moreComment: handleLoadMore } = this.props;\n    const { commentPage, itemPerPage } = this.state;\n    this.setState({\n      commentPage: commentPage + 1\n    });\n    handleLoadMore({\n      limit: itemPerPage,\n      offset: (commentPage + 1) * itemPerPage,\n      objectId: feed._id\n    });\n  }\n\n  deleteComment = (item) => {\n    const { deleteComment: handleDelete } = this.props;\n    if (!window.confirm('Are you sure to remove this comment?')) return;\n    handleDelete(item._id);\n  }\n\n  subscribe = async () => {\n    const { feed, user, settings } = this.props;\n    const { subscriptionType } = this.state;\n    if (!user._id) {\n      message.error('Please log in!');\n      Router.push('/');\n      return;\n    }\n    if (user.isPerformer) return;\n    if (settings.paymentGateway === 'stripe' && !user.stripeCardIds.length) {\n      message.error('Please add payment card');\n      Router.push('/user/cards');\n      return;\n    }\n    try {\n      this.setState({ submiting: true });\n      const resp = await paymentService.subscribePerformer({\n        type: subscriptionType || 'monthly',\n        performerId: feed.fromSourceId,\n        paymentGateway: settings.paymentGateway\n      });\n      if (settings.paymentGateway === 'ccbill') {\n        window.location.href = resp?.data?.paymentUrl;\n      } else {\n        this.setState({ openSubscriptionModal: false });\n      }\n    } catch (e) {\n      const err = await e;\n      message.error(err.message || 'error occured, please try again later');\n      this.setState({ openSubscriptionModal: false, submiting: false });\n    }\n  }\n\n  sendTip = async (price) => {\n    const { feed, user, updateBalance: handleUpdateBalance } = this.props;\n    if (user._id === feed?.performer?._id) {\n      message.error('Models cannot tip for themselves');\n      return;\n    }\n    if (user.balance < price) {\n      message.error('Your wallet balance is not enough');\n      Router.push('/wallet');\n      return;\n    }\n    try {\n      await this.setState({ requesting: true });\n      await tokenTransctionService.sendTip(feed?.performer?._id, { performerId: feed?.performer?._id, price });\n      message.success('Thank you for the tip');\n      handleUpdateBalance({ token: -price });\n    } catch (e) {\n      const err = await e;\n      message.error(err.message || 'error occured, please try again later');\n    } finally {\n      this.setState({ requesting: false, openTipModal: false });\n    }\n  }\n\n  purchaseFeed = async () => {\n    const { feed, user, updateBalance: handleUpdateBalance } = this.props;\n    if (user.balance < feed.price) {\n      message.error('Your wallet balance is not enough');\n      Router.push('/wallet');\n      return;\n    }\n    try {\n      await this.setState({ requesting: true });\n      await tokenTransctionService.purchaseFeed(feed._id, {});\n      message.success('Unlocked successfully!');\n      this.setState({ isBought: true });\n      handleUpdateBalance({ token: -feed.price });\n    } catch (e) {\n      const error = await e;\n      message.error(error.message || 'Error occured, please try again later');\n    } finally {\n      this.setState({ requesting: false, openPurchaseModal: false });\n    }\n  }\n\n  votePoll = async (poll: any) => {\n    const { feed } = this.props;\n    const { polls } = this.state;\n    const isExpired = new Date(feed.pollExpiredAt) < new Date();\n    if (isExpired) {\n      message.error('The poll is now closed');\n      return;\n    }\n    if (!window.confirm('Vote it?')) return;\n    try {\n      await this.setState({ requesting: true });\n      await feedService.votePoll(poll._id);\n      const index = polls.findIndex((p) => p._id === poll._id);\n      await this.setState((prevState: any) => {\n        const newItems = [...prevState.polls];\n        newItems[index].totalVote += 1;\n        return { polls: newItems, requesting: false };\n      });\n    } catch (e) {\n      const error = await e;\n      message.error(error.message || 'Something went wrong, please try again later');\n      this.setState({ requesting: false });\n    }\n  }\n\n  render() {\n    const {\n      feed, user, commentMapping, comment, onDelete: handleDelete, createComment: handleCreateComment, siteName\n    } = this.props;\n    const { performer } = feed;\n    const { requesting: commenting } = comment;\n    const fetchingComment = commentMapping.hasOwnProperty(feed._id) ? commentMapping[feed._id].requesting : false;\n    const comments = commentMapping.hasOwnProperty(feed._id) ? commentMapping[feed._id].items : [];\n    const totalComments = commentMapping.hasOwnProperty(feed._id) ? commentMapping[feed._id].total : 0;\n    const {\n      isOpenComment, isLiked, totalComment, totalLike, isHovered, isBought,\n      openTipModal, openPurchaseModal, submiting, polls, isBookMarked,\n      openTeaser, openSubscriptionModal, openReportModal, requesting, subscriptionType\n    } = this.state;\n    let canView = (!feed.isSale && feed.isSubscribed)\n    || (feed.isSale && isBought)\n    || feed.type === 'text'\n    || (feed.isSale && !feed.price);\n\n    if (!user?._id || (`${user?._id}` !== `${feed?.fromSourceId}` && user?.isPerformer)) {\n      canView = false;\n    }\n    const images = feed.files && feed.files.filter((f) => f.type === 'feed-photo');\n    const videos = feed.files && feed.files.filter((f) => f.type === 'feed-video');\n    const thumbUrl = (feed?.thumbnail?.thumbnails && feed?.thumbnail?.thumbnails[0])\n      || (images && images[0] && images[0]?.thumbnails && images[0]?.thumbnails[0])\n      || (feed?.teaser && feed?.teaser?.thumbnails && feed?.teaser?.thumbnails[0])\n      || (videos && videos[0] && videos[0]?.thumbnails && videos[0]?.thumbnails[0])\n      || '/static/leaf.jpg';\n    let totalVote = 0;\n    polls && polls.forEach((poll) => {\n      totalVote += poll.totalVote;\n    });\n    const menu = (\n      <Menu key={`menu_${feed._id}`}>\n        <Menu.Item key={`post_detail_${feed._id}`}>\n          <Link href={{ pathname: '/post', query: { id: feed.slug || feed._id } }} as={`/post/${feed.slug || feed._id}`}>\n            <a>\n              Details\n            </a>\n          </Link>\n        </Menu.Item>\n        {user._id === feed.fromSourceId && (\n          <Menu.Item key={`edit_post_${feed._id}`}>\n            <Link href={{ pathname: '/model/my-post/edit', query: { id: feed._id } }}>\n              <a>\n                Edit post\n              </a>\n            </Link>\n          </Menu.Item>\n        )}\n        <Menu.Item key={`copy_link_${feed._id}`} onClick={() => this.copyLink()}>\n          <a>\n            Copy link to clipboard\n          </a>\n        </Menu.Item>\n        {user._id === feed.fromSourceId && <Divider style={{ margin: '10px 0' }} />}\n        {user._id === feed.fromSourceId && <Menu.Item key={`delete_post_${feed._id}`}><a aria-hidden onClick={handleDelete.bind(this, feed)}>Delete post</a></Menu.Item>}\n      </Menu>\n    );\n    const dropdown = (\n      <Dropdown overlay={menu}>\n        <a aria-hidden className=\"dropdown-options\" onClick={(e) => e.preventDefault()}>\n          <MoreOutlined />\n        </a>\n      </Dropdown>\n    );\n\n    return (\n      <div className=\"feed-card\">\n        <div className=\"feed-top\">\n          <Link href={{ pathname: '/model/profile', query: { username: performer?.username || performer?._id } }} as={`/${performer?.username || performer?._id}`}>\n            <div className=\"feed-top-left\">\n              <Avatar alt=\"per_atv\" src={performer?.avatar || '/static/no-avatar.png'} size={40} />\n              <div className=\"feed-name\">\n                <h4>\n                  {performer?.name || 'N/A'}\n                  {' '}\n                  {performer?.verifiedAccount && <TickIcon />}\n                  &nbsp;&nbsp;\n                  {performer?.live > 0 && user?._id !== performer?._id && <a aria-hidden onClick={this.handleJoinStream} className=\"live-status\">Live</a>}\n                </h4>\n                <h5>\n                  @\n                  {performer?.username || 'n/a'}\n                </h5>\n              </div>\n              {!performer?.isOnline ? <span className=\"online-status\" /> : <span className=\"online-status active\" />}\n            </div>\n          </Link>\n          <div className=\"feed-top-right\">\n            <span className=\"feed-time\">{formatDate(feed.updatedAt, 'MMM DD')}</span>\n            {dropdown}\n          </div>\n        </div>\n        <div className=\"feed-container\">\n          <div className=\"feed-text\">\n            {feed.text}\n            {polls && polls.length > 0 && (\n              <div className=\"feed-polls\">\n                {feed.pollDescription && <h4 className=\"p-question\">{feed.pollDescription}</h4>}\n                {polls.map((poll) => (\n                  <div aria-hidden className=\"p-item\" key={poll._id} onClick={this.votePoll.bind(this, poll)}>\n                    <span className=\"p-desc\">{poll?.description}</span>\n                    {' '}\n                    <span>{poll?.totalVote || 0}</span>\n                  </div>\n                ))}\n                <div className=\"total-vote\">\n                  <span>\n                    Total\n                    {' '}\n                    {shortenLargeNumber(totalVote)}\n                    {' '}\n                    {totalVote < 2 ? 'vote' : 'votes'}\n                  </span>\n                  {feed.pollExpiredAt && moment(feed.pollExpiredAt).isAfter(moment()) ? (\n                    <span>\n                      {`${moment(feed.pollExpiredAt).diff(moment(), 'days')}d `}\n                      <ReactMomentCountDown toDate={moment(feed.pollExpiredAt)} />\n                    </span>\n                  ) : <span>Closed</span>}\n                </div>\n              </div>\n            )}\n          </div>\n          {canView && (\n            <div className=\"feed-content\">\n              <FeedSlider feed={feed} />\n            </div>\n          )}\n          {!canView && (\n            <div className=\"lock-content\">\n              {/* eslint-disable-next-line no-nested-ternary */}\n              <div className=\"feed-bg\" style={{ backgroundImage: `url(${thumbUrl})`, filter: thumbUrl === '/static/leaf.jpg' ? 'blur(2px)' : 'blur(20px)' }} />\n              <div className=\"lock-middle\">\n                {(isHovered) ? <UnlockOutlined /> : <LockOutlined />}\n                {!feed.isSale && !feed.isSubscribed && (\n                  <Button\n                    onMouseEnter={() => this.setState({ isHovered: true })}\n                    onMouseLeave={() => this.setState({ isHovered: false })}\n                    disabled={user.isPerformer}\n                    className=\"secondary\"\n                    onClick={() => this.setState({ openSubscriptionModal: true })}\n                  >\n                    Subscribe to unlock\n                  </Button>\n                )}\n                {feed.isSale && feed.price > 0 && !isBought && (\n                  <Button\n                    onMouseEnter={() => this.setState({ isHovered: true })}\n                    onMouseLeave={() => this.setState({ isHovered: false })}\n                    disabled={user.isPerformer}\n                    className=\"secondary\"\n                    onClick={() => this.setState({ openPurchaseModal: true })}\n                  >\n                    Pay $\n                    {(feed.price || 0).toFixed(2)}\n                    {' '}\n                    to unlock\n                  </Button>\n                )}\n                {(feed.isSale && !feed.price && !user._id) && (\n                <Button\n                  onMouseEnter={() => this.setState({ isHovered: true })}\n                  onMouseLeave={() => this.setState({ isHovered: false })}\n                  disabled={user.isPerformer}\n                  className=\"secondary\"\n                  onClick={() => Router.push({ pathname: '/model/profile', query: { username: performer?.username || performer?._id } }, `/${performer?.username || performer?._id}`)}\n                >\n                  Follow for free\n                </Button>\n                )}\n                {feed.teaser && (\n                  <Button className=\"teaser-btn\" type=\"link\" onClick={() => this.setState({ openTeaser: true })}>\n                    View teaser\n                  </Button>\n                )}\n              </div>\n              {feed.files && feed.files.length > 0 && (\n                <div className=\"count-media\">\n                  <span className=\"count-media-item\">\n                    {images.length > 0 && (\n                      <span>\n                        {images.length}\n                        {' '}\n                        <FileImageOutlined />\n                        {' '}\n                      </span>\n                    )}\n                    {videos.length > 0 && images.length > 0 && '|'}\n                    {videos.length > 0 && (\n                      <span>\n                        {videos.length > 1 && videos.length}\n                        {' '}\n                        <VideoCameraOutlined />\n                        {' '}\n                        {videos.length === 1 && videoDuration(videos[0].duration)}\n                      </span>\n                    )}\n                  </span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"feed-bottom\">\n          <div className=\"feed-actions\">\n            <div className=\"action-item\">\n              <span aria-hidden className={isLiked ? 'action-ico active' : 'action-ico'} onClick={this.handleLike.bind(this)}>\n                <HeartOutlined />\n                {' '}\n                {shortenLargeNumber(totalLike)}\n              </span>\n              <span aria-hidden className={isOpenComment ? 'action-ico active' : 'action-ico'} onClick={this.onOpenComment.bind(this)}>\n                <CommentOutlined />\n                {' '}\n                {shortenLargeNumber(totalComment)}\n              </span>\n              {performer && (\n                <span aria-hidden className=\"action-ico\" onClick={() => this.setState({ openTipModal: true })}>\n                  <DollarOutlined />\n                  {' '}\n                  Send tip\n                </span>\n              )}\n            </div>\n            <div className=\"action-item\">\n              <span aria-hidden className={openReportModal ? 'action-ico active' : 'action-ico'} onClick={() => this.setState({ openReportModal: true })}>\n                <Tooltip title=\"Report\"><FlagOutlined /></Tooltip>\n              </span>\n              <span aria-hidden className={isBookMarked ? 'action-ico active' : 'action-ico'} onClick={this.handleBookmark.bind(this)}>\n                <Tooltip title={!isBookMarked ? 'Add to Bookmarks' : 'Remove from Bookmarks'}><BookOutlined /></Tooltip>\n              </span>\n            </div>\n          </div>\n          {isOpenComment && (\n            <div className=\"feed-comment\">\n              <CommentForm\n                creator={user}\n                onSubmit={handleCreateComment.bind(this)}\n                objectId={feed._id}\n                objectType=\"feed\"\n                requesting={commenting}\n                siteName={siteName}\n              />\n              <ListComments\n                key={`list_comments_${feed._id}_${comments.length}`}\n                requesting={fetchingComment}\n                comments={comments}\n                total={totalComments}\n                onDelete={this.deleteComment.bind(this)}\n                user={user}\n                canReply\n              />\n              {comments.length < totalComments && <p className=\"text-center\"><a aria-hidden onClick={this.moreComment.bind(this)}>More comments...</a></p>}\n            </div>\n          )}\n        </div>\n        <Modal\n          key=\"tip_performer\"\n          className=\"tip-modal\"\n          title={null}\n          width={600}\n          visible={openTipModal}\n          onOk={() => this.setState({ openTipModal: false })}\n          footer={null}\n          onCancel={() => this.setState({ openTipModal: false })}\n        >\n          <TipPerformerForm performer={performer} submiting={requesting} onFinish={this.sendTip.bind(this)} />\n        </Modal>\n        <Modal\n          key=\"purchase_post\"\n          className=\"purchase-modal\"\n          title={null}\n          visible={openPurchaseModal}\n          footer={null}\n          width={600}\n          destroyOnClose\n          onCancel={() => this.setState({ openPurchaseModal: false })}\n        >\n          <PurchaseFeedForm feed={feed} submiting={requesting} onFinish={this.purchaseFeed.bind(this)} />\n        </Modal>\n        <Modal\n          key=\"report_post\"\n          className=\"subscription-modal\"\n          title={null}\n          visible={openReportModal}\n          footer={null}\n          destroyOnClose\n          onCancel={() => this.setState({ openReportModal: false })}\n        >\n          <ReportForm performer={performer} submiting={requesting} onFinish={this.handleReport.bind(this)} />\n        </Modal>\n        <Modal\n          key=\"subscribe_performer\"\n          className=\"subscription-modal\"\n          width={600}\n          centered\n          title={null}\n          visible={openSubscriptionModal}\n          footer={null}\n          destroyOnClose\n          onCancel={() => this.setState({ openSubscriptionModal: false, subscriptionType: '' })}\n        >\n          {!subscriptionType ? (\n            <div\n              className=\"subscription-btn-grp\"\n            >\n              <h2 style={{ paddingTop: 25 }}>SUBSCRIBE TO UNLOCK</h2>\n              {feed?.performer?.isFreeSubscription && (\n              <Button\n                className=\"primary\"\n                disabled={!user || !user._id || (submiting && subscriptionType === 'free')}\n                onClick={() => {\n                  this.setState({ openSubscriptionModal: true, subscriptionType: 'free' });\n                }}\n              >\n                SUBSCRIBE FOR FREE FOR\n                {' '}\n                {feed?.performer?.durationFreeSubscriptionDays || 1}\n                {' '}\n                {feed?.performer?.durationFreeSubscriptionDays > 1 ? 'DAYS' : 'DAY'}\n              </Button>\n              )}\n              {feed?.performer?.monthlyPrice && (\n              <Button\n                className=\"primary\"\n                disabled={!user || !user._id || (submiting && subscriptionType === 'monthly')}\n                onClick={() => {\n                  this.setState({ openSubscriptionModal: true, subscriptionType: 'monthly' });\n                }}\n              >\n                MONTHLY SUBSCRIPTION FOR $\n                {(feed?.performer?.monthlyPrice || 0).toFixed(2)}\n              </Button>\n              )}\n              {feed?.performer.yearlyPrice && (\n              <Button\n                className=\"secondary\"\n                disabled={!user || !user._id || (submiting && subscriptionType === 'yearly')}\n                onClick={() => {\n                  this.setState({ openSubscriptionModal: true, subscriptionType: 'yearly' });\n                }}\n              >\n                YEARLY SUBSCRIPTON FOR $\n                {(feed?.performer?.yearlyPrice || 0).toFixed(2)}\n              </Button>\n              )}\n            </div>\n          ) : (\n            <ConfirmSubscriptionPerformerForm\n              type={subscriptionType}\n              performer={performer}\n              submiting={submiting}\n              onFinish={this.subscribe.bind(this)}\n            />\n          )}\n        </Modal>\n        <Modal\n          key=\"teaser_video\"\n          title=\"Teaser video\"\n          visible={openTeaser}\n          footer={null}\n          onCancel={() => this.setState({ openTeaser: false })}\n          width={650}\n          destroyOnClose\n          className=\"modal-teaser-preview\"\n        >\n          <VideoPlayer\n            key={feed?.teaser?._id}\n            {...{\n              autoplay: true,\n              controls: true,\n              playsinline: true,\n              fluid: true,\n              sources: [\n                {\n                  src: feed?.teaser?.url,\n                  type: 'video/mp4'\n                }\n              ]\n            }}\n          />\n        </Modal>\n        {submiting && <Loader customText=\"We are processing your payment, please do not reload this page until it's done.\" />}\n      </div>\n    );\n  }\n}\n\nconst mapStates = (state: any) => {\n  const { commentMapping, comment } = state.comment;\n  return {\n    siteName: state.ui.siteName,\n    user: state.user.current,\n    commentMapping,\n    comment,\n    settings: state.settings\n  };\n};\n\nconst mapDispatch = {\n  getComments, moreComment, createComment, deleteComment, updateBalance\n};\nexport default connect(mapStates, mapDispatch)(FeedCard);\n"]},"metadata":{},"sourceType":"module"}