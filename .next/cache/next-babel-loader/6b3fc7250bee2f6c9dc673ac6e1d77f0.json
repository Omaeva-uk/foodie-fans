{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { Form, Input, InputNumber, Select, Upload, Button, message, Progress, Switch, DatePicker, Row, Col, Avatar, Modal } from 'antd';\nimport { CameraOutlined, VideoCameraAddOutlined, FileDoneOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { performerService, videoService } from '@services/index';\nimport moment from 'moment';\nimport { debounce } from 'lodash';\nimport Router from 'next/router';\nimport { VideoPlayer } from '@components/common';\nimport { getGlobalConfig } from '@services/config';\nimport './video.less';\nvar layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nvar Option = Select.Option;\nvar validateMessages = {\n  required: 'This field is required!'\n};\nexport var FormUploadVideo = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FormUploadVideo, _PureComponent);\n\n  var _super = _createSuper(FormUploadVideo);\n\n  function FormUploadVideo() {\n    var _this;\n\n    _classCallCheck(this, FormUploadVideo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      previewThumbnail: null,\n      previewTeaser: null,\n      previewVideo: null,\n      selectedThumbnail: null,\n      selectedVideo: null,\n      selectedTeaser: null,\n      isSale: false,\n      isSchedule: false,\n      scheduledAt: moment(),\n      performers: [],\n      isShowPreview: false,\n      previewUrl: '',\n      previewType: '',\n      removedTeaser: false,\n      removedThumbnail: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPerformers\", debounce( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(q, performerIds) {\n        var resp, performers, err;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return performerService.search({\n                  q: q,\n                  performerIds: performerIds || '',\n                  limit: 500\n                });\n\n              case 3:\n                _context.next = 5;\n                return _context.sent.data;\n\n              case 5:\n                resp = _context.sent;\n                performers = resp.data || [];\n\n                _this.setState({\n                  performers: performers\n                });\n\n                _context.next = 16;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                _context.next = 14;\n                return _context.t0;\n\n              case 14:\n                err = _context.sent;\n                message.error((err === null || err === void 0 ? void 0 : err.message) || 'Error occured');\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }(), 500));\n\n    _defineProperty(_assertThisInitialized(_this), \"previewModal\", function () {\n      var _this$state = _this.state,\n          isShowPreview = _this$state.isShowPreview,\n          previewUrl = _this$state.previewUrl,\n          previewType = _this$state.previewType;\n      return __jsx(Modal, {\n        width: 767,\n        footer: null,\n        onOk: function onOk() {\n          return _this.setState({\n            isShowPreview: false\n          });\n        },\n        onCancel: function onCancel() {\n          return _this.setState({\n            isShowPreview: false\n          });\n        },\n        visible: isShowPreview,\n        destroyOnClose: true\n      }, ['teaser', 'video'].includes(previewType) && __jsx(VideoPlayer, {\n        autoplay: true,\n        controls: true,\n        playsinline: true,\n        fluid: true,\n        sources: [{\n          src: previewUrl,\n          type: 'video/mp4'\n        }]\n      }), previewType === 'thumbnail' && __jsx(\"img\", {\n        src: previewUrl,\n        alt: \"thumbnail\",\n        width: \"100%\",\n        style: {\n          borderRadius: 5\n        }\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(FormUploadVideo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          video = _this$props.video,\n          user = _this$props.user;\n\n      if (video) {\n        this.setState({\n          previewThumbnail: video === null || video === void 0 ? void 0 : video.thumbnail,\n          previewVideo: video === null || video === void 0 ? void 0 : video.video,\n          previewTeaser: video === null || video === void 0 ? void 0 : video.teaser,\n          isSale: video.isSale,\n          isSchedule: video.isSchedule,\n          scheduledAt: video.scheduledAt ? moment(video.scheduledAt) : moment()\n        });\n      }\n\n      this.getPerformers('', (video === null || video === void 0 ? void 0 : video.participantIds) || [user._id]);\n    }\n  }, {\n    key: \"handleRemovefile\",\n    value: function () {\n      var _handleRemovefile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type) {\n        var video, err;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (window.confirm('Confirm to remove file!')) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                video = this.props.video;\n                _context2.prev = 3;\n                _context2.next = 6;\n                return videoService.deleteFile(video._id, type);\n\n              case 6:\n                type === 'teaser' && this.setState({\n                  removedTeaser: true\n                });\n                type === 'thumbnail' && this.setState({\n                  removedThumbnail: true\n                });\n                _context2.next = 16;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](3);\n                _context2.next = 14;\n                return _context2.t0;\n\n              case 14:\n                err = _context2.sent;\n                message.error((err === null || err === void 0 ? void 0 : err.message) || 'Error occured, please try again later');\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 10]]);\n      }));\n\n      function handleRemovefile(_x3) {\n        return _handleRemovefile.apply(this, arguments);\n      }\n\n      return handleRemovefile;\n    }()\n  }, {\n    key: \"beforeUpload\",\n    value: function beforeUpload(file, field) {\n      var beforeUploadHandler = this.props.beforeUpload;\n      var config = getGlobalConfig();\n\n      if (field === 'thumbnail') {\n        var isValid = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5);\n\n        if (!isValid) {\n          message.error(\"File is too large please provide an file \".concat(config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5, \"MB or below\"));\n          return isValid;\n        }\n\n        this.setState({\n          selectedThumbnail: file\n        });\n      }\n\n      if (field === 'teaser') {\n        var _isValid = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200);\n\n        if (!_isValid) {\n          message.error(\"File is too large please provide an file \".concat(config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200, \"MB or below\"));\n          return _isValid;\n        }\n\n        this.setState({\n          selectedTeaser: file\n        });\n      }\n\n      if (field === 'video') {\n        var _isValid2 = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2000);\n\n        if (!_isValid2) {\n          message.error(\"File is too large please provide an file \".concat(config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2000, \"MB or below\"));\n          return _isValid2;\n        }\n\n        this.setState({\n          selectedVideo: file\n        });\n      }\n\n      return beforeUploadHandler(file, field);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          video = _this$props2.video,\n          submit = _this$props2.submit,\n          uploading = _this$props2.uploading,\n          uploadPercentage = _this$props2.uploadPercentage,\n          user = _this$props2.user;\n      var _this$state2 = this.state,\n          previewThumbnail = _this$state2.previewThumbnail,\n          previewTeaser = _this$state2.previewTeaser,\n          previewVideo = _this$state2.previewVideo,\n          performers = _this$state2.performers,\n          isSale = _this$state2.isSale,\n          isSchedule = _this$state2.isSchedule,\n          scheduledAt = _this$state2.scheduledAt,\n          selectedThumbnail = _this$state2.selectedThumbnail,\n          selectedTeaser = _this$state2.selectedTeaser,\n          selectedVideo = _this$state2.selectedVideo,\n          removedTeaser = _this$state2.removedTeaser,\n          removedThumbnail = _this$state2.removedThumbnail;\n      var config = getGlobalConfig();\n      return __jsx(Form, _extends({}, layout, {\n        onFinish: function onFinish(values) {\n          var data = values;\n\n          if (isSchedule) {\n            data.scheduledAt = scheduledAt;\n          }\n\n          if (values.tags && values.tags.length) {\n            data.tags = values.tags.map(function (tag) {\n              return tag.replace(/[^a-zA-Z0-9 ]/g, '_');\n            });\n          }\n\n          submit(data);\n        },\n        onFinishFailed: function onFinishFailed() {\n          return message.error('Please complete the required fields');\n        },\n        name: \"form-upload\",\n        validateMessages: validateMessages,\n        initialValues: video || {\n          title: '',\n          price: 9.99,\n          description: '',\n          tags: [],\n          isSale: false,\n          participantIds: [user._id],\n          isSchedule: false,\n          status: 'active'\n        },\n        scrollToFirstError: true,\n        className: \"account-form\"\n      }), __jsx(Row, null, __jsx(Col, {\n        md: 24,\n        xs: 24\n      }, __jsx(Form.Item, {\n        label: \"Title\",\n        name: \"title\",\n        rules: [{\n          required: true,\n          message: 'Please input title of video!'\n        }]\n      }, __jsx(Input, null))), __jsx(Col, {\n        md: 24,\n        xs: 24\n      }, __jsx(Form.Item, {\n        label: \"Participants\",\n        name: \"participantIds\"\n      }, __jsx(Select, {\n        mode: \"multiple\",\n        style: {\n          width: '100%'\n        },\n        showSearch: true,\n        placeholder: \"Search performers here\",\n        optionFilterProp: \"children\",\n        onSearch: this.getPerformers.bind(this),\n        loading: uploading,\n        defaultValue: (video === null || video === void 0 ? void 0 : video.participantIds) || []\n      }, performers && performers.length > 0 && performers.map(function (p) {\n        return __jsx(Option, {\n          key: p._id,\n          value: p._id\n        }, __jsx(Avatar, {\n          src: (p === null || p === void 0 ? void 0 : p.avatar) || '/static/no-avatar.png'\n        }), ' ', (p === null || p === void 0 ? void 0 : p.name) || (p === null || p === void 0 ? void 0 : p.username) || 'N/A');\n      })))), __jsx(Col, {\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        label: \"Tags\",\n        name: \"tags\"\n      }, __jsx(Select, {\n        mode: \"tags\",\n        style: {\n          width: '100%'\n        },\n        size: \"middle\",\n        showArrow: false,\n        defaultValue: (video === null || video === void 0 ? void 0 : video.tags) || []\n      }))), __jsx(Col, {\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"status\",\n        label: \"Status\",\n        rules: [{\n          required: true,\n          message: 'Please select status!'\n        }]\n      }, __jsx(Select, null, __jsx(Select.Option, {\n        key: \"active\",\n        value: \"active\"\n      }, \"Active\"), __jsx(Select.Option, {\n        key: \"inactive\",\n        value: \"inactive\"\n      }, \"Inactive\")))), __jsx(Col, {\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"isSale\",\n        label: \"For sale?\"\n      }, __jsx(Switch, {\n        checkedChildren: \"Pay per view\",\n        unCheckedChildren: \"Subscribe to view\",\n        checked: isSale,\n        onChange: function onChange(val) {\n          return _this2.setState({\n            isSale: val\n          });\n        }\n      })), isSale && __jsx(Form.Item, {\n        name: \"price\",\n        label: \"Price\"\n      }, __jsx(InputNumber, {\n        style: {\n          width: '100%'\n        },\n        min: 1\n      }))), __jsx(Col, {\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"isSchedule\",\n        label: \"Scheduled?\"\n      }, __jsx(Switch, {\n        checkedChildren: \"Scheduled\",\n        unCheckedChildren: \"Not scheduled\",\n        checked: isSchedule,\n        onChange: function onChange(val) {\n          return _this2.setState({\n            isSchedule: val\n          });\n        }\n      })), isSchedule && __jsx(Form.Item, {\n        label: \"Scheduled for\"\n      }, __jsx(DatePicker, {\n        style: {\n          width: '100%'\n        },\n        disabledDate: function disabledDate(currentDate) {\n          return currentDate && currentDate < moment().endOf('day');\n        },\n        defaultValue: scheduledAt,\n        onChange: function onChange(val) {\n          return _this2.setState({\n            scheduledAt: val\n          });\n        }\n      }))), __jsx(Col, {\n        span: 24\n      }, __jsx(Form.Item, {\n        name: \"description\",\n        label: \"Description\"\n      }, __jsx(Input.TextArea, {\n        rows: 3\n      }))), __jsx(Col, {\n        xs: 24,\n        md: 8\n      }, __jsx(Form.Item, {\n        label: \"Video\",\n        className: \"upload-bl\",\n        help: previewVideo && __jsx(\"a\", {\n          \"aria-hidden\": true,\n          onClick: function onClick() {\n            return _this2.setState({\n              isShowPreview: true,\n              previewUrl: previewVideo === null || previewVideo === void 0 ? void 0 : previewVideo.url,\n              previewType: 'video'\n            });\n          }\n        }, (previewVideo === null || previewVideo === void 0 ? void 0 : previewVideo.name) || 'Click here to preview') || selectedVideo && __jsx(\"a\", null, selectedVideo.name) || \"Video file is \".concat(config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2048, \"MB or below\")\n      }, __jsx(Upload, {\n        customRequest: function customRequest() {\n          return false;\n        },\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        accept: \"video/*\",\n        multiple: false,\n        showUploadList: false,\n        disabled: uploading,\n        beforeUpload: function beforeUpload(file) {\n          return _this2.beforeUpload(file, 'video');\n        }\n      }, selectedVideo ? __jsx(FileDoneOutlined, null) : __jsx(VideoCameraAddOutlined, null)))), __jsx(Col, {\n        xs: 24,\n        md: 8\n      }, __jsx(Form.Item, {\n        label: \"Teaser\",\n        className: \"upload-bl\",\n        help: previewTeaser && !removedTeaser && __jsx(\"a\", {\n          \"aria-hidden\": true,\n          onClick: function onClick() {\n            return _this2.setState({\n              isShowPreview: true,\n              previewUrl: previewTeaser === null || previewTeaser === void 0 ? void 0 : previewTeaser.url,\n              previewType: 'teaser'\n            });\n          }\n        }, (previewTeaser === null || previewTeaser === void 0 ? void 0 : previewTeaser.name) || 'Click here to preview') || selectedTeaser && __jsx(\"a\", null, selectedTeaser.name) || \"Teaser is \".concat(config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200, \"MB or below\")\n      }, __jsx(Upload, {\n        customRequest: function customRequest() {\n          return false;\n        },\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        accept: \"video/*\",\n        multiple: false,\n        showUploadList: false,\n        disabled: uploading,\n        beforeUpload: function beforeUpload(file) {\n          return _this2.beforeUpload(file, 'teaser');\n        }\n      }, selectedTeaser ? __jsx(FileDoneOutlined, null) : __jsx(VideoCameraAddOutlined, null)), (video === null || video === void 0 ? void 0 : video.teaserId) && !removedTeaser && __jsx(Button, {\n        className: \"remove-btn\",\n        type: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleRemovefile('teaser');\n        }\n      }, __jsx(DeleteOutlined, null)))), __jsx(Col, {\n        xs: 24,\n        md: 8\n      }, __jsx(Form.Item, {\n        className: \"upload-bl\",\n        label: \"Thumbnail\",\n        help: previewThumbnail && !removedThumbnail && __jsx(\"a\", {\n          \"aria-hidden\": true,\n          onClick: function onClick() {\n            return _this2.setState({\n              isShowPreview: true,\n              previewUrl: previewThumbnail === null || previewThumbnail === void 0 ? void 0 : previewThumbnail.url,\n              previewType: 'thumbnail'\n            });\n          }\n        }, (previewThumbnail === null || previewThumbnail === void 0 ? void 0 : previewThumbnail.name) || 'Click here to preview') || selectedThumbnail && __jsx(\"a\", null, selectedThumbnail.name) || \"Thumbnail is \".concat(config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5, \"MB or below\")\n      }, __jsx(Upload, {\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        accept: \"image/*\",\n        multiple: false,\n        showUploadList: false,\n        disabled: uploading,\n        beforeUpload: function beforeUpload(file) {\n          return _this2.beforeUpload(file, 'thumbnail');\n        }\n      }, selectedThumbnail ? __jsx(FileDoneOutlined, null) : __jsx(CameraOutlined, null)), (video === null || video === void 0 ? void 0 : video.thumbnailId) && !removedThumbnail && __jsx(Button, {\n        className: \"remove-btn\",\n        type: \"primary\",\n        onClick: function onClick() {\n          return _this2.handleRemovefile('thumbnail');\n        }\n      }, __jsx(DeleteOutlined, null))))), uploadPercentage ? __jsx(Progress, {\n        percent: Math.round(uploadPercentage)\n      }) : null, __jsx(Form.Item, {\n        wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n          offset: 4\n        })\n      }, __jsx(Button, {\n        className: \"primary\",\n        htmlType: \"submit\",\n        loading: uploading,\n        disabled: uploading\n      }, video ? 'Update' : 'Upload'), __jsx(Button, {\n        className: \"secondary\",\n        onClick: function onClick() {\n          return Router.back();\n        },\n        disabled: uploading\n      }, \"Back\")), this.previewModal());\n    }\n  }]);\n\n  return FormUploadVideo;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/video/form-upload.tsx"],"names":["PureComponent","Form","Input","InputNumber","Select","Upload","Button","message","Progress","Switch","DatePicker","Row","Col","Avatar","Modal","CameraOutlined","VideoCameraAddOutlined","FileDoneOutlined","DeleteOutlined","performerService","videoService","moment","debounce","Router","VideoPlayer","getGlobalConfig","layout","labelCol","span","wrapperCol","Option","validateMessages","required","FormUploadVideo","previewThumbnail","previewTeaser","previewVideo","selectedThumbnail","selectedVideo","selectedTeaser","isSale","isSchedule","scheduledAt","performers","isShowPreview","previewUrl","previewType","removedTeaser","removedThumbnail","q","performerIds","search","limit","data","resp","setState","err","error","state","includes","autoplay","controls","playsinline","fluid","sources","src","type","borderRadius","props","video","user","thumbnail","teaser","getPerformers","participantIds","_id","window","confirm","deleteFile","file","field","beforeUploadHandler","beforeUpload","config","isValid","size","NEXT_PUBLIC_MAX_SIZE_IMAGE","NEXT_PUBLIC_MAX_SIZE_TEASER","NEXT_PUBLIC_MAX_SIZE_VIDEO","submit","uploading","uploadPercentage","values","tags","length","map","tag","replace","title","price","description","status","width","bind","p","avatar","name","username","val","currentDate","endOf","url","teaserId","handleRemovefile","thumbnailId","Math","round","offset","back","previewModal"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  Form,\n  Input,\n  InputNumber,\n  Select,\n  Upload,\n  Button,\n  message,\n  Progress,\n  Switch,\n  DatePicker,\n  Row,\n  Col,\n  Avatar,\n  Modal\n} from 'antd';\nimport { IPerformer, IVideo } from 'src/interfaces/index';\nimport {\n  CameraOutlined, VideoCameraAddOutlined, FileDoneOutlined, DeleteOutlined\n} from '@ant-design/icons';\nimport { performerService, videoService } from '@services/index';\nimport moment from 'moment';\nimport { debounce } from 'lodash';\nimport Router from 'next/router';\nimport { VideoPlayer } from '@components/common';\nimport { getGlobalConfig } from '@services/config';\nimport './video.less';\n\ninterface IProps {\n  user: IPerformer;\n  video?: IVideo;\n  submit: Function;\n  beforeUpload?: Function;\n  uploading?: boolean;\n  uploadPercentage?: number;\n}\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }\n};\n\nconst { Option } = Select;\n\nconst validateMessages = {\n  required: 'This field is required!'\n};\n\nexport class FormUploadVideo extends PureComponent<IProps> {\n  state = {\n    previewThumbnail: null,\n    previewTeaser: null,\n    previewVideo: null,\n    selectedThumbnail: null,\n    selectedVideo: null,\n    selectedTeaser: null,\n    isSale: false,\n    isSchedule: false,\n    scheduledAt: moment(),\n    performers: [],\n    isShowPreview: false,\n    previewUrl: '',\n    previewType: '',\n    removedTeaser: false,\n    removedThumbnail: false\n  };\n\n  componentDidMount() {\n    const { video, user } = this.props;\n    if (video) {\n      this.setState({\n        previewThumbnail: video?.thumbnail,\n        previewVideo: video?.video,\n        previewTeaser: video?.teaser,\n        isSale: video.isSale,\n        isSchedule: video.isSchedule,\n        scheduledAt: video.scheduledAt ? moment(video.scheduledAt) : moment()\n      });\n    }\n    this.getPerformers('', video?.participantIds || [user._id]);\n  }\n\n  async handleRemovefile(type: string) {\n    if (!window.confirm('Confirm to remove file!')) return;\n    const { video } = this.props;\n    try {\n      await videoService.deleteFile(video._id, type);\n      type === 'teaser' && this.setState({ removedTeaser: true });\n      type === 'thumbnail' && this.setState({ removedThumbnail: true });\n    } catch (e) {\n      const err = await e;\n      message.error(err?.message || 'Error occured, please try again later');\n    }\n  }\n\n  getPerformers = debounce(async (q, performerIds) => {\n    try {\n      const resp = await (\n        await performerService.search({\n          q,\n          performerIds: performerIds || '',\n          limit: 500\n        })\n      ).data;\n      const performers = resp.data || [];\n      this.setState({ performers });\n    } catch (e) {\n      const err = await e;\n      message.error(err?.message || 'Error occured');\n    }\n  }, 500);\n\n  previewModal = () => {\n    const {\n      isShowPreview, previewUrl, previewType\n    } = this.state;\n    return (\n      <Modal\n        width={767}\n        footer={null}\n        onOk={() => this.setState({ isShowPreview: false })}\n        onCancel={() => this.setState({ isShowPreview: false })}\n        visible={isShowPreview}\n        destroyOnClose\n      >\n        {['teaser', 'video'].includes(previewType) && (\n          <VideoPlayer\n            {...{\n              autoplay: true,\n              controls: true,\n              playsinline: true,\n              fluid: true,\n              sources: [\n                {\n                  src: previewUrl,\n                  type: 'video/mp4'\n                }\n              ]\n            }}\n          />\n        )}\n        {previewType === 'thumbnail' && (\n          <img\n            src={previewUrl}\n            alt=\"thumbnail\"\n            width=\"100%\"\n            style={{ borderRadius: 5 }}\n          />\n        )}\n      </Modal>\n    );\n  };\n\n  beforeUpload(file: File, field: string) {\n    const { beforeUpload: beforeUploadHandler } = this.props;\n    const config = getGlobalConfig();\n    if (field === 'thumbnail') {\n      const isValid = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5);\n      if (!isValid) {\n        message.error(`File is too large please provide an file ${config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5}MB or below`);\n        return isValid;\n      }\n      this.setState({ selectedThumbnail: file });\n    }\n    if (field === 'teaser') {\n      const isValid = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200);\n      if (!isValid) {\n        message.error(`File is too large please provide an file ${config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200}MB or below`);\n        return isValid;\n      }\n      this.setState({ selectedTeaser: file });\n    }\n    if (field === 'video') {\n      const isValid = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2000);\n      if (!isValid) {\n        message.error(`File is too large please provide an file ${config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2000}MB or below`);\n        return isValid;\n      }\n      this.setState({ selectedVideo: file });\n    }\n    return beforeUploadHandler(file, field);\n  }\n\n  render() {\n    const {\n      video, submit, uploading, uploadPercentage, user\n    } = this.props;\n    const {\n      previewThumbnail,\n      previewTeaser,\n      previewVideo,\n      performers,\n      isSale,\n      isSchedule,\n      scheduledAt,\n      selectedThumbnail,\n      selectedTeaser,\n      selectedVideo,\n      removedTeaser,\n      removedThumbnail\n    } = this.state;\n    const config = getGlobalConfig();\n\n    return (\n      <Form\n        {...layout}\n        onFinish={(values) => {\n          const data = values;\n          if (isSchedule) {\n            data.scheduledAt = scheduledAt;\n          }\n          if (values.tags && values.tags.length) {\n            data.tags = values.tags.map((tag) => tag.replace(/[^a-zA-Z0-9 ]/g, '_'));\n          }\n          submit(data);\n        }}\n        onFinishFailed={() => message.error('Please complete the required fields')}\n        name=\"form-upload\"\n        validateMessages={validateMessages}\n        initialValues={\n            video || {\n              title: '',\n              price: 9.99,\n              description: '',\n              tags: [],\n              isSale: false,\n              participantIds: [user._id],\n              isSchedule: false,\n              status: 'active'\n            }\n          }\n        scrollToFirstError\n        className=\"account-form\"\n      >\n        <Row>\n          <Col md={24} xs={24}>\n            <Form.Item\n              label=\"Title\"\n              name=\"title\"\n              rules={[\n                { required: true, message: 'Please input title of video!' }\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col md={24} xs={24}>\n            <Form.Item label=\"Participants\" name=\"participantIds\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: '100%' }}\n                showSearch\n                placeholder=\"Search performers here\"\n                optionFilterProp=\"children\"\n                onSearch={this.getPerformers.bind(this)}\n                loading={uploading}\n                defaultValue={video?.participantIds || []}\n              >\n                {performers\n                    && performers.length > 0\n                    && performers.map((p) => (\n                      <Option key={p._id} value={p._id}>\n                        <Avatar src={p?.avatar || '/static/no-avatar.png'} />\n                        {' '}\n                        {p?.name || p?.username || 'N/A'}\n                      </Option>\n                    ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={12} xs={24}>\n            <Form.Item label=\"Tags\" name=\"tags\">\n              <Select\n                mode=\"tags\"\n                style={{ width: '100%' }}\n                size=\"middle\"\n                showArrow={false}\n                defaultValue={video?.tags || []}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={12} xs={24}>\n            <Form.Item\n              name=\"status\"\n              label=\"Status\"\n              rules={[{ required: true, message: 'Please select status!' }]}\n            >\n              <Select>\n                <Select.Option key=\"active\" value=\"active\">\n                  Active\n                </Select.Option>\n                <Select.Option key=\"inactive\" value=\"inactive\">\n                  Inactive\n                </Select.Option>\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={12} xs={24}>\n            <Form.Item name=\"isSale\" label=\"For sale?\">\n              <Switch\n                checkedChildren=\"Pay per view\"\n                unCheckedChildren=\"Subscribe to view\"\n                checked={isSale}\n                onChange={(val) => this.setState({ isSale: val })}\n              />\n            </Form.Item>\n            {isSale && (\n            <Form.Item name=\"price\" label=\"Price\">\n              <InputNumber style={{ width: '100%' }} min={1} />\n            </Form.Item>\n            )}\n          </Col>\n          <Col md={12} xs={24}>\n            <Form.Item name=\"isSchedule\" label=\"Scheduled?\">\n              <Switch\n                checkedChildren=\"Scheduled\"\n                unCheckedChildren=\"Not scheduled\"\n                checked={isSchedule}\n                onChange={(val) => this.setState({ isSchedule: val })}\n              />\n            </Form.Item>\n            {isSchedule && (\n            <Form.Item label=\"Scheduled for\">\n              <DatePicker\n                style={{ width: '100%' }}\n                disabledDate={(currentDate) => currentDate && currentDate < moment().endOf('day')}\n                defaultValue={scheduledAt}\n                onChange={(val) => this.setState({ scheduledAt: val })}\n              />\n            </Form.Item>\n            )}\n          </Col>\n          <Col span={24}>\n            <Form.Item name=\"description\" label=\"Description\">\n              <Input.TextArea rows={3} />\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={8}>\n            <Form.Item\n              label=\"Video\"\n              className=\"upload-bl\"\n              help={\n                  (previewVideo && (\n                  <a\n                    aria-hidden\n                    onClick={() => this.setState({\n                      isShowPreview: true, previewUrl: previewVideo?.url, previewType: 'video'\n                    })}\n                  >\n                    {previewVideo?.name || 'Click here to preview'}\n                  </a>\n                  ))\n                  || (selectedVideo && <a>{selectedVideo.name}</a>)\n                  || `Video file is ${config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2048}MB or below`\n                }\n            >\n              <Upload\n                customRequest={() => false}\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                accept=\"video/*\"\n                multiple={false}\n                showUploadList={false}\n                disabled={uploading}\n                beforeUpload={(file) => this.beforeUpload(file, 'video')}\n              >\n                {selectedVideo ? (\n                  <FileDoneOutlined />\n                ) : (\n                  <VideoCameraAddOutlined />\n                )}\n              </Upload>\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={8}>\n            <Form.Item\n              label=\"Teaser\"\n              className=\"upload-bl\"\n              help={\n                (previewTeaser && !removedTeaser && (\n                  <a\n                    aria-hidden\n                    onClick={() => this.setState({\n                      isShowPreview: true, previewUrl: previewTeaser?.url, previewType: 'teaser'\n                    })}\n                  >\n                    {previewTeaser?.name || 'Click here to preview'}\n                  </a>\n                ))\n                  || (selectedTeaser && <a>{selectedTeaser.name}</a>)\n                  || `Teaser is ${config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200}MB or below`\n                }\n            >\n              <Upload\n                customRequest={() => false}\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                accept=\"video/*\"\n                multiple={false}\n                showUploadList={false}\n                disabled={uploading}\n                beforeUpload={(file) => this.beforeUpload(file, 'teaser')}\n              >\n                {selectedTeaser ? (\n                  <FileDoneOutlined />\n                ) : (\n                  <VideoCameraAddOutlined />\n                )}\n              </Upload>\n              {video?.teaserId && !removedTeaser && <Button className=\"remove-btn\" type=\"primary\" onClick={() => this.handleRemovefile('teaser')}><DeleteOutlined /></Button>}\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={8}>\n            <Form.Item\n              className=\"upload-bl\"\n              label=\"Thumbnail\"\n              help={\n                (previewThumbnail && !removedThumbnail && (\n                  <a\n                    aria-hidden\n                    onClick={() => this.setState({\n                      isShowPreview: true, previewUrl: previewThumbnail?.url, previewType: 'thumbnail'\n                    })}\n                  >\n                    {previewThumbnail?.name || 'Click here to preview'}\n                  </a>\n                ))\n                  || (selectedThumbnail && <a>{selectedThumbnail.name}</a>)\n                  || `Thumbnail is ${config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5}MB or below`\n                }\n            >\n              <Upload\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                accept=\"image/*\"\n                multiple={false}\n                showUploadList={false}\n                disabled={uploading}\n                beforeUpload={(file) => this.beforeUpload(file, 'thumbnail')}\n              >\n                {selectedThumbnail ? (\n                  <FileDoneOutlined />\n                ) : (\n                  <CameraOutlined />\n                )}\n              </Upload>\n              {video?.thumbnailId && !removedThumbnail && <Button className=\"remove-btn\" type=\"primary\" onClick={() => this.handleRemovefile('thumbnail')}><DeleteOutlined /></Button>}\n            </Form.Item>\n          </Col>\n        </Row>\n        {uploadPercentage ? (\n          <Progress percent={Math.round(uploadPercentage)} />\n        ) : null}\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\n          <Button\n            className=\"primary\"\n            htmlType=\"submit\"\n            loading={uploading}\n            disabled={uploading}\n          >\n            {video ? 'Update' : 'Upload'}\n          </Button>\n          <Button\n            className=\"secondary\"\n            onClick={() => Router.back()}\n            disabled={uploading}\n          >\n            Back\n          </Button>\n        </Form.Item>\n        {this.previewModal()}\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}