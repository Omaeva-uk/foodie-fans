{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { videoService } from '@services/index';\nimport { getVideos, getVideosFail, getVideosSuccess, moreVideo, moreVideoFail, moreVideoSuccess, getRelated, getRelatedSuccess, getRelatedFail } from './actions';\nvar videoSagas = [{\n  on: getVideos,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return videoService.userSearch(_objectSpread({}, data.payload));\n\n          case 3:\n            resp = _context.sent;\n            _context.next = 6;\n            return put(getVideosSuccess(resp.data));\n\n          case 6:\n            _context.next = 15;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            _context.next = 12;\n            return Promise.resolve(_context.t0);\n\n          case 12:\n            error = _context.sent;\n            _context.next = 15;\n            return put(getVideosFail(error));\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}, {\n  on: moreVideo,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return videoService.userSearch(_objectSpread({}, data.payload));\n\n          case 3:\n            resp = _context2.sent;\n            _context2.next = 6;\n            return put(moreVideoSuccess(resp.data));\n\n          case 6:\n            _context2.next = 15;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.next = 12;\n            return Promise.resolve(_context2.t0);\n\n          case 12:\n            error = _context2.sent;\n            _context2.next = 15;\n            return put(moreVideoFail(error));\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}, {\n  on: getRelated,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return videoService.userSearch(data.payload);\n\n          case 3:\n            resp = _context3.sent;\n            _context3.next = 6;\n            return put(getRelatedSuccess(resp.data));\n\n          case 6:\n            _context3.next = 15;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            _context3.next = 12;\n            return Promise.resolve(_context3.t0);\n\n          case 12:\n            error = _context3.sent;\n            _context3.next = 15;\n            return put(getRelatedFail(error));\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}];\nexport default flatten([createSagas(videoSagas)]);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/video/sagas.ts"],"names":["flatten","put","createSagas","videoService","getVideos","getVideosFail","getVideosSuccess","moreVideo","moreVideoFail","moreVideoSuccess","getRelated","getRelatedSuccess","getRelatedFail","videoSagas","on","worker","data","userSearch","payload","resp","Promise","resolve","error"],"mappings":";;;;;;;AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,SACEC,SADF,EACaC,aADb,EAC4BC,gBAD5B,EAEEC,SAFF,EAEaC,aAFb,EAE4BC,gBAF5B,EAGEC,UAHF,EAGcC,iBAHd,EAGiCC,cAHjC,QAIO,WAJP;AAMA,IAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,EAAE,EAAEV,SADN;AAEIW,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMb,YAAY,CAACc,UAAb,mBAA6BD,IAAI,CAACE,OAAlC,EAAN;;AAJnB;AAIYC,YAAAA,IAJZ;AAAA;AAKM,mBAAMlB,GAAG,CAACK,gBAAgB,CAACa,IAAI,CAACH,IAAN,CAAjB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMI,OAAO,CAACC,OAAR,aAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAMrB,GAAG,CAACI,aAAa,CAACiB,KAAD,CAAd,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADiB,EAajB;AACER,EAAAA,EAAE,EAAEP,SADN;AAEIQ,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMb,YAAY,CAACc,UAAb,mBAA6BD,IAAI,CAACE,OAAlC,EAAN;;AAJnB;AAIYC,YAAAA,IAJZ;AAAA;AAKM,mBAAMlB,GAAG,CAACQ,gBAAgB,CAACU,IAAI,CAACH,IAAN,CAAjB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMI,OAAO,CAACC,OAAR,cAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAMrB,GAAG,CAACO,aAAa,CAACc,KAAD,CAAd,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAbiB,EAyBjB;AACER,EAAAA,EAAE,EAAEJ,UADN;AAEIK,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMb,YAAY,CAACc,UAAb,CAAwBD,IAAI,CAACE,OAA7B,CAAN;;AAJnB;AAIYC,YAAAA,IAJZ;AAAA;AAKM,mBAAMlB,GAAG,CAACU,iBAAiB,CAACQ,IAAI,CAACH,IAAN,CAAlB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMI,OAAO,CAACC,OAAR,cAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAMrB,GAAG,CAACW,cAAc,CAACU,KAAD,CAAf,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAzBiB,CAAnB;AAuCA,eAAetB,OAAO,CAAC,CAACE,WAAW,CAACW,UAAD,CAAZ,CAAD,CAAtB","sourcesContent":["import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { videoService } from '@services/index';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  getVideos, getVideosFail, getVideosSuccess,\n  moreVideo, moreVideoFail, moreVideoSuccess,\n  getRelated, getRelatedSuccess, getRelatedFail\n} from './actions';\n\nconst videoSagas = [\n  {\n    on: getVideos,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield videoService.userSearch({ ...data.payload });\n        yield put(getVideosSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getVideosFail(error));\n      }\n    }\n  },\n  {\n    on: moreVideo,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield videoService.userSearch({ ...data.payload });\n        yield put(moreVideoSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(moreVideoFail(error));\n      }\n    }\n  },\n  {\n    on: getRelated,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield videoService.userSearch(data.payload);\n        yield put(getRelatedSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getRelatedFail(error));\n      }\n    }\n  }\n];\n\nexport default flatten([createSagas(videoSagas)]);\n"]},"metadata":{},"sourceType":"module"}