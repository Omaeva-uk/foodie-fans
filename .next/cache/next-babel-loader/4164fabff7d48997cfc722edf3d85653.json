{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var CookieService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(CookieService, _APIRequest);\n\n  var _super = _createSuper(CookieService);\n\n  function CookieService() {\n    _classCallCheck(this, CookieService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CookieService, [{\n    key: \"setCookie\",\n    value: function setCookie(cname, cvalue, exTime) {\n      var d = new Date();\n      d.setTime(d.getTime() + exTime * 60 * 1000);\n      var expires = \"expires=\".concat(d.toUTCString());\n      document.cookie = \"\".concat(cname, \"=\").concat(cvalue, \";\").concat(expires, \";path=/\");\n    }\n  }, {\n    key: \"getCookie\",\n    value: function getCookie(cname) {\n      var name = \"\".concat(cname, \"=\");\n      var decodedCookie = decodeURIComponent(document.cookie);\n      var ca = decodedCookie.split(';');\n\n      for (var i = 0; i < ca.length; i += 1) {\n        var c = ca[i];\n\n        while (c.charAt(0) === ' ') {\n          c = c.substring(1);\n        }\n\n        if (c.indexOf(name) === 0) {\n          return c.substring(name.length, c.length);\n        }\n      }\n\n      return '';\n    }\n  }]);\n\n  return CookieService;\n}(APIRequest);\nexport var cookieService = new CookieService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/cookies.service.ts"],"names":["APIRequest","CookieService","cname","cvalue","exTime","d","Date","setTime","getTime","expires","toUTCString","document","cookie","name","decodedCookie","decodeURIComponent","ca","split","i","length","c","charAt","substring","indexOf","cookieService"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,WAAaC,aAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,mBAAUC,KAAV,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiC;AAC/B,UAAMC,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACAD,MAAAA,CAAC,CAACE,OAAF,CAAUF,CAAC,CAACG,OAAF,KAAeJ,MAAM,GAAG,EAAT,GAAc,IAAvC;AACA,UAAMK,OAAO,qBAAcJ,CAAC,CAACK,WAAF,EAAd,CAAb;AACAC,MAAAA,QAAQ,CAACC,MAAT,aAAqBV,KAArB,cAA8BC,MAA9B,cAAwCM,OAAxC;AACD;AANH;AAAA;AAAA,WAQE,mBAAUP,KAAV,EAAiB;AACf,UAAMW,IAAI,aAAMX,KAAN,MAAV;AACA,UAAMY,aAAa,GAAGC,kBAAkB,CAACJ,QAAQ,CAACC,MAAV,CAAxC;AACA,UAAMI,EAAE,GAAGF,aAAa,CAACG,KAAd,CAAoB,GAApB,CAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,EAAE,CAACG,MAAvB,EAA+BD,CAAC,IAAI,CAApC,EAAuC;AACrC,YAAIE,CAAC,GAAGJ,EAAE,CAACE,CAAD,CAAV;;AACA,eAAOE,CAAC,CAACC,MAAF,CAAS,CAAT,MAAgB,GAAvB,EAA4B;AAC1BD,UAAAA,CAAC,GAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,CAAJ;AACD;;AACD,YAAIF,CAAC,CAACG,OAAF,CAAUV,IAAV,MAAoB,CAAxB,EAA2B;AACzB,iBAAOO,CAAC,CAACE,SAAF,CAAYT,IAAI,CAACM,MAAjB,EAAyBC,CAAC,CAACD,MAA3B,CAAP;AACD;AACF;;AACD,aAAO,EAAP;AACD;AAtBH;;AAAA;AAAA,EAAmCnB,UAAnC;AAyBA,OAAO,IAAMwB,aAAa,GAAG,IAAIvB,aAAJ,EAAtB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class CookieService extends APIRequest {\n  setCookie(cname, cvalue, exTime) {\n    const d = new Date();\n    d.setTime(d.getTime() + (exTime * 60 * 1000));\n    const expires = `expires=${d.toUTCString()}`;\n    document.cookie = `${cname}=${cvalue};${expires};path=/`;\n  }\n\n  getCookie(cname) {\n    const name = `${cname}=`;\n    const decodedCookie = decodeURIComponent(document.cookie);\n    const ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i += 1) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return '';\n  }\n}\n\nexport const cookieService = new CookieService();\n"]},"metadata":{},"sourceType":"module"}