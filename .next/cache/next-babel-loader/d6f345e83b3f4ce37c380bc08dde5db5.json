{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { InputNumber, Button, Avatar } from 'antd';\nimport { TickIcon } from 'src/icons';\nimport './performer.less';\nexport var TipPerformerForm = /*#__PURE__*/function (_PureComponent) {\n  _inherits(TipPerformerForm, _PureComponent);\n\n  var _super = _createSuper(TipPerformerForm);\n\n  function TipPerformerForm() {\n    var _this;\n\n    _classCallCheck(this, TipPerformerForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      price: 10\n    });\n\n    return _this;\n  }\n\n  _createClass(TipPerformerForm, [{\n    key: \"onChangeValue\",\n    value: function onChangeValue(price) {\n      this.setState({\n        price: price\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onFinish = _this$props.onFinish,\n          _this$props$submiting = _this$props.submiting,\n          submiting = _this$props$submiting === void 0 ? false : _this$props$submiting,\n          performer = _this$props.performer;\n      var price = this.state.price;\n      return __jsx(\"div\", {\n        className: \"confirm-purchase-form\"\n      }, __jsx(\"div\", {\n        className: \"left-col\"\n      }, __jsx(Avatar, {\n        src: (performer === null || performer === void 0 ? void 0 : performer.avatar) || '/static/no-avatar.png'\n      }), __jsx(\"div\", {\n        className: \"p-name\"\n      }, (performer === null || performer === void 0 ? void 0 : performer.name) || 'N/A', ' ', (performer === null || performer === void 0 ? void 0 : performer.verifiedAccount) && __jsx(TickIcon, {\n        className: \"primary-color\"\n      })), __jsx(\"div\", {\n        className: \"p-username\"\n      }, \"@\", (performer === null || performer === void 0 ? void 0 : performer.username) || 'n/a'), __jsx(\"img\", {\n        className: \"lock-icon\",\n        src: \"/static/lock-icon.png\",\n        alt: \"lock\"\n      })), __jsx(\"div\", {\n        className: \"right-col\"\n      }, __jsx(\"h2\", null, \"TIP\", ' ', __jsx(\"span\", {\n        className: \"username\"\n      }, \"@\".concat(performer === null || performer === void 0 ? void 0 : performer.username) || 'the model')), __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"price\"\n      }, price.toFixed(2)), ' ', \"USD\"), __jsx(\"div\", {\n        className: \"tip-grps\"\n      }, __jsx(Button, {\n        type: price === 10 ? 'primary' : 'default',\n        onClick: function onClick() {\n          return _this2.onChangeValue(10);\n        }\n      }, \"$10\"), __jsx(Button, {\n        type: price === 20 ? 'primary' : 'default',\n        onClick: function onClick() {\n          return _this2.onChangeValue(20);\n        }\n      }, \"$20\"), __jsx(Button, {\n        type: price === 50 ? 'primary' : 'default',\n        onClick: function onClick() {\n          return _this2.onChangeValue(50);\n        }\n      }, \"$50\"), __jsx(Button, {\n        type: price === 100 ? 'primary' : 'default',\n        onClick: function onClick() {\n          return _this2.onChangeValue(100);\n        }\n      }, \"$100\"), __jsx(Button, {\n        type: price === 200 ? 'primary' : 'default',\n        onClick: function onClick() {\n          return _this2.onChangeValue(200);\n        }\n      }, \"$200\"), __jsx(Button, {\n        type: price === 300 ? 'primary' : 'default',\n        onClick: function onClick() {\n          return _this2.onChangeValue(300);\n        }\n      }, \"$300\"), __jsx(Button, {\n        type: price === 400 ? 'primary' : 'default',\n        onClick: function onClick() {\n          return _this2.onChangeValue(400);\n        }\n      }, \"$400\"), __jsx(Button, {\n        type: price === 500 ? 'primary' : 'default',\n        onClick: function onClick() {\n          return _this2.onChangeValue(500);\n        }\n      }, \"$500\"), __jsx(Button, {\n        type: price === 1000 ? 'primary' : 'default',\n        onClick: function onClick() {\n          return _this2.onChangeValue(1000);\n        }\n      }, \"$1000\")), __jsx(\"div\", {\n        className: \"tip-input\"\n      }, __jsx(\"p\", null, \"Enter tip amount\"), __jsx(InputNumber, {\n        min: 1,\n        onChange: this.onChangeValue.bind(this),\n        value: price\n      })), __jsx(Button, {\n        className: \"primary\",\n        disabled: submiting,\n        loading: submiting,\n        onClick: function onClick() {\n          return onFinish(price);\n        }\n      }, \"SEND TIP\")));\n    }\n  }]);\n\n  return TipPerformerForm;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/tip-form.tsx"],"names":["PureComponent","InputNumber","Button","Avatar","TickIcon","TipPerformerForm","price","setState","props","onFinish","submiting","performer","state","avatar","name","verifiedAccount","username","toFixed","onChangeValue","bind"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  InputNumber, Button, Avatar\n} from 'antd';\nimport { TickIcon } from 'src/icons';\nimport { IPerformer } from '@interfaces/index';\nimport './performer.less';\n\ninterface IProps {\n  performer: IPerformer;\n  onFinish(price: any): Function;\n  submiting: boolean;\n}\n\nexport class TipPerformerForm extends PureComponent<IProps> {\n  state = {\n    price: 10\n  }\n\n  onChangeValue(price) {\n    this.setState({ price });\n  }\n\n  render() {\n    const {\n      onFinish, submiting = false, performer\n    } = this.props;\n    const { price } = this.state;\n    return (\n      <div className=\"confirm-purchase-form\">\n        <div className=\"left-col\">\n          <Avatar src={performer?.avatar || '/static/no-avatar.png'} />\n          <div className=\"p-name\">\n            {performer?.name || 'N/A'}\n            {' '}\n            {performer?.verifiedAccount && <TickIcon className=\"primary-color\" />}\n          </div>\n          <div className=\"p-username\">\n            @\n            {performer?.username || 'n/a'}\n          </div>\n          <img className=\"lock-icon\" src=\"/static/lock-icon.png\" alt=\"lock\" />\n        </div>\n        <div className=\"right-col\">\n          <h2>\n            TIP\n            {' '}\n            <span className=\"username\">{`@${performer?.username}` || 'the model'}</span>\n          </h2>\n          <h3>\n            <span className=\"price\">{price.toFixed(2)}</span>\n            {' '}\n            USD\n          </h3>\n          <div className=\"tip-grps\">\n            <Button type={price === 10 ? 'primary' : 'default'} onClick={() => this.onChangeValue(10)}>\n              $10\n            </Button>\n            <Button type={price === 20 ? 'primary' : 'default'} onClick={() => this.onChangeValue(20)}>\n              $20\n            </Button>\n            <Button type={price === 50 ? 'primary' : 'default'} onClick={() => this.onChangeValue(50)}>\n              $50\n            </Button>\n            <Button type={price === 100 ? 'primary' : 'default'} onClick={() => this.onChangeValue(100)}>\n              $100\n            </Button>\n            <Button type={price === 200 ? 'primary' : 'default'} onClick={() => this.onChangeValue(200)}>\n              $200\n            </Button>\n            <Button type={price === 300 ? 'primary' : 'default'} onClick={() => this.onChangeValue(300)}>\n              $300\n            </Button>\n            <Button type={price === 400 ? 'primary' : 'default'} onClick={() => this.onChangeValue(400)}>\n              $400\n            </Button>\n            <Button type={price === 500 ? 'primary' : 'default'} onClick={() => this.onChangeValue(500)}>\n              $500\n            </Button>\n            <Button type={price === 1000 ? 'primary' : 'default'} onClick={() => this.onChangeValue(1000)}>\n              $1000\n            </Button>\n          </div>\n          <div className=\"tip-input\">\n            <p>Enter tip amount</p>\n            <InputNumber min={1} onChange={this.onChangeValue.bind(this)} value={price} />\n          </div>\n          <Button\n            className=\"primary\"\n            disabled={submiting}\n            loading={submiting}\n            onClick={() => onFinish(price)}\n          >\n            SEND TIP\n          </Button>\n        </div>\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}