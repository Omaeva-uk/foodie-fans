{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { Table, Button, Tag, Tooltip } from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { formatDate } from '@lib/date';\nimport Link from 'next/link';\nimport { ThumbnailVideo } from './thumbnail-video';\nexport var TableListVideo = /*#__PURE__*/function (_PureComponent) {\n  _inherits(TableListVideo, _PureComponent);\n\n  var _super = _createSuper(TableListVideo);\n\n  function TableListVideo() {\n    _classCallCheck(this, TableListVideo);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TableListVideo, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          dataSource = _this$props.dataSource,\n          rowKey = _this$props.rowKey,\n          loading = _this$props.loading,\n          pagination = _this$props.pagination,\n          onChange = _this$props.onChange,\n          onDelete = _this$props.onDelete;\n      var columns = [{\n        title: 'Thumbnail',\n        render: function render(record) {\n          return __jsx(Link, {\n            href: {\n              pathname: '/video',\n              query: {\n                id: record.slug || record._id\n              }\n            },\n            as: \"/video/\".concat(record.slug || record._id)\n          }, __jsx(\"a\", null, __jsx(ThumbnailVideo, {\n            video: record\n          })));\n        }\n      }, {\n        title: 'Title',\n        dataIndex: 'title',\n        render: function render(title, record) {\n          return __jsx(Tooltip, {\n            title: title\n          }, __jsx(\"div\", {\n            style: {\n              maxWidth: 150,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap'\n            }\n          }, __jsx(Link, {\n            href: {\n              pathname: '/video',\n              query: {\n                id: record.slug || record._id\n              }\n            },\n            as: \"/video/\".concat(record.slug || record._id)\n          }, __jsx(\"a\", null, title))));\n        }\n      }, {\n        title: 'Sale?',\n        dataIndex: 'isSale',\n        render: function render(isSale) {\n          switch (isSale) {\n            case true:\n              return __jsx(Tag, {\n                color: \"green\"\n              }, \"Y\");\n\n            case false:\n              return __jsx(Tag, {\n                color: \"red\"\n              }, \"N\");\n\n            default:\n              return __jsx(Tag, {\n                color: \"orange\"\n              }, isSale);\n          }\n        }\n      }, {\n        title: 'Schedule?',\n        dataIndex: 'isSchedule',\n        render: function render(isSchedule) {\n          switch (isSchedule) {\n            case true:\n              return __jsx(Tag, {\n                color: \"green\"\n              }, \"Y\");\n\n            case false:\n              return __jsx(Tag, {\n                color: \"red\"\n              }, \"N\");\n\n            default:\n              return __jsx(Tag, {\n                color: \"orange\"\n              }, isSchedule);\n          }\n        }\n      }, {\n        title: 'Status',\n        dataIndex: 'status',\n        render: function render(status) {\n          switch (status) {\n            case 'active':\n              return __jsx(Tag, {\n                color: \"success\"\n              }, \"Active\");\n\n            case 'inactive':\n              return __jsx(Tag, {\n                color: \"orange\"\n              }, \"Inactive\");\n\n            default:\n              return __jsx(Tag, {\n                color: \"red\"\n              }, status);\n          }\n        }\n      }, {\n        title: 'Updated On',\n        dataIndex: 'updatedAt',\n        sorter: true,\n        render: function render(date) {\n          return __jsx(\"span\", null, formatDate(date));\n        }\n      }, {\n        title: 'Action',\n        dataIndex: '_id',\n        render: function render(id) {\n          return __jsx(\"div\", {\n            style: {\n              whiteSpace: 'nowrap'\n            }\n          }, __jsx(Button, {\n            className: \"info\"\n          }, __jsx(Link, {\n            href: {\n              pathname: '/model/my-video/update',\n              query: {\n                id: id\n              }\n            },\n            as: \"/model/my-video/update?id=\".concat(id)\n          }, __jsx(\"a\", null, __jsx(EditOutlined, null)))), __jsx(Button, {\n            onClick: onDelete.bind(_this, id),\n            className: \"danger\"\n          }, __jsx(DeleteOutlined, null)));\n        }\n      }];\n      return __jsx(\"div\", {\n        className: \"table-responsive\"\n      }, __jsx(Table, {\n        dataSource: dataSource,\n        columns: columns,\n        rowKey: rowKey,\n        loading: loading,\n        pagination: pagination,\n        onChange: onChange.bind(this)\n      }));\n    }\n  }]);\n\n  return TableListVideo;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/video/table-list.tsx"],"names":["PureComponent","Table","Button","Tag","Tooltip","EditOutlined","DeleteOutlined","formatDate","Link","ThumbnailVideo","TableListVideo","props","dataSource","rowKey","loading","pagination","onChange","onDelete","columns","title","render","record","pathname","query","id","slug","_id","dataIndex","maxWidth","overflow","textOverflow","whiteSpace","isSale","isSchedule","status","sorter","date","bind"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  Table, Button, Tag, Tooltip\n} from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { formatDate } from '@lib/date';\nimport Link from 'next/link';\nimport { ThumbnailVideo } from './thumbnail-video';\n\ninterface IProps {\n  dataSource: [];\n  rowKey: string;\n  loading: boolean;\n  pagination: {};\n  onChange: Function;\n  onDelete: Function;\n}\n\nexport class TableListVideo extends PureComponent<IProps> {\n  render() {\n    const {\n      dataSource,\n      rowKey,\n      loading,\n      pagination,\n      onChange,\n      onDelete\n    } = this.props;\n    const columns = [\n      {\n        title: 'Thumbnail',\n        render(record: any) {\n          return (\n            <Link href={{ pathname: '/video', query: { id: record.slug || record._id } }} as={`/video/${record.slug || record._id}`}><a><ThumbnailVideo video={record} /></a></Link>\n          );\n        }\n      },\n      {\n        title: 'Title',\n        dataIndex: 'title',\n        render(title: string, record: any) {\n          return (\n            <Tooltip title={title}>\n              <div style={{\n                maxWidth: 150, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'\n              }}\n              >\n                <Link href={{ pathname: '/video', query: { id: record.slug || record._id } }} as={`/video/${record.slug || record._id}`}>\n                  <a>{title}</a>\n                </Link>\n              </div>\n            </Tooltip>\n          );\n        }\n      },\n      {\n        title: 'Sale?',\n        dataIndex: 'isSale',\n        render(isSale: boolean) {\n          switch (isSale) {\n            case true:\n              return <Tag color=\"green\">Y</Tag>;\n            case false:\n              return <Tag color=\"red\">N</Tag>;\n            default: return <Tag color=\"orange\">{isSale}</Tag>;\n          }\n        }\n      },\n      {\n        title: 'Schedule?',\n        dataIndex: 'isSchedule',\n        render(isSchedule: boolean) {\n          switch (isSchedule) {\n            case true:\n              return <Tag color=\"green\">Y</Tag>;\n            case false:\n              return <Tag color=\"red\">N</Tag>;\n            default: return <Tag color=\"orange\">{isSchedule}</Tag>;\n          }\n        }\n      },\n      {\n        title: 'Status',\n        dataIndex: 'status',\n        render(status: string) {\n          switch (status) {\n            case 'active':\n              return <Tag color=\"success\">Active</Tag>;\n            case 'inactive':\n              return <Tag color=\"orange\">Inactive</Tag>;\n            default:\n              return <Tag color=\"red\">{status}</Tag>;\n          }\n        }\n      },\n      {\n        title: 'Updated On',\n        dataIndex: 'updatedAt',\n        sorter: true,\n        render(date: Date) {\n          return <span>{formatDate(date)}</span>;\n        }\n      },\n      {\n        title: 'Action',\n        dataIndex: '_id',\n        render: (id: string) => (\n          <div style={{ whiteSpace: 'nowrap' }}>\n            <Button className=\"info\">\n              <Link\n                href={{\n                  pathname: '/model/my-video/update',\n                  query: { id }\n                }}\n                as={`/model/my-video/update?id=${id}`}\n              >\n                <a>\n                  <EditOutlined />\n                </a>\n              </Link>\n            </Button>\n            <Button onClick={onDelete.bind(this, id)} className=\"danger\">\n              <DeleteOutlined />\n            </Button>\n          </div>\n        )\n      }\n    ];\n\n    return (\n      <div className=\"table-responsive\">\n        <Table\n          dataSource={dataSource}\n          columns={columns}\n          rowKey={rowKey}\n          loading={loading}\n          pagination={pagination}\n          onChange={onChange.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}