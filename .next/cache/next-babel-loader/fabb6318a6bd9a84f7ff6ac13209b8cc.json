{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { PureComponent } from 'react';\nimport { Button, Avatar } from 'antd';\nimport { TickIcon } from 'src/icons';\nimport './index.less';\nexport class PurchaseFeedForm extends PureComponent {\n  render() {\n    var _feed$performer, _feed$performer2, _feed$performer3, _feed$performer4;\n\n    const {\n      onFinish,\n      submiting = false,\n      feed\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"confirm-purchase-form\"\n    }, __jsx(\"div\", {\n      className: \"left-col\"\n    }, __jsx(Avatar, {\n      src: (feed === null || feed === void 0 ? void 0 : (_feed$performer = feed.performer) === null || _feed$performer === void 0 ? void 0 : _feed$performer.avatar) || '/static/no-avatar.png'\n    }), __jsx(\"div\", {\n      className: \"p-name\"\n    }, (feed === null || feed === void 0 ? void 0 : (_feed$performer2 = feed.performer) === null || _feed$performer2 === void 0 ? void 0 : _feed$performer2.name) || 'N/A', ' ', (feed === null || feed === void 0 ? void 0 : (_feed$performer3 = feed.performer) === null || _feed$performer3 === void 0 ? void 0 : _feed$performer3.verifiedAccount) && __jsx(TickIcon, {\n      className: \"primary-color\"\n    })), __jsx(\"div\", {\n      className: \"p-username\"\n    }, \"@\", (feed === null || feed === void 0 ? void 0 : (_feed$performer4 = feed.performer) === null || _feed$performer4 === void 0 ? void 0 : _feed$performer4.username) || 'n/a'), __jsx(\"img\", {\n      className: \"lock-icon\",\n      src: \"/static/lock-icon.png\",\n      alt: \"lock\"\n    })), __jsx(\"div\", {\n      className: \"right-col\"\n    }, __jsx(\"h2\", null, \"Unlock Content\"), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"price\"\n    }, (feed.price || 0).toFixed(2)), ' ', \"USD\"), __jsx(\"p\", {\n      className: \"description\"\n    }, feed.text), __jsx(Button, {\n      className: \"primary\",\n      disabled: submiting,\n      loading: submiting,\n      onClick: () => onFinish()\n    }, \"CONFIRM TO UNLOCK\")));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/post/confirm-purchase.tsx"],"names":["PureComponent","Button","Avatar","TickIcon","PurchaseFeedForm","render","onFinish","submiting","feed","props","performer","avatar","name","verifiedAccount","username","price","toFixed","text"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SACEC,MADF,EACUC,MADV,QAEO,MAFP;AAIA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAO,cAAP;AAQA,OAAO,MAAMC,gBAAN,SAA+BJ,aAA/B,CAAqD;AAC1DK,EAAAA,MAAM,GAAG;AAAA;;AACP,UAAM;AACJC,MAAAA,QADI;AACMC,MAAAA,SAAS,GAAG,KADlB;AACyBC,MAAAA;AADzB,QAEF,KAAKC,KAFT;AAIA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAE,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,+BAAAA,IAAI,CAAEE,SAAN,oEAAiBC,MAAjB,KAA2B;AAAxC,MADF,EAEE;AAAK,MAAA,SAAS,EAAC;AAAf,OACG,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,gCAAAA,IAAI,CAAEE,SAAN,sEAAiBE,IAAjB,KAAyB,KAD5B,EAEG,GAFH,EAGG,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,gCAAAA,IAAI,CAAEE,SAAN,sEAAiBG,eAAjB,KAAoC,MAAC,QAAD;AAAU,MAAA,SAAS,EAAC;AAApB,MAHvC,CAFF,EAOE;AAAK,MAAA,SAAS,EAAC;AAAf,YAEG,CAAAL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,gCAAAA,IAAI,CAAEE,SAAN,sEAAiBI,QAAjB,KAA6B,KAFhC,CAPF,EAWE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAC,uBAA/B;AAAuD,MAAA,GAAG,EAAC;AAA3D,MAXF,CADF,EAcE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,mCADF,EAIE,kBACE;AAAM,MAAA,SAAS,EAAC;AAAhB,OAAyB,CAACN,IAAI,CAACO,KAAL,IAAc,CAAf,EAAkBC,OAAlB,CAA0B,CAA1B,CAAzB,CADF,EAEG,GAFH,QAJF,EASE;AAAG,MAAA,SAAS,EAAC;AAAb,OACGR,IAAI,CAACS,IADR,CATF,EAYE,MAAC,MAAD;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,QAAQ,EAAEV,SAFZ;AAGE,MAAA,OAAO,EAAEA,SAHX;AAIE,MAAA,OAAO,EAAE,MAAMD,QAAQ;AAJzB,2BAZF,CAdF,CADF;AAsCD;;AA5CyD","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  Button, Avatar\n} from 'antd';\nimport { IFeed } from '@interfaces/index';\nimport { TickIcon } from 'src/icons';\nimport './index.less';\n\ninterface IProps {\n  feed: IFeed;\n  onFinish: Function;\n  submiting: boolean;\n}\n\nexport class PurchaseFeedForm extends PureComponent<IProps> {\n  render() {\n    const {\n      onFinish, submiting = false, feed\n    } = this.props;\n\n    return (\n      <div className=\"confirm-purchase-form\">\n        <div className=\"left-col\">\n          <Avatar src={feed?.performer?.avatar || '/static/no-avatar.png'} />\n          <div className=\"p-name\">\n            {feed?.performer?.name || 'N/A'}\n            {' '}\n            {feed?.performer?.verifiedAccount && <TickIcon className=\"primary-color\" />}\n          </div>\n          <div className=\"p-username\">\n            @\n            {feed?.performer?.username || 'n/a'}\n          </div>\n          <img className=\"lock-icon\" src=\"/static/lock-icon.png\" alt=\"lock\" />\n        </div>\n        <div className=\"right-col\">\n          <h2>\n            Unlock Content\n          </h2>\n          <h3>\n            <span className=\"price\">{(feed.price || 0).toFixed(2)}</span>\n            {' '}\n            USD\n          </h3>\n          <p className=\"description\">\n            {feed.text}\n          </p>\n          <Button\n            className=\"primary\"\n            disabled={submiting}\n            loading={submiting}\n            onClick={() => onFinish()}\n          >\n            CONFIRM TO UNLOCK\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}