{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable no-nested-ternary */\nimport { PureComponent } from 'react';\nimport { Button, Avatar } from 'antd';\nimport { CheckSquareOutlined } from '@ant-design/icons';\nimport { TickIcon } from 'src/icons';\nimport './performer.less';\nexport var ConfirmSubscriptionPerformerForm = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ConfirmSubscriptionPerformerForm, _PureComponent);\n\n  var _super = _createSuper(ConfirmSubscriptionPerformerForm);\n\n  function ConfirmSubscriptionPerformerForm() {\n    _classCallCheck(this, ConfirmSubscriptionPerformerForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ConfirmSubscriptionPerformerForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onFinish = _this$props.onFinish,\n          _this$props$submiting = _this$props.submiting,\n          submiting = _this$props$submiting === void 0 ? false : _this$props$submiting,\n          performer = _this$props.performer,\n          type = _this$props.type;\n      return __jsx(\"div\", {\n        className: \"confirm-purchase-form\"\n      }, __jsx(\"div\", {\n        className: \"left-col\"\n      }, __jsx(Avatar, {\n        src: (performer === null || performer === void 0 ? void 0 : performer.avatar) || '/static/no-avatar.png'\n      }), __jsx(\"div\", {\n        className: \"p-name\"\n      }, (performer === null || performer === void 0 ? void 0 : performer.name) || 'N/A', ' ', (performer === null || performer === void 0 ? void 0 : performer.verifiedAccount) && __jsx(TickIcon, {\n        className: \"primary-color\"\n      })), __jsx(\"div\", {\n        className: \"p-username\"\n      }, \"@\", (performer === null || performer === void 0 ? void 0 : performer.username) || 'n/a'), __jsx(\"img\", {\n        className: \"lock-icon\",\n        src: \"/static/lock-icon.png\",\n        alt: \"lock\"\n      })), __jsx(\"div\", {\n        className: \"right-col\"\n      }, __jsx(\"h2\", null, \"Subscribe\", ' ', __jsx(\"span\", {\n        className: \"username\"\n      }, \"@\".concat(performer === null || performer === void 0 ? void 0 : performer.username) || 'the model')), type === 'monthly' && __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"price\"\n      }, ((performer === null || performer === void 0 ? void 0 : performer.monthlyPrice) || 0).toFixed(2)), ' ', \"USD/month\"), type === 'yearly' && __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"price\"\n      }, ((performer === null || performer === void 0 ? void 0 : performer.yearlyPrice) || 0).toFixed(2)), ' ', \"USD/year\"), type === 'free' && __jsx(\"h3\", null, __jsx(\"span\", {\n        className: \"price\"\n      }, \"FREE\"), ' ', \"for\", ' ', performer === null || performer === void 0 ? void 0 : performer.durationFreeSubscriptionDays, ' ', \"day\", (performer === null || performer === void 0 ? void 0 : performer.durationFreeSubscriptionDays) > 1 ? 's' : ''), __jsx(\"ul\", {\n        className: \"check-list\"\n      }, __jsx(\"li\", null, __jsx(CheckSquareOutlined, null), ' ', \"Full access to this model's exclusive content\"), __jsx(\"li\", null, __jsx(CheckSquareOutlined, null), ' ', \"Direct message with this model\"), __jsx(\"li\", null, __jsx(CheckSquareOutlined, null), ' ', \"Requested personalised Pay Per View content\"), __jsx(\"li\", null, __jsx(CheckSquareOutlined, null), ' ', \"Cancel your subscription at any time\")), __jsx(Button, {\n        className: \"primary\",\n        disabled: submiting,\n        loading: submiting,\n        onClick: function onClick() {\n          return onFinish();\n        }\n      }, \"SUBSCRIBE\"), __jsx(\"p\", {\n        className: \"sub-text\"\n      }, \"Clicking \\\"Subscribe\\\" will take you to the payment screen to finalize you subscription\")));\n    }\n  }]);\n\n  return ConfirmSubscriptionPerformerForm;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/confirm-subscription.tsx"],"names":["PureComponent","Button","Avatar","CheckSquareOutlined","TickIcon","ConfirmSubscriptionPerformerForm","props","onFinish","submiting","performer","type","avatar","name","verifiedAccount","username","monthlyPrice","toFixed","yearlyPrice","durationFreeSubscriptionDays"],"mappings":";;;;;;;;;;;;AAAA;AACA,SAASA,aAAT,QAA8B,OAA9B;AACA,SACEC,MADF,EACUC,MADV,QAEO,MAFP;AAIA,SACEC,mBADF,QAEO,mBAFP;AAGA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAO,kBAAP;AASA,WAAaC,gCAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS;AACP,wBAEI,KAAKC,KAFT;AAAA,UACEC,QADF,eACEA,QADF;AAAA,8CACYC,SADZ;AAAA,UACYA,SADZ,sCACwB,KADxB;AAAA,UAC+BC,SAD/B,eAC+BA,SAD/B;AAAA,UAC0CC,IAD1C,eAC0CA,IAD1C;AAGA,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,MAAD;AAAQ,QAAA,GAAG,EAAE,CAAAD,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,MAAX,KAAqB;AAAlC,QADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACG,CAAAF,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEG,IAAX,KAAmB,KADtB,EAEG,GAFH,EAGG,CAAAH,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEI,eAAX,KAA8B,MAAC,QAAD;AAAU,QAAA,SAAS,EAAC;AAApB,QAHjC,CAFF,EAOE;AAAK,QAAA,SAAS,EAAC;AAAf,cAEG,CAAAJ,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEK,QAAX,KAAuB,KAF1B,CAPF,EAWE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAC,uBAA/B;AAAuD,QAAA,GAAG,EAAC;AAA3D,QAXF,CADF,EAcE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,+BAEG,GAFH,EAGE;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA4B,WAAIL,SAAJ,aAAIA,SAAJ,uBAAIA,SAAS,CAAEK,QAAf,KAA6B,WAAzD,CAHF,CADF,EAMGJ,IAAI,KAAK,SAAT,IACD,kBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SAAyB,CAAC,CAAAD,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEM,YAAX,KAA2B,CAA5B,EAA+BC,OAA/B,CAAuC,CAAvC,CAAzB,CADF,EAEG,GAFH,cAPF,EAaGN,IAAI,KAAK,QAAT,IACD,kBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SAAyB,CAAC,CAAAD,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEQ,WAAX,KAA0B,CAA3B,EAA8BD,OAA9B,CAAsC,CAAtC,CAAzB,CADF,EAEG,GAFH,aAdF,EAoBGN,IAAI,KAAK,MAAT,IACD,kBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,gBADF,EAEG,GAFH,SAIG,GAJH,EAKGD,SALH,aAKGA,SALH,uBAKGA,SAAS,CAAES,4BALd,EAMG,GANH,SAQG,CAAAT,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAES,4BAAX,IAA0C,CAA1C,GAA8C,GAA9C,GAAoD,EARvD,CArBF,EAgCE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE,kBACE,MAAC,mBAAD,OADF,EAEG,GAFH,kDADF,EAME,kBACE,MAAC,mBAAD,OADF,EAEG,GAFH,mCANF,EAWE,kBACE,MAAC,mBAAD,OADF,EAEG,GAFH,gDAXF,EAgBE,kBACE,MAAC,mBAAD,OADF,EAEG,GAFH,yCAhBF,CAhCF,EAsDE,MAAC,MAAD;AACE,QAAA,SAAS,EAAC,SADZ;AAEE,QAAA,QAAQ,EAAEV,SAFZ;AAGE,QAAA,OAAO,EAAEA,SAHX;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAMD,QAAQ,EAAd;AAAA;AAJX,qBAtDF,EA8DE;AAAG,QAAA,SAAS,EAAC;AAAb,mGA9DF,CAdF,CADF;AAkFD;AAvFH;;AAAA;AAAA,EAAsDP,aAAtD","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport { PureComponent } from 'react';\nimport {\n  Button, Avatar\n} from 'antd';\nimport { IPerformer } from 'src/interfaces';\nimport {\n  CheckSquareOutlined\n} from '@ant-design/icons';\nimport { TickIcon } from 'src/icons';\nimport './performer.less';\n\ninterface IProps {\n  type: string;\n  performer: IPerformer;\n  onFinish: Function;\n  submiting: boolean;\n}\n\nexport class ConfirmSubscriptionPerformerForm extends PureComponent<IProps> {\n  render() {\n    const {\n      onFinish, submiting = false, performer, type\n    } = this.props;\n    return (\n      <div className=\"confirm-purchase-form\">\n        <div className=\"left-col\">\n          <Avatar src={performer?.avatar || '/static/no-avatar.png'} />\n          <div className=\"p-name\">\n            {performer?.name || 'N/A'}\n            {' '}\n            {performer?.verifiedAccount && <TickIcon className=\"primary-color\" />}\n          </div>\n          <div className=\"p-username\">\n            @\n            {performer?.username || 'n/a'}\n          </div>\n          <img className=\"lock-icon\" src=\"/static/lock-icon.png\" alt=\"lock\" />\n        </div>\n        <div className=\"right-col\">\n          <h2>\n            Subscribe\n            {' '}\n            <span className=\"username\">{`@${performer?.username}` || 'the model'}</span>\n          </h2>\n          {type === 'monthly' && (\n          <h3>\n            <span className=\"price\">{(performer?.monthlyPrice || 0).toFixed(2)}</span>\n            {' '}\n            USD/month\n          </h3>\n          )}\n          {type === 'yearly' && (\n          <h3>\n            <span className=\"price\">{(performer?.yearlyPrice || 0).toFixed(2)}</span>\n            {' '}\n            USD/year\n          </h3>\n          )}\n          {type === 'free' && (\n          <h3>\n            <span className=\"price\">FREE</span>\n            {' '}\n            for\n            {' '}\n            {performer?.durationFreeSubscriptionDays}\n            {' '}\n            day\n            {performer?.durationFreeSubscriptionDays > 1 ? 's' : ''}\n          </h3>\n          )}\n          <ul className=\"check-list\">\n            <li>\n              <CheckSquareOutlined />\n              {' '}\n              Full access to this model&apos;s exclusive content\n            </li>\n            <li>\n              <CheckSquareOutlined />\n              {' '}\n              Direct message with this model\n            </li>\n            <li>\n              <CheckSquareOutlined />\n              {' '}\n              Requested personalised Pay Per View content\n            </li>\n            <li>\n              <CheckSquareOutlined />\n              {' '}\n              Cancel your subscription at any time\n            </li>\n          </ul>\n          <Button\n            className=\"primary\"\n            disabled={submiting}\n            loading={submiting}\n            onClick={() => onFinish()}\n          >\n            SUBSCRIBE\n          </Button>\n          <p className=\"sub-text\">Clicking &quot;Subscribe&quot; will take you to the payment screen to finalize you subscription</p>\n        </div>\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}