{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var CommentService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(CommentService, _APIRequest);\n\n  var _super = _createSuper(CommentService);\n\n  function CommentService() {\n    _classCallCheck(this, CommentService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CommentService, [{\n    key: \"create\",\n    value: function create(payload) {\n      return this.post('/comments', payload);\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, payload) {\n      return this.upload(\"/comments/\".concat(id), payload);\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/comments/search', query));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return this.del(\"/comments/\".concat(id));\n    }\n  }]);\n\n  return CommentService;\n}(APIRequest);\nexport var commentService = new CommentService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/comment.service.ts"],"names":["APIRequest","CommentService","payload","post","id","upload","query","get","buildUrl","del","commentService"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,WAAaC,cAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,gBACEC,OADF,EAEE;AACA,aAAO,KAAKC,IAAL,CAAU,WAAV,EAAuBD,OAAvB,CAAP;AACD;AALH;AAAA;AAAA,WAOE,gBAAOE,EAAP,EAAmBF,OAAnB,EAAiC;AAC/B,aAAO,KAAKG,MAAL,qBAAyBD,EAAzB,GAA+BF,OAA/B,CAAP;AACD;AATH;AAAA;AAAA,WAWE,gBAAOI,KAAP,EAAuC;AACrC,aAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,kBAAd,EAAkCF,KAAlC,CADK,CAAP;AAGD;AAfH;AAAA;AAAA,WAiBE,iBAAOF,EAAP,EAAmB;AACjB,aAAO,KAAKK,GAAL,qBAAsBL,EAAtB,EAAP;AACD;AAnBH;;AAAA;AAAA,EAAoCJ,UAApC;AAsBA,OAAO,IAAMU,cAAc,GAAG,IAAIT,cAAJ,EAAvB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class CommentService extends APIRequest {\n  create(\n    payload: any\n  ) {\n    return this.post('/comments', payload);\n  }\n\n  update(id: string, payload: any) {\n    return this.upload(`/comments/${id}`, payload);\n  }\n\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/comments/search', query)\n    );\n  }\n\n  delete(id: string) {\n    return this.del(`/comments/${id}`);\n  }\n}\n\nexport const commentService = new CommentService();\n"]},"metadata":{},"sourceType":"module"}