{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var BlockService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(BlockService, _APIRequest);\n\n  var _super = _createSuper(BlockService);\n\n  function BlockService() {\n    _classCallCheck(this, BlockService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BlockService, [{\n    key: \"blockCountries\",\n    value: function blockCountries(payload) {\n      return this.post('/performer-blocks/countries', payload);\n    }\n  }, {\n    key: \"blockUser\",\n    value: function blockUser(payload) {\n      return this.post('/performer-blocks/user', payload);\n    }\n  }, {\n    key: \"unBlockUser\",\n    value: function unBlockUser(id) {\n      this.del(\"/performer-blocks/user/\".concat(id));\n    }\n  }, {\n    key: \"getBlockListUsers\",\n    value: function getBlockListUsers(query) {\n      return this.get(this.buildUrl('/performer-blocks/users', query));\n    }\n  }, {\n    key: \"checkCountryBlock\",\n    value: function checkCountryBlock() {\n      return this.get('/country-block/check');\n    }\n  }]);\n\n  return BlockService;\n}(APIRequest);\nexport var blockService = new BlockService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/block.service.ts"],"names":["APIRequest","BlockService","payload","post","id","del","query","get","buildUrl","blockService"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,WAAaC,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,wBAAeC,OAAf,EAA6B;AAC3B,aAAO,KAAKC,IAAL,CAAU,6BAAV,EAAyCD,OAAzC,CAAP;AACD;AAHH;AAAA;AAAA,WAKE,mBAAUA,OAAV,EAAwB;AACtB,aAAO,KAAKC,IAAL,CAAU,wBAAV,EAAoCD,OAApC,CAAP;AACD;AAPH;AAAA;AAAA,WASE,qBAAYE,EAAZ,EAAwB;AACtB,WAAKC,GAAL,kCAAmCD,EAAnC;AACD;AAXH;AAAA;AAAA,WAaE,2BAAkBE,KAAlB,EAA8B;AAC5B,aAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,yBAAd,EAAyCF,KAAzC,CAAT,CAAP;AACD;AAfH;AAAA;AAAA,WAiBE,6BAAoB;AAClB,aAAO,KAAKC,GAAL,CAAS,sBAAT,CAAP;AACD;AAnBH;;AAAA;AAAA,EAAkCP,UAAlC;AAsBA,OAAO,IAAMS,YAAY,GAAG,IAAIR,YAAJ,EAArB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class BlockService extends APIRequest {\n  blockCountries(payload: any) {\n    return this.post('/performer-blocks/countries', payload);\n  }\n\n  blockUser(payload: any) {\n    return this.post('/performer-blocks/user', payload);\n  }\n\n  unBlockUser(id: string) {\n    this.del(`/performer-blocks/user/${id}`);\n  }\n\n  getBlockListUsers(query: any) {\n    return this.get(this.buildUrl('/performer-blocks/users', query));\n  }\n\n  checkCountryBlock() {\n    return this.get('/country-block/check');\n  }\n}\n\nexport const blockService = new BlockService();\n"]},"metadata":{},"sourceType":"module"}