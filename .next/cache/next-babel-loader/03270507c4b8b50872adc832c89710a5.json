{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var ProductService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(ProductService, _APIRequest);\n\n  var _super = _createSuper(ProductService);\n\n  function ProductService() {\n    _classCallCheck(this, ProductService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProductService, [{\n    key: \"createProduct\",\n    value: function createProduct(files, payload, onProgress) {\n      return this.upload('/performer/performer-assets/products', files, {\n        onProgress: onProgress,\n        customData: payload\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, files, payload, onProgress) {\n      return this.upload(\"/performer/performer-assets/products/\".concat(id), files, {\n        onProgress: onProgress,\n        customData: payload,\n        method: 'PUT'\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/performer/performer-assets/products/search', query));\n    }\n  }, {\n    key: \"userSearch\",\n    value: function userSearch(query) {\n      return this.get(this.buildUrl('/user/performer-assets/products/search', query));\n    }\n  }, {\n    key: \"userView\",\n    value: function userView(productId, headers) {\n      return this.get(\"/user/performer-assets/products/\".concat(productId), headers);\n    }\n  }, {\n    key: \"findById\",\n    value: function findById(id) {\n      return this.get(\"/performer/performer-assets/products/\".concat(id, \"/view\"));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return this.del(\"/performer/performer-assets/products/\".concat(id));\n    }\n  }, {\n    key: \"getBookmarked\",\n    value: function getBookmarked(payload) {\n      return this.get(this.buildUrl('/reactions/products/bookmark', payload));\n    }\n  }]);\n\n  return ProductService;\n}(APIRequest);\nexport var productService = new ProductService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/product.service.ts"],"names":["APIRequest","ProductService","files","payload","onProgress","upload","customData","id","method","query","get","buildUrl","productId","headers","del","productService"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,WAAaC,cAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,uBACEC,KADF,EAEEC,OAFF,EAGEC,UAHF,EAIE;AACA,aAAO,KAAKC,MAAL,CAAY,sCAAZ,EAAoDH,KAApD,EAA2D;AAChEE,QAAAA,UAAU,EAAVA,UADgE;AAEhEE,QAAAA,UAAU,EAAEH;AAFoD,OAA3D,CAAP;AAID;AAVH;AAAA;AAAA,WAYE,gBACEI,EADF,EAEEL,KAFF,EAGEC,OAHF,EAIEC,UAJF,EAKE;AACA,aAAO,KAAKC,MAAL,gDAAoDE,EAApD,GAA0DL,KAA1D,EAAiE;AACtEE,QAAAA,UAAU,EAAVA,UADsE;AAEtEE,QAAAA,UAAU,EAAEH,OAF0D;AAGtEK,QAAAA,MAAM,EAAE;AAH8D,OAAjE,CAAP;AAKD;AAvBH;AAAA;AAAA,WAyBE,gBAAOC,KAAP,EAAuC;AACrC,aAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,6CAAd,EAA6DF,KAA7D,CADK,CAAP;AAGD;AA7BH;AAAA;AAAA,WA+BE,oBAAWA,KAAX,EAA2C;AACzC,aAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,wCAAd,EAAwDF,KAAxD,CADK,CAAP;AAGD;AAnCH;AAAA;AAAA,WAqCE,kBAASG,SAAT,EAA4BC,OAA5B,EAA2C;AACzC,aAAO,KAAKH,GAAL,2CAA4CE,SAA5C,GAAyDC,OAAzD,CAAP;AACD;AAvCH;AAAA;AAAA,WAyCE,kBAASN,EAAT,EAAqB;AACnB,aAAO,KAAKG,GAAL,gDAAiDH,EAAjD,WAAP;AACD;AA3CH;AAAA;AAAA,WA6CE,iBAAOA,EAAP,EAAmB;AACjB,aAAO,KAAKO,GAAL,gDAAiDP,EAAjD,EAAP;AACD;AA/CH;AAAA;AAAA,WAiDE,uBAAcJ,OAAd,EAAuB;AACrB,aAAO,KAAKO,GAAL,CAAS,KAAKC,QAAL,CAAc,8BAAd,EAA8CR,OAA9C,CAAT,CAAP;AACD;AAnDH;;AAAA;AAAA,EAAoCH,UAApC;AAsDA,OAAO,IAAMe,cAAc,GAAG,IAAId,cAAJ,EAAvB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class ProductService extends APIRequest {\n  createProduct(\n    files: [{ fieldname: string; file: File }],\n    payload: any,\n    onProgress?: Function\n  ) {\n    return this.upload('/performer/performer-assets/products', files, {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  update(\n    id: string,\n    files: [{ fieldname: string; file: File }],\n    payload: any,\n    onProgress?: Function\n  ) {\n    return this.upload(`/performer/performer-assets/products/${id}`, files, {\n      onProgress,\n      customData: payload,\n      method: 'PUT'\n    });\n  }\n\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/performer/performer-assets/products/search', query)\n    );\n  }\n\n  userSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/user/performer-assets/products/search', query)\n    );\n  }\n\n  userView(productId: string, headers?: any) {\n    return this.get(`/user/performer-assets/products/${productId}`, headers);\n  }\n\n  findById(id: string) {\n    return this.get(`/performer/performer-assets/products/${id}/view`);\n  }\n\n  delete(id: string) {\n    return this.del(`/performer/performer-assets/products/${id}`);\n  }\n\n  getBookmarked(payload) {\n    return this.get(this.buildUrl('/reactions/products/bookmark', payload));\n  }\n}\n\nexport const productService = new ProductService();\n"]},"metadata":{},"sourceType":"module"}