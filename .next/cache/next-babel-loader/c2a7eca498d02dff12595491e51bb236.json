{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var FeedService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(FeedService, _APIRequest);\n\n  var _super = _createSuper(FeedService);\n\n  function FeedService() {\n    _classCallCheck(this, FeedService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FeedService, [{\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/feeds/performers', query));\n    }\n  }, {\n    key: \"userSearch\",\n    value: function userSearch(query) {\n      return this.get(this.buildUrl('/feeds/users', query));\n    }\n  }, {\n    key: \"userHomeFeeds\",\n    value: function userHomeFeeds(query) {\n      return this.get(this.buildUrl('/feeds/users/home-feeds', query));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return this.del(\"/feeds/performers/\".concat(id));\n    }\n  }, {\n    key: \"findById\",\n    value: function findById(id, headers) {\n      return this.get(\"/feeds/performers/\".concat(id), headers);\n    }\n  }, {\n    key: \"findOne\",\n    value: function findOne(id, headers) {\n      return this.get(\"/feeds/users/\".concat(id), headers);\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, payload) {\n      return this.put(\"/feeds/performers/\".concat(id), payload);\n    }\n  }, {\n    key: \"create\",\n    value: function create(data) {\n      return this.post('/feeds/performers', data);\n    }\n  }, {\n    key: \"uploadPhoto\",\n    value: function uploadPhoto(file, payload, onProgress) {\n      return this.upload('/feeds/performers/photo/upload', [{\n        fieldname: 'file',\n        file: file\n      }], {\n        onProgress: onProgress,\n        customData: payload\n      });\n    }\n  }, {\n    key: \"uploadThumbnail\",\n    value: function uploadThumbnail(file, payload, onProgress) {\n      return this.upload('/feeds/performers/thumbnail/upload', [{\n        fieldname: 'file',\n        file: file\n      }], {\n        onProgress: onProgress,\n        customData: payload\n      });\n    }\n  }, {\n    key: \"uploadVideo\",\n    value: function uploadVideo(file, payload, onProgress) {\n      return this.upload('/feeds/performers/video/upload', [{\n        fieldname: 'file',\n        file: file\n      }], {\n        onProgress: onProgress,\n        customData: payload\n      });\n    }\n  }, {\n    key: \"uploadTeaser\",\n    value: function uploadTeaser(file, payload, onProgress) {\n      return this.upload('/feeds/performers/teaser/upload', [{\n        fieldname: 'file',\n        file: file\n      }], {\n        onProgress: onProgress,\n        customData: payload\n      });\n    }\n  }, {\n    key: \"addPoll\",\n    value: function addPoll(payload) {\n      return this.post('/feeds/performers/polls', payload);\n    }\n  }, {\n    key: \"votePoll\",\n    value: function votePoll(pollId) {\n      return this.post(\"/feeds/users/vote/\".concat(pollId));\n    }\n  }, {\n    key: \"getBookmark\",\n    value: function getBookmark(payload) {\n      return this.get(this.buildUrl('/reactions/feeds/bookmark', payload));\n    }\n  }]);\n\n  return FeedService;\n}(APIRequest);\nexport var feedService = new FeedService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/feed.service.ts"],"names":["APIRequest","FeedService","query","get","buildUrl","id","del","headers","payload","put","data","post","file","onProgress","upload","fieldname","customData","pollId","feedService"],"mappings":"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","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class FeedService extends APIRequest {\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/performers', query)\n    );\n  }\n\n  userSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users', query)\n    );\n  }\n\n  userHomeFeeds(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users/home-feeds', query)\n    );\n  }\n\n  delete(id: string) {\n    return this.del(`/feeds/performers/${id}`);\n  }\n\n  findById(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/feeds/performers/${id}`, headers);\n  }\n\n  findOne(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/feeds/users/${id}`, headers);\n  }\n\n  update(id: string, payload: any) {\n    return this.put(`/feeds/performers/${id}`, payload);\n  }\n\n  create(data) {\n    return this.post('/feeds/performers', data);\n  }\n\n  uploadPhoto(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/photo/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadThumbnail(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/thumbnail/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadVideo(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/video/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadTeaser(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/teaser/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  addPoll(payload) {\n    return this.post('/feeds/performers/polls', payload);\n  }\n\n  votePoll(pollId: string) {\n    return this.post(`/feeds/users/vote/${pollId}`);\n  }\n\n  getBookmark(payload) {\n    return this.get(this.buildUrl('/reactions/feeds/bookmark', payload));\n  }\n}\n\nexport const feedService = new FeedService();\n"]},"metadata":{},"sourceType":"module"}