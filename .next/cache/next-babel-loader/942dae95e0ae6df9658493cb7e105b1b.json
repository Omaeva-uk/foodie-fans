{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var ReactionService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(ReactionService, _APIRequest);\n\n  var _super = _createSuper(ReactionService);\n\n  function ReactionService() {\n    _classCallCheck(this, ReactionService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ReactionService, [{\n    key: \"create\",\n    value: function create(payload) {\n      return this.post('/reactions', payload);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(payload) {\n      return this.del('/reactions', payload);\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/reactions/search', query));\n    }\n  }]);\n\n  return ReactionService;\n}(APIRequest);\nexport var reactionService = new ReactionService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/reaction.service.ts"],"names":["APIRequest","ReactionService","payload","post","del","query","get","buildUrl","reactionService"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,WAAaC,eAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,gBAAOC,OAAP,EAAqB;AACnB,aAAO,KAAKC,IAAL,CAAU,YAAV,EAAwBD,OAAxB,CAAP;AACD;AAHH;AAAA;AAAA,WAKE,iBAAOA,OAAP,EAAqB;AACnB,aAAO,KAAKE,GAAL,CAAS,YAAT,EAAuBF,OAAvB,CAAP;AACD;AAPH;AAAA;AAAA,WASE,gBAAOG,KAAP,EAAuC;AACrC,aAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,mBAAd,EAAmCF,KAAnC,CADK,CAAP;AAGD;AAbH;;AAAA;AAAA,EAAqCL,UAArC;AAgBA,OAAO,IAAMQ,eAAe,GAAG,IAAIP,eAAJ,EAAxB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class ReactionService extends APIRequest {\n  create(payload: any) {\n    return this.post('/reactions', payload);\n  }\n\n  delete(payload: any) {\n    return this.del('/reactions', payload);\n  }\n\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/reactions/search', query)\n    );\n  }\n}\n\nexport const reactionService = new ReactionService();\n"]},"metadata":{},"sourceType":"module"}