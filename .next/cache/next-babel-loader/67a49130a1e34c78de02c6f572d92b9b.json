{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport cookie from \"js-cookie\";\nimport { isUrl } from \"@lib/string\";\nimport { getGlobalConfig } from \"./config\";\nexport var TOKEN = \"token\";\nexport var APIRequest = /*#__PURE__*/function () {\n  function APIRequest() {\n    _classCallCheck(this, APIRequest);\n  }\n\n  _createClass(APIRequest, [{\n    key: \"setAuthHeaderToken\",\n    value: function setAuthHeaderToken(token) {\n      APIRequest.token = token;\n    }\n    /**\n     * Parses the JSON returned by a network request\n     *\n     * @param  {object} response A response from a network request\n     *\n     * @return {object}          The parsed JSON from the request\n     */\n\n  }, {\n    key: \"parseJSON\",\n    value: function parseJSON(response) {\n      if (response.status === 204 || response.status === 205) {\n        return null;\n      }\n\n      return response.json();\n    }\n    /**\n     * Checks if a network request came back fine, and throws an error if not\n     *\n     * @param  {object} response   A response from a network request\n     *\n     * @return {object|undefined} Returns either the response, or throws an error\n     */\n\n  }, {\n    key: \"checkStatus\",\n    value: function checkStatus(response) {\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      }\n\n      if (response.status === 401) {\n        if (true) {\n          Router.push(\"/login\");\n        }\n\n        throw new Error(\"Please login!\");\n      } // const error = new Error(response.statusText) as any;\n      // error.response = response;\n      // throw error;\n\n\n      throw response.clone().json();\n    }\n  }, {\n    key: \"request\",\n    value: function request(url, method, body, headers) {\n      var verb = (method || \"get\").toUpperCase();\n\n      var updatedHeader = _objectSpread({\n        \"Content-Type\": \"application/json\",\n        Authorization: APIRequest.token || cookie.get(TOKEN) || null\n      }, headers || {});\n\n      var config = getGlobalConfig();\n      var baseUrl = config.API_ENDPOINT || config.NEXT_PUBLIC_API_ENDPOINT || process.env.API_ENDPOINT;\n      var apiUrl = isUrl(url) ? url : \"\".concat(baseUrl).concat(url.startsWith(\"/\") ? url : \"/\".concat(url));\n      return fetch(apiUrl, {\n        method: verb,\n        headers: updatedHeader,\n        body: body ? JSON.stringify(body) : null\n      }).then(this.checkStatus).then(this.parseJSON);\n    }\n  }, {\n    key: \"buildUrl\",\n    value: function buildUrl(baseUrl, params) {\n      if (!params) {\n        return baseUrl;\n      }\n\n      var queryString = Object.keys(params).map(function (k) {\n        if (Array.isArray(params[k])) {\n          return params[k].map(function (param) {\n            return \"\".concat(encodeURIComponent(k), \"=\").concat(encodeURIComponent(param));\n          }).join(\"&\");\n        }\n\n        return \"\".concat(encodeURIComponent(k), \"=\").concat(encodeURIComponent(params[k]));\n      }).join(\"&\");\n      return \"\".concat(baseUrl, \"?\").concat(queryString);\n    }\n  }, {\n    key: \"get\",\n    value: function get(url, headers) {\n      return this.request(url, \"get\", null, headers);\n    }\n  }, {\n    key: \"post\",\n    value: function post(url, data, headers) {\n      return this.request(url, \"post\", data, headers);\n    }\n  }, {\n    key: \"put\",\n    value: function put(url, data, headers) {\n      return this.request(url, \"put\", data, headers);\n    }\n  }, {\n    key: \"del\",\n    value: function del(url, data, headers) {\n      return this.request(url, \"delete\", data, headers);\n    }\n  }, {\n    key: \"upload\",\n    value: function upload(url, files) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        onProgress: function onProgress() {},\n        method: \"POST\"\n      };\n      var config = getGlobalConfig();\n      var uploadUrl = isUrl(url) ? url : \"\".concat(config.API_ENDPOINT || config.NEXT_PUBLIC_API_ENDPOINT).concat(url);\n      return new Promise(function (resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.upload.addEventListener(\"progress\", function (event) {\n          if (event.lengthComputable) {\n            options.onProgress({\n              percentage: event.loaded / event.total * 100\n            });\n          }\n        });\n        req.addEventListener(\"load\", function () {\n          var success = req.status >= 200 && req.status < 300;\n          var response = req.response;\n\n          if (!success) {\n            return reject(response);\n          }\n\n          return resolve(response);\n        });\n        req.upload.addEventListener(\"error\", function () {\n          reject(req.response);\n        });\n        var formData = new FormData();\n        files.forEach(function (f) {\n          return formData.append(f.fieldname, f.file, f.file.name);\n        });\n        options.customData && Object.keys(options.customData).forEach(function (fieldname) {\n          if (typeof options.customData[fieldname] !== \"undefined\" && !Array.isArray(options.customData[fieldname])) formData.append(fieldname, options.customData[fieldname]);\n\n          if (typeof options.customData[fieldname] !== \"undefined\" && Array.isArray(options.customData[fieldname])) {\n            if (options.customData[fieldname].length) {\n              for (var i = 0; i < options.customData[fieldname].length; i += 1) {\n                formData.append(fieldname, options.customData[fieldname][i]);\n              }\n            }\n          }\n        });\n        req.responseType = \"json\";\n        req.open(options.method || \"POST\", uploadUrl);\n        var token = APIRequest.token || cookie.get(TOKEN);\n        req.setRequestHeader(\"Authorization\", token || \"\");\n        req.send(formData);\n      });\n    }\n  }]);\n\n  return APIRequest;\n}();\n\n_defineProperty(APIRequest, \"token\", \"\");","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/api-request.ts"],"names":["fetch","Router","cookie","isUrl","getGlobalConfig","TOKEN","APIRequest","token","response","status","json","push","Error","clone","url","method","body","headers","verb","toUpperCase","updatedHeader","Authorization","get","config","baseUrl","API_ENDPOINT","NEXT_PUBLIC_API_ENDPOINT","process","env","apiUrl","startsWith","JSON","stringify","then","checkStatus","parseJSON","params","queryString","Object","keys","map","k","Array","isArray","param","encodeURIComponent","join","request","data","files","options","onProgress","uploadUrl","Promise","resolve","reject","req","XMLHttpRequest","upload","addEventListener","event","lengthComputable","percentage","loaded","total","success","formData","FormData","forEach","f","append","fieldname","file","name","customData","length","i","responseType","open","setRequestHeader","send"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Router from \"next/router\";\nimport cookie from \"js-cookie\";\nimport { isUrl } from \"@lib/string\";\nimport { getGlobalConfig } from \"./config\";\n\nexport interface IResponse<T> {\n  status: number;\n  data: T;\n}\n\nexport const TOKEN = \"token\";\n\nexport abstract class APIRequest {\n  static token: string = \"\";\n\n  setAuthHeaderToken(token: string) {\n    APIRequest.token = token;\n  }\n\n  /**\n   * Parses the JSON returned by a network request\n   *\n   * @param  {object} response A response from a network request\n   *\n   * @return {object}          The parsed JSON from the request\n   */\n  private parseJSON(response: Response) {\n    if (response.status === 204 || response.status === 205) {\n      return null;\n    }\n    return response.json();\n  }\n\n  /**\n   * Checks if a network request came back fine, and throws an error if not\n   *\n   * @param  {object} response   A response from a network request\n   *\n   * @return {object|undefined} Returns either the response, or throws an error\n   */\n  private checkStatus(response: Response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    }\n\n    if (response.status === 401) {\n      if (process.browser) {\n        Router.push(\"/login\");\n      }\n\n      throw new Error(\"Please login!\");\n    }\n\n    // const error = new Error(response.statusText) as any;\n    // error.response = response;\n    // throw error;\n    throw response.clone().json();\n  }\n\n  request(\n    url: string,\n    method?: string,\n    body?: any,\n    headers?: { [key: string]: string }\n  ): Promise<IResponse<any>> {\n    const verb = (method || \"get\").toUpperCase();\n    const updatedHeader = {\n      \"Content-Type\": \"application/json\",\n      Authorization: APIRequest.token || cookie.get(TOKEN) || null,\n      ...(headers || {}),\n    };\n    const config = getGlobalConfig();\n    const baseUrl =\n      config.API_ENDPOINT ||\n      config.NEXT_PUBLIC_API_ENDPOINT ||\n      process.env.API_ENDPOINT;\n    const apiUrl = isUrl(url)\n      ? url\n      : `${baseUrl}${url.startsWith(\"/\") ? url : `/${url}`}`;\n\n    return fetch(apiUrl, {\n      method: verb,\n      headers: updatedHeader,\n      body: body ? JSON.stringify(body) : null,\n    })\n      .then(this.checkStatus)\n      .then(this.parseJSON);\n  }\n\n  buildUrl(baseUrl: string, params?: { [key: string]: any }) {\n    if (!params) {\n      return baseUrl;\n    }\n\n    const queryString = Object.keys(params)\n      .map((k) => {\n        if (Array.isArray(params[k])) {\n          return params[k]\n            .map(\n              (param) => `${encodeURIComponent(k)}=${encodeURIComponent(param)}`\n            )\n            .join(\"&\");\n        }\n        return `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`;\n      })\n      .join(\"&\");\n    return `${baseUrl}?${queryString}`;\n  }\n\n  get(url: string, headers?: { [key: string]: string }) {\n    return this.request(url, \"get\", null, headers);\n  }\n\n  post(url: string, data?: any, headers?: { [key: string]: string }) {\n    return this.request(url, \"post\", data, headers);\n  }\n\n  put(url: string, data?: any, headers?: { [key: string]: string }) {\n    return this.request(url, \"put\", data, headers);\n  }\n\n  del(url: string, data?: any, headers?: { [key: string]: string }) {\n    return this.request(url, \"delete\", data, headers);\n  }\n\n  upload(\n    url: string,\n    files: {\n      file: File;\n      fieldname: string;\n    }[],\n    options: {\n      onProgress: Function;\n      customData?: Record<any, any>;\n      method?: string;\n    } = {\n      onProgress() {},\n      method: \"POST\",\n    }\n  ) {\n    const config = getGlobalConfig();\n    const uploadUrl = isUrl(url)\n      ? url\n      : `${config.API_ENDPOINT || config.NEXT_PUBLIC_API_ENDPOINT}${url}`;\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n\n      req.upload.addEventListener(\"progress\", (event) => {\n        if (event.lengthComputable) {\n          options.onProgress({\n            percentage: (event.loaded / event.total) * 100,\n          });\n        }\n      });\n\n      req.addEventListener(\"load\", () => {\n        const success = req.status >= 200 && req.status < 300;\n        const { response } = req;\n        if (!success) {\n          return reject(response);\n        }\n        return resolve(response);\n      });\n\n      req.upload.addEventListener(\"error\", () => {\n        reject(req.response);\n      });\n\n      const formData = new FormData();\n      files.forEach((f) => formData.append(f.fieldname, f.file, f.file.name));\n      options.customData &&\n        Object.keys(options.customData).forEach((fieldname) => {\n          if (\n            typeof options.customData[fieldname] !== \"undefined\" &&\n            !Array.isArray(options.customData[fieldname])\n          )\n            formData.append(fieldname, options.customData[fieldname]);\n          if (\n            typeof options.customData[fieldname] !== \"undefined\" &&\n            Array.isArray(options.customData[fieldname])\n          ) {\n            if (options.customData[fieldname].length) {\n              for (\n                let i = 0;\n                i < options.customData[fieldname].length;\n                i += 1\n              ) {\n                formData.append(fieldname, options.customData[fieldname][i]);\n              }\n            }\n          }\n        });\n\n      req.responseType = \"json\";\n      req.open(options.method || \"POST\", uploadUrl);\n\n      const token: any = APIRequest.token || cookie.get(TOKEN);\n      req.setRequestHeader(\"Authorization\", token || \"\");\n      req.send(formData);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}