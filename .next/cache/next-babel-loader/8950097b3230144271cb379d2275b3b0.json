{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable no-template-curly-in-string */\nimport { PureComponent } from 'react';\nimport { Form, Input, Button, Row, Col, Select, DatePicker, Upload, Progress, message, Checkbox, Popover, Modal } from 'antd';\nimport { AvatarUpload } from '@components/user/avatar-upload';\nimport { CoverUpload } from '@components/user/cover-upload';\nimport { UploadOutlined, TwitterOutlined, GoogleOutlined } from '@ant-design/icons';\nimport { getGlobalConfig } from '@services/config';\nimport { VideoPlayer } from '@components/common';\nimport moment from 'moment';\nvar Option = Select.Option;\nvar layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nvar TextArea = Input.TextArea;\nvar validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  },\n  number: {\n    range: 'Must be between ${min} and ${max}'\n  }\n};\nexport var PerformerAccountForm = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerAccountForm, _PureComponent);\n\n  var _super = _createSuper(PerformerAccountForm);\n\n  function PerformerAccountForm() {\n    var _this;\n\n    _classCallCheck(this, PerformerAccountForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isUploadingVideo: false,\n      uploadVideoPercentage: 0,\n      previewVideoUrl: null,\n      previewVideoName: null,\n      isShowPreview: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVideoChange\", function (info) {\n      info.file && info.file.percent && _this.setState({\n        uploadVideoPercentage: info.file.percent\n      });\n\n      if (info.file.status === 'uploading') {\n        _this.setState({\n          isUploadingVideo: true\n        });\n\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        var _info$file, _info$file$response, _info$file2, _info$file2$response;\n\n        message.success('Intro video was uploaded');\n\n        _this.setState({\n          isUploadingVideo: false,\n          previewVideoUrl: info === null || info === void 0 ? void 0 : (_info$file = info.file) === null || _info$file === void 0 ? void 0 : (_info$file$response = _info$file.response) === null || _info$file$response === void 0 ? void 0 : _info$file$response.data.url,\n          previewVideoName: info === null || info === void 0 ? void 0 : (_info$file2 = info.file) === null || _info$file2 === void 0 ? void 0 : (_info$file2$response = _info$file2.response) === null || _info$file2$response === void 0 ? void 0 : _info$file2$response.data.name\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"beforeUploadVideo\", function (file) {\n      var isValid = file.size / 1024 / 1024 < (getGlobalConfig().NEXT_PUBLIC_MAX_SIZE_TEASER || 200);\n\n      if (!isValid) {\n        message.error(\"File is too large please provide an file \".concat(getGlobalConfig().NEXT_PUBLIC_MAX_SIZE_TEASER || 200, \"MB or below\"));\n        return false;\n      }\n\n      _this.setState({\n        previewVideoName: file.name\n      });\n\n      return true;\n    });\n\n    return _this;\n  }\n\n  _createClass(PerformerAccountForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = this.props.user;\n      this.setState({\n        previewVideoUrl: user === null || user === void 0 ? void 0 : user.welcomeVideoPath,\n        previewVideoName: user === null || user === void 0 ? void 0 : user.welcomeVideoName\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onFinish = _this$props.onFinish,\n          user = _this$props.user,\n          updating = _this$props.updating,\n          countries = _this$props.countries,\n          options = _this$props.options,\n          bodyInfo = _this$props.bodyInfo,\n          onVerifyEmail = _this$props.onVerifyEmail,\n          _this$props$countTime = _this$props.countTime,\n          countTime = _this$props$countTime === void 0 ? 60 : _this$props$countTime;\n      var _bodyInfo$heights = bodyInfo.heights,\n          heights = _bodyInfo$heights === void 0 ? [] : _bodyInfo$heights,\n          _bodyInfo$weights = bodyInfo.weights,\n          weights = _bodyInfo$weights === void 0 ? [] : _bodyInfo$weights,\n          _bodyInfo$bodyTypes = bodyInfo.bodyTypes,\n          bodyTypes = _bodyInfo$bodyTypes === void 0 ? [] : _bodyInfo$bodyTypes,\n          _bodyInfo$genders = bodyInfo.genders,\n          genders = _bodyInfo$genders === void 0 ? [] : _bodyInfo$genders,\n          _bodyInfo$sexualOrien = bodyInfo.sexualOrientations,\n          sexualOrientations = _bodyInfo$sexualOrien === void 0 ? [] : _bodyInfo$sexualOrien,\n          _bodyInfo$ethnicities = bodyInfo.ethnicities,\n          ethnicities = _bodyInfo$ethnicities === void 0 ? [] : _bodyInfo$ethnicities,\n          _bodyInfo$hairs = bodyInfo.hairs,\n          hairs = _bodyInfo$hairs === void 0 ? [] : _bodyInfo$hairs,\n          _bodyInfo$eyes = bodyInfo.eyes,\n          eyes = _bodyInfo$eyes === void 0 ? [] : _bodyInfo$eyes,\n          _bodyInfo$butts = bodyInfo.butts,\n          butts = _bodyInfo$butts === void 0 ? [] : _bodyInfo$butts;\n      var uploadHeaders = options.uploadHeaders,\n          avatarUploadUrl = options.avatarUploadUrl,\n          onAvatarUploaded = options.onAvatarUploaded,\n          coverUploadUrl = options.coverUploadUrl,\n          onCoverUploaded = options.onCoverUploaded,\n          videoUploadUrl = options.videoUploadUrl;\n      var _this$state = this.state,\n          isUploadingVideo = _this$state.isUploadingVideo,\n          uploadVideoPercentage = _this$state.uploadVideoPercentage,\n          previewVideoUrl = _this$state.previewVideoUrl,\n          previewVideoName = _this$state.previewVideoName,\n          isShowPreview = _this$state.isShowPreview;\n      return __jsx(Form, _extends({}, layout, {\n        name: \"nest-messages\",\n        onFinish: onFinish.bind(this),\n        validateMessages: validateMessages,\n        initialValues: _objectSpread(_objectSpread({}, user), {}, {\n          dateOfBirth: user.dateOfBirth && moment(user.dateOfBirth) || ''\n        }),\n        scrollToFirstError: true,\n        className: \"account-form\"\n      }), __jsx(\"div\", {\n        className: \"top-profile\",\n        style: {\n          position: 'relative',\n          marginBottom: 25,\n          backgroundImage: user !== null && user !== void 0 && user.cover ? \"url('\".concat(user.cover, \"')\") : \"url('/static/banner-image.jpg')\"\n        }\n      }, __jsx(\"div\", {\n        className: \"avatar-upload\"\n      }, __jsx(AvatarUpload, {\n        headers: uploadHeaders,\n        uploadUrl: avatarUploadUrl,\n        onUploaded: onAvatarUploaded,\n        image: user.avatar\n      })), __jsx(\"div\", {\n        className: \"cover-upload\"\n      }, __jsx(CoverUpload, {\n        headers: uploadHeaders,\n        uploadUrl: coverUploadUrl,\n        onUploaded: onCoverUploaded,\n        image: user.cover,\n        options: {\n          fieldName: 'cover'\n        }\n      }))), __jsx(Row, null, __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"firstName\",\n        label: \"First Name\",\n        validateTrigger: ['onChange', 'onBlur'],\n        rules: [{\n          required: true,\n          message: 'Please input your first name!'\n        }, {\n          pattern: new RegExp(/^[ ',-\\.A-Za-z\\xC0-\\xCF\\xD1-\\xD6\\xD8-\\xDD\\xDF-\\xE5\\xE7-\\xF6\\xF8-\\xFD\\xFF\\u0104-\\u0107\\u010C\\u010D\\u0116-\\u0119\\u012E\\u012F\\u0141-\\u0144\\u0152\\u0160\\u0161\\u016A\\u016B\\u0172\\u0173\\u0178-\\u017E\\u2202]+$/),\n          message: 'First name can not contain number and special character'\n        }]\n      }, __jsx(Input, null))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"lastName\",\n        label: \"Last Name\",\n        validateTrigger: ['onChange', 'onBlur'],\n        rules: [{\n          required: true,\n          message: 'Please input your last name!'\n        }, {\n          pattern: new RegExp(/^[ ',-\\.A-Za-z\\xC0-\\xCF\\xD1-\\xD6\\xD8-\\xDD\\xDF-\\xE5\\xE7-\\xF6\\xF8-\\xFD\\xFF\\u0104-\\u0107\\u010C\\u010D\\u0116-\\u0119\\u012E\\u012F\\u0141-\\u0144\\u0152\\u0160\\u0161\\u016A\\u016B\\u0172\\u0173\\u0178-\\u017E\\u2202]+$/),\n          message: 'Last name can not contain number and special character'\n        }]\n      }, __jsx(Input, null))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"name\",\n        label: \"Display Name\",\n        validateTrigger: ['onChange', 'onBlur'],\n        rules: [{\n          required: true,\n          message: 'Please input your display name!'\n        }, {\n          pattern: new RegExp(/^(?=.*\\S).+$/g),\n          message: 'Display name can not contain only whitespace'\n        }, {\n          min: 3,\n          message: 'Display name must containt at least 3 characters'\n        }],\n        hasFeedback: true\n      }, __jsx(Input, null))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"username\",\n        label: \"Username\",\n        validateTrigger: ['onChange', 'onBlur'],\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }, {\n          pattern: new RegExp(/^[a-z0-9]+$/g),\n          message: 'Username must contain lowercase alphanumerics only'\n        }, {\n          min: 3,\n          message: 'Username must containt at least 3 characters'\n        }],\n        hasFeedback: true\n      }, __jsx(Input, {\n        placeholder: \"user1, john99,...\"\n      }))), __jsx(Col, {\n        lg: 24,\n        md: 24,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"email\",\n        label: __jsx(\"span\", {\n          style: {\n            fontSize: 10\n          }\n        }, \"Email Address\", '  ', user.verifiedEmail ? __jsx(Popover, {\n          title: \"Your email address is verified\",\n          content: null\n        }, __jsx(\"a\", {\n          className: \"success-color\"\n        }, \"Verified!\")) : __jsx(Popover, {\n          title: \"Your email address is not verified\",\n          content: __jsx(Button, {\n            type: \"primary\",\n            onClick: function onClick() {\n              return onVerifyEmail();\n            },\n            disabled: updating || countTime < 60,\n            loading: updating || countTime < 60\n          }, \"Click here to\", ' ', countTime < 60 ? 'resend' : 'send', ' ', \"the verification link\", ' ', countTime < 60 && \"\".concat(countTime, \"s\"))\n        }, __jsx(\"a\", {\n          className: \"error-color\"\n        }, \"Not verified!\"))),\n        rules: [{\n          type: 'email'\n        }, {\n          required: true,\n          message: 'Please input your email address!'\n        }],\n        hasFeedback: true,\n        validateTrigger: ['onChange', 'onBlur']\n      }, __jsx(Input, {\n        disabled: user.googleConnected\n      }))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"gender\",\n        label: \"Gender\",\n        rules: [{\n          required: true,\n          message: 'Please select your gender!'\n        }]\n      }, __jsx(Select, null, genders.map(function (s) {\n        return __jsx(Select.Option, {\n          key: s.value,\n          value: s.value\n        }, s.text);\n      })))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"sexualOrientation\",\n        label: \"Sexual orientation\"\n      }, __jsx(Select, null, sexualOrientations.map(function (s) {\n        return __jsx(Select.Option, {\n          key: s.value,\n          value: s.value\n        }, s.text);\n      })))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"country\",\n        label: \"Country\",\n        rules: [{\n          required: true\n        }]\n      }, __jsx(Select, {\n        showSearch: true,\n        optionFilterProp: \"label\"\n      }, countries.map(function (c) {\n        return __jsx(Option, {\n          value: c.code,\n          label: c.name,\n          key: c.code\n        }, __jsx(\"img\", {\n          alt: \"country_flag\",\n          src: c.flag,\n          width: \"25px\"\n        }), ' ', c.name);\n      })))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        label: \"Date of Birth\",\n        name: \"dateOfBirth\",\n        validateTrigger: ['onChange', 'onBlur'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'Select your date of birth'\n        }]\n      }, __jsx(DatePicker, {\n        style: {\n          width: '100%'\n        },\n        placeholder: \"DD/MM/YYYY\",\n        format: \"DD/MM/YYYY\",\n        disabledDate: function disabledDate(currentDate) {\n          return currentDate && currentDate > moment().subtract(18, 'year').endOf('day');\n        }\n      }))), __jsx(Col, {\n        span: 24\n      }, __jsx(Form.Item, {\n        name: \"bio\",\n        label: \"Bio\",\n        rules: [{\n          required: true,\n          message: 'Please enter your bio!'\n        }]\n      }, __jsx(TextArea, {\n        rows: 3,\n        placeholder: \"Tell people something about you...\"\n      }))), __jsx(Col, {\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        label: \"New Password\",\n        name: \"password\",\n        hasFeedback: true,\n        rules: [{\n          pattern: new RegExp(/^(?=.{8,})(?=.*[a-z])(?=.*[0-9])(?=.*[A-Z])(?=.*[^\\w\\d]).*$/g),\n          message: 'Password must have minimum 8 characters, at least 1 number, 1 uppercase letter, 1 lowercase letter & 1 special character'\n        }]\n      }, __jsx(Input.Password, {\n        placeholder: \"New password\"\n      }))), __jsx(Col, {\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        label: \"Confirm new Password\",\n        name: \"confirm\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [function (_ref) {\n          var getFieldValue = _ref.getFieldValue;\n          return {\n            validator: function validator(rule, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              } // eslint-disable-next-line prefer-promise-reject-errors\n\n\n              return Promise.reject('Passwords do not match together!');\n            }\n          };\n        }]\n      }, __jsx(Input.Password, {\n        placeholder: \"Confirm new password\"\n      }))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"state\",\n        label: \"State\"\n      }, __jsx(Input, null))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"city\",\n        label: \"City\"\n      }, __jsx(Input, null))), __jsx(Col, {\n        lg: 24,\n        md: 24,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"address\",\n        label: \"Address\"\n      }, __jsx(Input, null))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"zipcode\",\n        label: \"Zip Code\"\n      }, __jsx(Input, null))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"ethnicity\",\n        label: \"Ethnicity\"\n      }, __jsx(Select, null, ethnicities.map(function (s) {\n        return __jsx(Select.Option, {\n          key: s.value,\n          value: s.value\n        }, s.text);\n      })))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"height\",\n        label: \"Height\"\n      }, __jsx(Select, {\n        showSearch: true\n      }, heights.map(function (s) {\n        return __jsx(Select.Option, {\n          key: s.value,\n          value: s.value\n        }, s.text);\n      })))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"weight\",\n        label: \"Weight\"\n      }, __jsx(Select, {\n        showSearch: true\n      }, weights.map(function (s) {\n        return __jsx(Select.Option, {\n          key: s.value,\n          value: s.value\n        }, s.text);\n      })))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"bodyType\",\n        label: \"Body Type\"\n      }, __jsx(Select, null, bodyTypes.map(function (s) {\n        return __jsx(Select.Option, {\n          key: s.value,\n          value: s.value\n        }, s.text);\n      })))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"eyes\",\n        label: \"Eye color\"\n      }, __jsx(Select, null, eyes.map(function (s) {\n        return __jsx(Select.Option, {\n          key: s.value,\n          value: s.value\n        }, s.text);\n      })))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"hair\",\n        label: \"Hair color\"\n      }, __jsx(Select, null, hairs.map(function (s) {\n        return __jsx(Select.Option, {\n          key: s.value,\n          value: s.value\n        }, s.text);\n      })))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        name: \"butt\",\n        label: \"Butt size\"\n      }, __jsx(Select, null, butts.map(function (s) {\n        return __jsx(Select.Option, {\n          key: s.value,\n          value: s.value\n        }, s.text);\n      })))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, __jsx(Form.Item, {\n        label: \"Intro Video\"\n      }, __jsx(Upload, {\n        accept: 'video/*',\n        name: \"welcome-video\",\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        showUploadList: false,\n        action: videoUploadUrl,\n        headers: uploadHeaders,\n        beforeUpload: function beforeUpload(file) {\n          return _this2.beforeUploadVideo(file);\n        },\n        onChange: this.handleVideoChange.bind(this)\n      }, __jsx(UploadOutlined, null)), __jsx(\"div\", {\n        className: \"ant-form-item-explain\",\n        style: {\n          textAlign: 'left'\n        }\n      }, (previewVideoUrl || previewVideoName) && __jsx(\"a\", {\n        \"aria-hidden\": true,\n        onClick: function onClick() {\n          return _this2.setState({\n            isShowPreview: true\n          });\n        }\n      }, previewVideoName || previewVideoUrl || 'Click here to preview') || __jsx(\"a\", null, \"Intro video is\", ' ', getGlobalConfig().NEXT_PUBLIC_MAX_SIZE_TEASER || 200, \"MB or below\")), uploadVideoPercentage ? __jsx(Progress, {\n        percent: Math.round(uploadVideoPercentage)\n      }) : null), __jsx(Form.Item, {\n        name: \"activateWelcomeVideo\",\n        valuePropName: \"checked\"\n      }, __jsx(Checkbox, null, \"Activate intro video\"))), __jsx(Col, {\n        lg: 12,\n        md: 12,\n        xs: 24\n      }, user.twitterConnected && __jsx(Form.Item, null, __jsx(\"p\", null, __jsx(TwitterOutlined, {\n        style: {\n          color: '#1ea2f1',\n          fontSize: '30px'\n        }\n      }), ' ', \"Signup/login via Twitter\")), user.googleConnected && __jsx(Form.Item, null, __jsx(\"p\", null, __jsx(GoogleOutlined, {\n        style: {\n          color: '#d64b40',\n          fontSize: '30px'\n        }\n      }), ' ', \"Signup/login via Google\")))), __jsx(Form.Item, {\n        wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n          offset: 4\n        })\n      }, __jsx(Button, {\n        className: \"primary\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: updating || isUploadingVideo,\n        disabled: updating || isUploadingVideo\n      }, \"Save Changes\")), __jsx(Modal, {\n        width: 767,\n        footer: null,\n        onOk: function onOk() {\n          return _this2.setState({\n            isShowPreview: false\n          });\n        },\n        onCancel: function onCancel() {\n          return _this2.setState({\n            isShowPreview: false\n          });\n        },\n        visible: isShowPreview,\n        destroyOnClose: true,\n        centered: true\n      }, __jsx(VideoPlayer, {\n        autoplay: true,\n        controls: true,\n        playsinline: true,\n        fluid: true,\n        sources: [{\n          src: previewVideoUrl,\n          type: 'video/mp4'\n        }]\n      })));\n    }\n  }]);\n\n  return PerformerAccountForm;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/accountForm.tsx"],"names":["PureComponent","Form","Input","Button","Row","Col","Select","DatePicker","Upload","Progress","message","Checkbox","Popover","Modal","AvatarUpload","CoverUpload","UploadOutlined","TwitterOutlined","GoogleOutlined","getGlobalConfig","VideoPlayer","moment","Option","layout","labelCol","span","wrapperCol","TextArea","validateMessages","required","types","email","number","range","PerformerAccountForm","isUploadingVideo","uploadVideoPercentage","previewVideoUrl","previewVideoName","isShowPreview","info","file","percent","setState","status","success","response","data","url","name","isValid","size","NEXT_PUBLIC_MAX_SIZE_TEASER","error","user","props","welcomeVideoPath","welcomeVideoName","onFinish","updating","countries","options","bodyInfo","onVerifyEmail","countTime","heights","weights","bodyTypes","genders","sexualOrientations","ethnicities","hairs","eyes","butts","uploadHeaders","avatarUploadUrl","onAvatarUploaded","coverUploadUrl","onCoverUploaded","videoUploadUrl","state","bind","dateOfBirth","position","marginBottom","backgroundImage","cover","avatar","fieldName","pattern","RegExp","min","fontSize","verifiedEmail","type","googleConnected","map","s","value","text","c","code","flag","width","currentDate","subtract","endOf","getFieldValue","validator","rule","Promise","resolve","reject","beforeUploadVideo","handleVideoChange","textAlign","Math","round","twitterConnected","color","offset","autoplay","controls","playsinline","fluid","sources","src"],"mappings":"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","sourcesContent":["/* eslint-disable no-template-curly-in-string */\nimport { PureComponent } from 'react';\nimport {\n  Form, Input, Button, Row, Col, Select, DatePicker,\n  Upload, Progress, message, Checkbox, Popover, Modal\n} from 'antd';\nimport {\n  IPerformer, ICountry, IBody\n} from 'src/interfaces';\nimport { AvatarUpload } from '@components/user/avatar-upload';\nimport { CoverUpload } from '@components/user/cover-upload';\nimport {\n  UploadOutlined, TwitterOutlined, GoogleOutlined\n} from '@ant-design/icons';\nimport { getGlobalConfig } from '@services/config';\nimport { VideoPlayer } from '@components/common';\nimport moment from 'moment';\n\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }\n};\n\nconst { TextArea } = Input;\n\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  },\n  number: {\n    range: 'Must be between ${min} and ${max}'\n  }\n};\n\ninterface IProps {\n  onFinish: Function;\n  onVerifyEmail: Function;\n  countTime: number;\n  user: IPerformer;\n  updating: boolean;\n  options?: {\n    uploadHeaders?: any;\n    avatarUploadUrl?: string;\n    onAvatarUploaded?: Function;\n    coverUploadUrl?: string;\n    onCoverUploaded?: Function;\n    beforeUpload?: Function;\n    videoUploadUrl?: string;\n    onVideoUploaded?: Function;\n    uploadPercentage?: number;\n  };\n  countries: ICountry[];\n  bodyInfo: IBody;\n}\n\nexport class PerformerAccountForm extends PureComponent<IProps> {\n  state = {\n    isUploadingVideo: false,\n    uploadVideoPercentage: 0,\n    previewVideoUrl: null,\n    previewVideoName: null,\n    isShowPreview: false\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    this.setState({\n      previewVideoUrl: user?.welcomeVideoPath,\n      previewVideoName: user?.welcomeVideoName\n    });\n  }\n\n  handleVideoChange = (info: any) => {\n    info.file && info.file.percent && this.setState({ uploadVideoPercentage: info.file.percent });\n    if (info.file.status === 'uploading') {\n      this.setState({ isUploadingVideo: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      message.success('Intro video was uploaded');\n      this.setState({\n        isUploadingVideo: false,\n        previewVideoUrl: info?.file?.response?.data.url,\n        previewVideoName: info?.file?.response?.data.name\n      });\n    }\n  };\n\n  beforeUploadVideo = (file) => {\n    const isValid = file.size / 1024 / 1024 < (getGlobalConfig().NEXT_PUBLIC_MAX_SIZE_TEASER || 200);\n    if (!isValid) {\n      message.error(`File is too large please provide an file ${getGlobalConfig().NEXT_PUBLIC_MAX_SIZE_TEASER || 200}MB or below`);\n      return false;\n    }\n    this.setState({ previewVideoName: file.name });\n    return true;\n  }\n\n  render() {\n    const {\n      onFinish, user, updating, countries, options, bodyInfo, onVerifyEmail, countTime = 60\n    } = this.props;\n    const {\n      heights = [], weights = [], bodyTypes = [], genders = [], sexualOrientations = [], ethnicities = [],\n      hairs = [], eyes = [], butts = []\n    } = bodyInfo;\n    const {\n      uploadHeaders,\n      avatarUploadUrl,\n      onAvatarUploaded,\n      coverUploadUrl,\n      onCoverUploaded,\n      videoUploadUrl\n    } = options;\n    const {\n      isUploadingVideo, uploadVideoPercentage, previewVideoUrl, previewVideoName, isShowPreview\n    } = this.state;\n    return (\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish.bind(this)}\n        validateMessages={validateMessages}\n        initialValues={{\n          ...user,\n          dateOfBirth: (user.dateOfBirth && moment(user.dateOfBirth)) || ''\n        }}\n        scrollToFirstError\n        className=\"account-form\"\n      >\n        <div\n          className=\"top-profile\"\n          style={{\n            position: 'relative',\n            marginBottom: 25,\n            backgroundImage:\n              user?.cover\n                ? `url('${user.cover}')`\n                : \"url('/static/banner-image.jpg')\"\n          }}\n        >\n          <div className=\"avatar-upload\">\n            <AvatarUpload\n              headers={uploadHeaders}\n              uploadUrl={avatarUploadUrl}\n              onUploaded={onAvatarUploaded}\n              image={user.avatar}\n            />\n          </div>\n          <div className=\"cover-upload\">\n            <CoverUpload\n              headers={uploadHeaders}\n              uploadUrl={coverUploadUrl}\n              onUploaded={onCoverUploaded}\n              image={user.cover}\n              options={{ fieldName: 'cover' }}\n            />\n          </div>\n        </div>\n        <Row>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item\n              name=\"firstName\"\n              label=\"First Name\"\n              validateTrigger={['onChange', 'onBlur']}\n              rules={[\n                { required: true, message: 'Please input your first name!' },\n                {\n                  pattern: new RegExp(\n                    /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u\n                  ),\n                  message:\n                    'First name can not contain number and special character'\n                }\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item\n              name=\"lastName\"\n              label=\"Last Name\"\n              validateTrigger={['onChange', 'onBlur']}\n              rules={[\n                { required: true, message: 'Please input your last name!' },\n                {\n                  pattern: new RegExp(\n                    /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u\n                  ),\n                  message:\n                    'Last name can not contain number and special character'\n                }\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item\n              name=\"name\"\n              label=\"Display Name\"\n              validateTrigger={['onChange', 'onBlur']}\n              rules={[\n                { required: true, message: 'Please input your display name!' },\n                {\n                  pattern: new RegExp(/^(?=.*\\S).+$/g),\n                  message:\n                    'Display name can not contain only whitespace'\n                },\n                {\n                  min: 3,\n                  message: 'Display name must containt at least 3 characters'\n                }\n              ]}\n              hasFeedback\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item\n              name=\"username\"\n              label=\"Username\"\n              validateTrigger={['onChange', 'onBlur']}\n              rules={[\n                { required: true, message: 'Please input your username!' },\n                {\n                  pattern: new RegExp(/^[a-z0-9]+$/g),\n                  message:\n                    'Username must contain lowercase alphanumerics only'\n                },\n                { min: 3, message: 'Username must containt at least 3 characters' }\n              ]}\n              hasFeedback\n            >\n              <Input placeholder=\"user1, john99,...\" />\n            </Form.Item>\n          </Col>\n          <Col lg={24} md={24} xs={24}>\n            <Form.Item\n              name=\"email\"\n              label={(\n                <span style={{ fontSize: 10 }}>\n                  Email Address\n                  {'  '}\n                  {user.verifiedEmail ? (\n                    <Popover title=\"Your email address is verified\" content={null}>\n                      <a className=\"success-color\">Verified!</a>\n                    </Popover>\n                  ) : (\n                    <Popover\n                      title=\"Your email address is not verified\"\n                      content={(\n                        <Button\n                          type=\"primary\"\n                          onClick={() => onVerifyEmail()}\n                          disabled={updating || countTime < 60}\n                          loading={updating || countTime < 60}\n                        >\n                          Click here to\n                          {' '}\n                          {countTime < 60 ? 'resend' : 'send'}\n                          {' '}\n                          the verification link\n                          {' '}\n                          {countTime < 60 && `${countTime}s`}\n                        </Button>\n                      )}\n                    >\n                      <a className=\"error-color\">Not verified!</a>\n                    </Popover>\n                  )}\n                </span>\n              )}\n              rules={[{ type: 'email' }, { required: true, message: 'Please input your email address!' }]}\n              hasFeedback\n              validateTrigger={['onChange', 'onBlur']}\n            >\n              <Input disabled={user.googleConnected} />\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item\n              name=\"gender\"\n              label=\"Gender\"\n              rules={[\n                { required: true, message: 'Please select your gender!' }]}\n            >\n              <Select>\n                {genders.map((s) => (\n                  <Select.Option key={s.value} value={s.value}>\n                    {s.text}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item\n              name=\"sexualOrientation\"\n              label=\"Sexual orientation\"\n            >\n              <Select>\n                {sexualOrientations.map((s) => (\n                  <Select.Option key={s.value} value={s.value}>\n                    {s.text}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item\n              name=\"country\"\n              label=\"Country\"\n              rules={[{ required: true }]}\n            >\n              <Select\n                showSearch\n                optionFilterProp=\"label\"\n              >\n                {countries.map((c) => (\n                  <Option value={c.code} label={c.name} key={c.code}>\n                    <img alt=\"country_flag\" src={c.flag} width=\"25px\" />\n                    {' '}\n                    {c.name}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item\n              label=\"Date of Birth\"\n              name=\"dateOfBirth\"\n              validateTrigger={['onChange', 'onBlur']}\n              hasFeedback\n              rules={[\n                {\n                  required: true,\n                  message: 'Select your date of birth'\n                }\n              ]}\n            >\n              <DatePicker\n                style={{ width: '100%' }}\n                placeholder=\"DD/MM/YYYY\"\n                format=\"DD/MM/YYYY\"\n                disabledDate={(currentDate) => currentDate && currentDate > moment().subtract(18, 'year').endOf('day')}\n              />\n            </Form.Item>\n          </Col>\n          <Col span={24}>\n            <Form.Item\n              name=\"bio\"\n              label=\"Bio\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please enter your bio!'\n                }\n              ]}\n            >\n              <TextArea rows={3} placeholder=\"Tell people something about you...\" />\n            </Form.Item>\n          </Col>\n          <Col md={12} xs={24}>\n            <Form.Item\n              label=\"New Password\"\n              name=\"password\"\n              hasFeedback\n              rules={[\n                {\n                  pattern: new RegExp(/^(?=.{8,})(?=.*[a-z])(?=.*[0-9])(?=.*[A-Z])(?=.*[^\\w\\d]).*$/g),\n                  message: 'Password must have minimum 8 characters, at least 1 number, 1 uppercase letter, 1 lowercase letter & 1 special character'\n                }\n              ]}\n            >\n              <Input.Password placeholder=\"New password\" />\n            </Form.Item>\n          </Col>\n          <Col md={12} xs={24}>\n            <Form.Item\n              label=\"Confirm new Password\"\n              name=\"confirm\"\n              dependencies={['password']}\n              hasFeedback\n              rules={[\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n                    // eslint-disable-next-line prefer-promise-reject-errors\n                    return Promise.reject('Passwords do not match together!');\n                  }\n                })\n              ]}\n            >\n              <Input.Password placeholder=\"Confirm new password\" />\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item name=\"state\" label=\"State\">\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item name=\"city\" label=\"City\">\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col lg={24} md={24} xs={24}>\n            <Form.Item name=\"address\" label=\"Address\">\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item name=\"zipcode\" label=\"Zip Code\">\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item name=\"ethnicity\" label=\"Ethnicity\">\n              <Select>\n                {ethnicities.map((s) => (\n                  <Select.Option key={s.value} value={s.value}>\n                    {s.text}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item name=\"height\" label=\"Height\">\n              <Select showSearch>\n                {heights.map((s) => (\n                  <Select.Option key={s.value} value={s.value}>\n                    {s.text}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item name=\"weight\" label=\"Weight\">\n              <Select showSearch>\n                {weights.map((s) => (\n                  <Select.Option key={s.value} value={s.value}>\n                    {s.text}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item name=\"bodyType\" label=\"Body Type\">\n              <Select>\n                {bodyTypes.map((s) => (\n                  <Select.Option key={s.value} value={s.value}>\n                    {s.text}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item name=\"eyes\" label=\"Eye color\">\n              <Select>\n                {eyes.map((s) => (\n                  <Select.Option key={s.value} value={s.value}>\n                    {s.text}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item name=\"hair\" label=\"Hair color\">\n              <Select>\n                {hairs.map((s) => (\n                  <Select.Option key={s.value} value={s.value}>\n                    {s.text}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item name=\"butt\" label=\"Butt size\">\n              <Select>\n                {butts.map((s) => (\n                  <Select.Option key={s.value} value={s.value}>\n                    {s.text}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            <Form.Item label=\"Intro Video\">\n              <Upload\n                accept={'video/*'}\n                name=\"welcome-video\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                action={videoUploadUrl}\n                headers={uploadHeaders}\n                beforeUpload={(file) => this.beforeUploadVideo(file)}\n                onChange={this.handleVideoChange.bind(this)}\n              >\n                <UploadOutlined />\n              </Upload>\n              <div className=\"ant-form-item-explain\" style={{ textAlign: 'left' }}>\n                {((previewVideoUrl || previewVideoName) && <a aria-hidden onClick={() => this.setState({ isShowPreview: true })}>{previewVideoName || previewVideoUrl || 'Click here to preview'}</a>)\n                  || (\n                    <a>\n                      Intro video is\n                      {' '}\n                      {getGlobalConfig().NEXT_PUBLIC_MAX_SIZE_TEASER || 200}\n                      MB or below\n                    </a>\n                  )}\n              </div>\n              {uploadVideoPercentage ? (\n                <Progress percent={Math.round(uploadVideoPercentage)} />\n              ) : null}\n            </Form.Item>\n            <Form.Item name=\"activateWelcomeVideo\" valuePropName=\"checked\">\n              <Checkbox>Activate intro video</Checkbox>\n            </Form.Item>\n          </Col>\n          <Col lg={12} md={12} xs={24}>\n            {user.twitterConnected && (\n              <Form.Item>\n                <p>\n                  <TwitterOutlined style={{ color: '#1ea2f1', fontSize: '30px' }} />\n                  {' '}\n                  Signup/login via Twitter\n                </p>\n              </Form.Item>\n            )}\n            {user.googleConnected && (\n              <Form.Item>\n                <p>\n                  <GoogleOutlined style={{ color: '#d64b40', fontSize: '30px' }} />\n                  {' '}\n                  Signup/login via Google\n                </p>\n              </Form.Item>\n            )}\n          </Col>\n        </Row>\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\n          <Button className=\"primary\" type=\"primary\" htmlType=\"submit\" loading={updating || isUploadingVideo} disabled={updating || isUploadingVideo}>\n            Save Changes\n          </Button>\n        </Form.Item>\n        <Modal\n          width={767}\n          footer={null}\n          onOk={() => this.setState({ isShowPreview: false })}\n          onCancel={() => this.setState({ isShowPreview: false })}\n          visible={isShowPreview}\n          destroyOnClose\n          centered\n        >\n          <VideoPlayer\n            {...{\n              autoplay: true,\n              controls: true,\n              playsinline: true,\n              fluid: true,\n              sources: [\n                {\n                  src: previewVideoUrl,\n                  type: 'video/mp4'\n                }\n              ]\n            }}\n          />\n        </Modal>\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}