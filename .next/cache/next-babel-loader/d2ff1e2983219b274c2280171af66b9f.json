{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class ProductService extends APIRequest {\n  createProduct(files, payload, onProgress) {\n    return this.upload('/performer/performer-assets/products', files, {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  update(id, files, payload, onProgress) {\n    return this.upload(`/performer/performer-assets/products/${id}`, files, {\n      onProgress,\n      customData: payload,\n      method: 'PUT'\n    });\n  }\n\n  search(query) {\n    return this.get(this.buildUrl('/performer/performer-assets/products/search', query));\n  }\n\n  userSearch(query) {\n    return this.get(this.buildUrl('/user/performer-assets/products/search', query));\n  }\n\n  userView(productId, headers) {\n    return this.get(`/user/performer-assets/products/${productId}`, headers);\n  }\n\n  findById(id) {\n    return this.get(`/performer/performer-assets/products/${id}/view`);\n  }\n\n  delete(id) {\n    return this.del(`/performer/performer-assets/products/${id}`);\n  }\n\n  getBookmarked(payload) {\n    return this.get(this.buildUrl('/reactions/products/bookmark', payload));\n  }\n\n}\nexport const productService = new ProductService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/product.service.ts"],"names":["APIRequest","ProductService","createProduct","files","payload","onProgress","upload","customData","update","id","method","search","query","get","buildUrl","userSearch","userView","productId","headers","findById","delete","del","getBookmarked","productService"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,cAAN,SAA6BD,UAA7B,CAAwC;AAC7CE,EAAAA,aAAa,CACXC,KADW,EAEXC,OAFW,EAGXC,UAHW,EAIX;AACA,WAAO,KAAKC,MAAL,CAAY,sCAAZ,EAAoDH,KAApD,EAA2D;AAChEE,MAAAA,UADgE;AAEhEE,MAAAA,UAAU,EAAEH;AAFoD,KAA3D,CAAP;AAID;;AAEDI,EAAAA,MAAM,CACJC,EADI,EAEJN,KAFI,EAGJC,OAHI,EAIJC,UAJI,EAKJ;AACA,WAAO,KAAKC,MAAL,CAAa,wCAAuCG,EAAG,EAAvD,EAA0DN,KAA1D,EAAiE;AACtEE,MAAAA,UADsE;AAEtEE,MAAAA,UAAU,EAAEH,OAF0D;AAGtEM,MAAAA,MAAM,EAAE;AAH8D,KAAjE,CAAP;AAKD;;AAEDC,EAAAA,MAAM,CAACC,KAAD,EAAiC;AACrC,WAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,6CAAd,EAA6DF,KAA7D,CADK,CAAP;AAGD;;AAEDG,EAAAA,UAAU,CAACH,KAAD,EAAiC;AACzC,WAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,wCAAd,EAAwDF,KAAxD,CADK,CAAP;AAGD;;AAEDI,EAAAA,QAAQ,CAACC,SAAD,EAAoBC,OAApB,EAAmC;AACzC,WAAO,KAAKL,GAAL,CAAU,mCAAkCI,SAAU,EAAtD,EAAyDC,OAAzD,CAAP;AACD;;AAEDC,EAAAA,QAAQ,CAACV,EAAD,EAAa;AACnB,WAAO,KAAKI,GAAL,CAAU,wCAAuCJ,EAAG,OAApD,CAAP;AACD;;AAEDW,EAAAA,MAAM,CAACX,EAAD,EAAa;AACjB,WAAO,KAAKY,GAAL,CAAU,wCAAuCZ,EAAG,EAApD,CAAP;AACD;;AAEDa,EAAAA,aAAa,CAAClB,OAAD,EAAU;AACrB,WAAO,KAAKS,GAAL,CAAS,KAAKC,QAAL,CAAc,8BAAd,EAA8CV,OAA9C,CAAT,CAAP;AACD;;AAnD4C;AAsD/C,OAAO,MAAMmB,cAAc,GAAG,IAAItB,cAAJ,EAAvB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class ProductService extends APIRequest {\n  createProduct(\n    files: [{ fieldname: string; file: File }],\n    payload: any,\n    onProgress?: Function\n  ) {\n    return this.upload('/performer/performer-assets/products', files, {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  update(\n    id: string,\n    files: [{ fieldname: string; file: File }],\n    payload: any,\n    onProgress?: Function\n  ) {\n    return this.upload(`/performer/performer-assets/products/${id}`, files, {\n      onProgress,\n      customData: payload,\n      method: 'PUT'\n    });\n  }\n\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/performer/performer-assets/products/search', query)\n    );\n  }\n\n  userSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/user/performer-assets/products/search', query)\n    );\n  }\n\n  userView(productId: string, headers?: any) {\n    return this.get(`/user/performer-assets/products/${productId}`, headers);\n  }\n\n  findById(id: string) {\n    return this.get(`/performer/performer-assets/products/${id}/view`);\n  }\n\n  delete(id: string) {\n    return this.del(`/performer/performer-assets/products/${id}`);\n  }\n\n  getBookmarked(payload) {\n    return this.get(this.buildUrl('/reactions/products/bookmark', payload));\n  }\n}\n\nexport const productService = new ProductService();\n"]},"metadata":{},"sourceType":"module"}