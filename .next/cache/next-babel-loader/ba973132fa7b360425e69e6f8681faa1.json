{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { PureComponent } from 'react';\nimport { Alert, Spin } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport FeedCard from './post-card';\nimport { FeedGridCard } from './grid-card';\nexport default class ScrollListFeed extends PureComponent {\n  render() {\n    const {\n      items = [],\n      loadMore,\n      onDelete,\n      canLoadmore,\n      loading = false,\n      isGrid = false,\n      notFoundText\n    } = this.props;\n    return __jsx(InfiniteScroll, {\n      dataLength: items.length,\n      hasMore: canLoadmore,\n      loader: null,\n      next: loadMore,\n      endMessage: null,\n      scrollThreshold: 0.8\n    }, __jsx(\"div\", {\n      className: isGrid ? 'grid-view' : 'fixed-scroll'\n    }, items.length > 0 && items.map(item => {\n      if (isGrid) {\n        return __jsx(FeedGridCard, {\n          feed: item,\n          key: item._id\n        });\n      }\n\n      return __jsx(FeedCard, {\n        feed: item,\n        key: item._id,\n        onDelete: onDelete.bind(this)\n      });\n    })), !items.length && !loading && __jsx(\"div\", {\n      className: \"main-container custom\"\n    }, __jsx(Alert, {\n      className: \"text-center\",\n      message: notFoundText || 'No post was found',\n      type: \"info\"\n    })), loading && __jsx(\"div\", {\n      className: \"text-center\"\n    }, __jsx(Spin, null)));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/post/scroll-list.tsx"],"names":["PureComponent","Alert","Spin","InfiniteScroll","FeedCard","FeedGridCard","ScrollListFeed","render","items","loadMore","onDelete","canLoadmore","loading","isGrid","notFoundText","props","length","map","item","_id","bind"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,MAA5B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,YAAT,QAA6B,aAA7B;AAYA,eAAe,MAAMC,cAAN,SAA6BN,aAA7B,CAAmD;AAChEO,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,KAAK,GAAG,EADJ;AAEJC,MAAAA,QAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,WAJI;AAKJC,MAAAA,OAAO,GAAG,KALN;AAMJC,MAAAA,MAAM,GAAG,KANL;AAOJC,MAAAA;AAPI,QAQF,KAAKC,KART;AASA,WACE,MAAC,cAAD;AACE,MAAA,UAAU,EAAEP,KAAK,CAACQ,MADpB;AAEE,MAAA,OAAO,EAAEL,WAFX;AAGE,MAAA,MAAM,EAAE,IAHV;AAIE,MAAA,IAAI,EAAEF,QAJR;AAKE,MAAA,UAAU,EAAE,IALd;AAME,MAAA,eAAe,EAAE;AANnB,OAQE;AAAK,MAAA,SAAS,EAAEI,MAAM,GAAG,WAAH,GAAiB;AAAvC,OACGL,KAAK,CAACQ,MAAN,GAAe,CAAf,IACIR,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU;AACrB,UAAIL,MAAJ,EAAY;AACV,eAAO,MAAC,YAAD;AAAc,UAAA,IAAI,EAAEK,IAApB;AAA0B,UAAA,GAAG,EAAEA,IAAI,CAACC;AAApC,UAAP;AACD;;AACD,aACE,MAAC,QAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,GAAG,EAAEA,IAAI,CAACC,GAFZ;AAGE,QAAA,QAAQ,EAAET,QAAQ,CAACU,IAAT,CAAc,IAAd;AAHZ,QADF;AAOD,KAXE,CAFP,CARF,EAuBG,CAACZ,KAAK,CAACQ,MAAP,IAAiB,CAACJ,OAAlB,IACC;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,KAAD;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,OAAO,EAAEE,YAAY,IAAI,mBAF3B;AAGE,MAAA,IAAI,EAAC;AAHP,MADF,CAxBJ,EAgCGF,OAAO,IACN;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,IAAD,OADF,CAjCJ,CADF;AAwCD;;AAnD+D","sourcesContent":["import { PureComponent } from 'react';\nimport { Alert, Spin } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { IFeed } from '@interfaces/index';\nimport FeedCard from './post-card';\nimport { FeedGridCard } from './grid-card';\n\ninterface IProps {\n  items: IFeed[];\n  canLoadmore: boolean;\n  loadMore(): Function;\n  onDelete(): Function;\n  loading?: boolean;\n  isGrid?: boolean;\n  notFoundText?: string;\n}\n\nexport default class ScrollListFeed extends PureComponent<IProps> {\n  render() {\n    const {\n      items = [],\n      loadMore,\n      onDelete,\n      canLoadmore,\n      loading = false,\n      isGrid = false,\n      notFoundText\n    } = this.props;\n    return (\n      <InfiniteScroll\n        dataLength={items.length}\n        hasMore={canLoadmore}\n        loader={null}\n        next={loadMore}\n        endMessage={null}\n        scrollThreshold={0.8}\n      >\n        <div className={isGrid ? 'grid-view' : 'fixed-scroll'}>\n          {items.length > 0\n            && items.map((item) => {\n              if (isGrid) {\n                return <FeedGridCard feed={item} key={item._id} />;\n              }\n              return (\n                <FeedCard\n                  feed={item}\n                  key={item._id}\n                  onDelete={onDelete.bind(this)}\n                />\n              );\n            })}\n        </div>\n        {!items.length && !loading && (\n          <div className=\"main-container custom\">\n            <Alert\n              className=\"text-center\"\n              message={notFoundText || 'No post was found'}\n              type=\"info\"\n            />\n          </div>\n        )}\n        {loading && (\n          <div className=\"text-center\">\n            <Spin />\n          </div>\n        )}\n      </InfiniteScroll>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}