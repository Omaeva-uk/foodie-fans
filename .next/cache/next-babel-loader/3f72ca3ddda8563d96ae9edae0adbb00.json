{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class PhotoService extends APIRequest {\n  searchByUser(query) {\n    const {\n      performerId\n    } = query;\n    return this.get(this.buildUrl(`/user/performer-assets/photos/${performerId}`, query));\n  }\n\n  searchByPerformer(query) {\n    return this.get(this.buildUrl('/performer/performer-assets/photos/search', query));\n  }\n\n  update(id, payload) {\n    return this.put(`/performer/performer-assets/photos/${id}`, payload);\n  }\n\n  setCoverGallery(id) {\n    return this.post(`/performer/performer-assets/photos/set-cover/${id}`);\n  }\n\n  delete(id) {\n    return this.del(`/performer/performer-assets/photos/${id}`);\n  }\n\n  uploadImages(file, payload, onProgress) {\n    return this.upload('/performer/performer-assets/photos/upload', [{\n      fieldname: 'photo',\n      file\n    }], {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  searchPhotosInGallery(payload) {\n    return this.get(this.buildUrl('/performer/performer-assets/photos/search', payload));\n  }\n\n  userSearch(payload) {\n    return this.get(this.buildUrl('/user/performer-assets/photos', payload));\n  }\n\n}\nexport const photoService = new PhotoService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/photo.service.ts"],"names":["APIRequest","PhotoService","searchByUser","query","performerId","get","buildUrl","searchByPerformer","update","id","payload","put","setCoverGallery","post","delete","del","uploadImages","file","onProgress","upload","fieldname","customData","searchPhotosInGallery","userSearch","photoService"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,YAAN,SAA2BD,UAA3B,CAAsC;AAC3CE,EAAAA,YAAY,CAACC,KAAD,EAA+B;AACzC,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,KAAxB;AACA,WAAO,KAAKE,GAAL,CACL,KAAKC,QAAL,CAAe,iCAAgCF,WAAY,EAA3D,EAA8DD,KAA9D,CADK,CAAP;AAGD;;AAEDI,EAAAA,iBAAiB,CAACJ,KAAD,EAA+B;AAC9C,WAAO,KAAKE,GAAL,CACL,KAAKC,QAAL,CAAc,2CAAd,EAA2DH,KAA3D,CADK,CAAP;AAGD;;AAEDK,EAAAA,MAAM,CAACC,EAAD,EAAaC,OAAb,EAA2B;AAC/B,WAAO,KAAKC,GAAL,CAAU,sCAAqCF,EAAG,EAAlD,EAAqDC,OAArD,CAAP;AACD;;AAEDE,EAAAA,eAAe,CAACH,EAAD,EAAa;AAC1B,WAAO,KAAKI,IAAL,CAAW,gDAA+CJ,EAAG,EAA7D,CAAP;AACD;;AAEDK,EAAAA,MAAM,CAACL,EAAD,EAAa;AACjB,WAAO,KAAKM,GAAL,CAAU,sCAAqCN,EAAG,EAAlD,CAAP;AACD;;AAEDO,EAAAA,YAAY,CAACC,IAAD,EAAaP,OAAb,EAA2BQ,UAA3B,EAAkD;AAC5D,WAAO,KAAKC,MAAL,CACL,2CADK,EAEL,CACE;AACEC,MAAAA,SAAS,EAAE,OADb;AAEEH,MAAAA;AAFF,KADF,CAFK,EAQL;AACEC,MAAAA,UADF;AAEEG,MAAAA,UAAU,EAAEX;AAFd,KARK,CAAP;AAaD;;AAEDY,EAAAA,qBAAqB,CAACZ,OAAD,EAAU;AAC7B,WAAO,KAAKL,GAAL,CAAS,KAAKC,QAAL,CAAc,2CAAd,EAA2DI,OAA3D,CAAT,CAAP;AACD;;AAEDa,EAAAA,UAAU,CAACb,OAAD,EAAU;AAClB,WAAO,KAAKL,GAAL,CAAS,KAAKC,QAAL,CAAc,+BAAd,EAA+CI,OAA/C,CAAT,CAAP;AACD;;AAhD0C;AAmD7C,OAAO,MAAMc,YAAY,GAAG,IAAIvB,YAAJ,EAArB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class PhotoService extends APIRequest {\n  searchByUser(query?: {[key: string]: any}) {\n    const { performerId } = query;\n    return this.get(\n      this.buildUrl(`/user/performer-assets/photos/${performerId}`, query)\n    );\n  }\n\n  searchByPerformer(query?: {[key: string]: any}) {\n    return this.get(\n      this.buildUrl('/performer/performer-assets/photos/search', query)\n    );\n  }\n\n  update(id: string, payload: any) {\n    return this.put(`/performer/performer-assets/photos/${id}`, payload);\n  }\n\n  setCoverGallery(id: string) {\n    return this.post(`/performer/performer-assets/photos/set-cover/${id}`);\n  }\n\n  delete(id: string) {\n    return this.del(`/performer/performer-assets/photos/${id}`);\n  }\n\n  uploadImages(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/performer/performer-assets/photos/upload',\n      [\n        {\n          fieldname: 'photo',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  searchPhotosInGallery(payload) {\n    return this.get(this.buildUrl('/performer/performer-assets/photos/search', payload));\n  }\n\n  userSearch(payload) {\n    return this.get(this.buildUrl('/user/performer-assets/photos', payload));\n  }\n}\n\nexport const photoService = new PhotoService();\n"]},"metadata":{},"sourceType":"module"}