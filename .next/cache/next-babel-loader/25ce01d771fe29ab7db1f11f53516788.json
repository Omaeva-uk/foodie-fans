{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class PaymentService extends APIRequest {\n  subscribePerformer(payload) {\n    return this.post('/payment/subscribe/performers', payload);\n  }\n\n  userSearch(payload) {\n    return this.get(this.buildUrl('/transactions/user/search', payload));\n  }\n\n  addFunds(payload) {\n    return this.post('/payment/wallet/top-up', payload);\n  }\n\n  applyCoupon(code) {\n    return this.post(`/coupons/${code}/apply-coupon`);\n  }\n\n  connectStripeAccount() {\n    return this.post('/stripe/accounts');\n  }\n\n  getStripeCards() {\n    return this.get('/stripe/user/cards');\n  }\n\n  addStripeCard(payload) {\n    return this.post('/stripe/user/cards', payload);\n  }\n\n  removeStripeCard(id) {\n    return this.del(`/stripe/user/cards/${id}`);\n  }\n\n  retrieveStripeAccount() {\n    return this.get('/stripe/accounts/me');\n  }\n\n  loginLink() {\n    return this.get('/stripe/accounts/me/login-link');\n  }\n\n}\nexport const paymentService = new PaymentService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/payment.service.ts"],"names":["APIRequest","PaymentService","subscribePerformer","payload","post","userSearch","get","buildUrl","addFunds","applyCoupon","code","connectStripeAccount","getStripeCards","addStripeCard","removeStripeCard","id","del","retrieveStripeAccount","loginLink","paymentService"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,cAAN,SAA6BD,UAA7B,CAAwC;AAC7CE,EAAAA,kBAAkB,CAACC,OAAD,EAAe;AAC/B,WAAO,KAAKC,IAAL,CAAU,+BAAV,EAA2CD,OAA3C,CAAP;AACD;;AAEDE,EAAAA,UAAU,CAACF,OAAD,EAAU;AAClB,WAAO,KAAKG,GAAL,CAAS,KAAKC,QAAL,CAAc,2BAAd,EAA2CJ,OAA3C,CAAT,CAAP;AACD;;AAEDK,EAAAA,QAAQ,CAACL,OAAD,EAAe;AACrB,WAAO,KAAKC,IAAL,CAAU,wBAAV,EAAoCD,OAApC,CAAP;AACD;;AAEDM,EAAAA,WAAW,CAACC,IAAD,EAAY;AACrB,WAAO,KAAKN,IAAL,CAAW,YAAWM,IAAK,eAA3B,CAAP;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,WAAO,KAAKP,IAAL,CAAU,kBAAV,CAAP;AACD;;AAEDQ,EAAAA,cAAc,GAAG;AACf,WAAO,KAAKN,GAAL,CAAS,oBAAT,CAAP;AACD;;AAEDO,EAAAA,aAAa,CAACV,OAAD,EAAU;AACrB,WAAO,KAAKC,IAAL,CAAU,oBAAV,EAAgCD,OAAhC,CAAP;AACD;;AAEDW,EAAAA,gBAAgB,CAACC,EAAD,EAAK;AACnB,WAAO,KAAKC,GAAL,CAAU,sBAAqBD,EAAG,EAAlC,CAAP;AACD;;AAEDE,EAAAA,qBAAqB,GAAG;AACtB,WAAO,KAAKX,GAAL,CAAS,qBAAT,CAAP;AACD;;AAEDY,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKZ,GAAL,CAAS,gCAAT,CAAP;AACD;;AAvC4C;AA0C/C,OAAO,MAAMa,cAAc,GAAG,IAAIlB,cAAJ,EAAvB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class PaymentService extends APIRequest {\n  subscribePerformer(payload: any) {\n    return this.post('/payment/subscribe/performers', payload);\n  }\n\n  userSearch(payload) {\n    return this.get(this.buildUrl('/transactions/user/search', payload));\n  }\n\n  addFunds(payload: any) {\n    return this.post('/payment/wallet/top-up', payload);\n  }\n\n  applyCoupon(code: any) {\n    return this.post(`/coupons/${code}/apply-coupon`);\n  }\n\n  connectStripeAccount() {\n    return this.post('/stripe/accounts');\n  }\n\n  getStripeCards() {\n    return this.get('/stripe/user/cards');\n  }\n\n  addStripeCard(payload) {\n    return this.post('/stripe/user/cards', payload);\n  }\n\n  removeStripeCard(id) {\n    return this.del(`/stripe/user/cards/${id}`);\n  }\n\n  retrieveStripeAccount() {\n    return this.get('/stripe/accounts/me');\n  }\n\n  loginLink() {\n    return this.get('/stripe/accounts/me/login-link');\n  }\n}\n\nexport const paymentService = new PaymentService();\n"]},"metadata":{},"sourceType":"module"}