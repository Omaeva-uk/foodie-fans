{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { Layout, Badge, Drawer, Divider, Avatar } from 'antd';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport { logout } from '@redux/auth/actions';\nimport { ShoppingCartOutlined, UserOutlined, HistoryOutlined, CreditCardOutlined, VideoCameraOutlined, FireOutlined, NotificationOutlined, BookOutlined, DollarOutlined, PictureOutlined, StarOutlined, ShoppingOutlined, BankOutlined, LogoutOutlined, HeartOutlined, BlockOutlined, PlusCircleOutlined, StopOutlined } from '@ant-design/icons';\nimport { HomeIcon, ModelIcon, PlusIcon, MessageIcon, UserIcon, LiveIcon, TickIcon, WalletSvg } from 'src/icons';\nimport Router, { withRouter, Router as RouterEvent } from 'next/router';\nimport { messageService, authService } from 'src/services';\nimport { Event, SocketContext } from 'src/socket';\nimport { addPrivateRequest, accessPrivateRequest } from '@redux/streaming/actions';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport { updateBalance } from '@redux/user/actions';\nimport { shortenLargeNumber } from '@lib/number';\nimport { SubscribePerformerModal } from 'src/components/subscription/subscribe-performer-modal';\nimport './header.less';\n\nclass Header extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      totalNotReadMessage: 0,\n      openProfile: false\n    });\n\n    _defineProperty(this, \"handleChangeRoute\", () => {\n      this.setState({\n        openProfile: false\n      });\n    });\n\n    _defineProperty(this, \"handleMessage\", async event => {\n      event && this.setState({\n        totalNotReadMessage: event.total\n      });\n    });\n\n    _defineProperty(this, \"handleSubscribe\", username => {\n      Router.push({\n        pathname: '/streaming/details',\n        query: {\n          username\n        }\n      }, `/streaming/${username}`);\n    });\n  }\n\n  componentDidMount() {\n    RouterEvent.events.on('routeChangeStart', this.handleChangeRoute);\n    const {\n      user\n    } = this.props;\n\n    if (user._id) {\n      this.handleCountNotificationMessage();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      user\n    } = this.props;\n\n    if (user._id && prevProps.user._id !== user._id) {\n      this.handleCountNotificationMessage();\n    }\n  }\n\n  componentWillUnmount() {\n    RouterEvent.events.off('routeChangeStart', this.handleChangeRoute);\n    const token = authService.getToken();\n    const socket = this.context;\n    token && socket && socket.emit('auth/logout', {\n      token\n    });\n  }\n\n  async handleCountNotificationMessage() {\n    const data = await (await messageService.countTotalNotRead()).data;\n\n    if (data) {\n      this.setState({\n        totalNotReadMessage: data.total\n      });\n    }\n  }\n\n  async handleUpdateBalance(event) {\n    const {\n      user,\n      updateBalance: handleUpdateBalance\n    } = this.props;\n\n    if (user.isPerformer) {\n      handleUpdateBalance({\n        token: event.token\n      });\n    }\n  }\n\n  async handlePaymentStatusCallback({\n    redirectUrl\n  }) {\n    if (redirectUrl) {\n      window.location.href = redirectUrl;\n    }\n  }\n\n  async beforeLogout() {\n    const {\n      logout: handleLogout\n    } = this.props;\n    const token = authService.getToken();\n    const socket = this.context;\n    token && socket && (await socket.emit('auth/logout', {\n      token\n    }));\n    handleLogout();\n  }\n\n  render() {\n    var _user$stats, _user$stats2;\n\n    const {\n      user,\n      router,\n      ui,\n      settings,\n      config\n    } = this.props;\n    const {\n      totalNotReadMessage,\n      openProfile\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"main-header\"\n    }, __jsx(Event, {\n      event: \"nofify_read_messages_in_conversation\",\n      handler: this.handleMessage.bind(this)\n    }), __jsx(Event, {\n      event: \"update_balance\",\n      handler: this.handleUpdateBalance.bind(this)\n    }), __jsx(Event, {\n      event: \"payment_status_callback\",\n      handler: this.handlePaymentStatusCallback.bind(this)\n    }), __jsx(\"div\", {\n      className: \"main-container\"\n    }, __jsx(Layout.Header, {\n      className: \"header\",\n      id: \"layoutHeader\"\n    }, __jsx(\"div\", {\n      className: \"nav-bar\"\n    }, __jsx(\"ul\", {\n      className: user._id ? 'nav-icons' : 'nav-icons custom'\n    }, user._id && __jsx(\"li\", {\n      className: router.pathname === '/home' ? 'active' : ''\n    }, __jsx(Link, {\n      href: \"/home\"\n    }, __jsx(\"a\", null, __jsx(HomeIcon, null)))), user._id && __jsx(React.Fragment, null, (user === null || user === void 0 ? void 0 : user.isPerformer) && __jsx(\"li\", {\n      className: router.pathname === '/model/my-post/create' ? 'active' : ''\n    }, __jsx(Link, {\n      href: \"/model/my-post/create\"\n    }, __jsx(\"a\", null, __jsx(PlusIcon, null))))), user._id && !user.isPerformer && __jsx(\"li\", {\n      key: \"model\",\n      className: router.pathname === '/model' ? 'active' : ''\n    }, __jsx(Link, {\n      href: \"/model\"\n    }, __jsx(\"a\", null, __jsx(ModelIcon, null)))), user._id && __jsx(\"li\", {\n      key: \"messenger\",\n      className: router.pathname === '/messages' ? 'active' : ''\n    }, __jsx(Link, {\n      href: \"/messages\"\n    }, __jsx(\"a\", null, __jsx(MessageIcon, null), __jsx(Badge, {\n      className: \"cart-total\",\n      count: totalNotReadMessage,\n      showZero: true\n    })))), !user._id && [__jsx(\"li\", {\n      key: \"logo\",\n      className: \"logo-nav\"\n    }, __jsx(Link, {\n      href: \"/home\"\n    }, __jsx(\"a\", null, ui.logo ? __jsx(\"img\", {\n      src: ui.logo,\n      alt: \"logo\"\n    }) : `${ui.siteName}`))), __jsx(\"li\", {\n      key: \"login\",\n      className: router.pathname === '/' ? 'active' : ''\n    }, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", null, \"Log In\"))), __jsx(\"li\", {\n      key: \"signup\",\n      className: router.pathname === '/auth/register' ? 'active' : ''\n    }, __jsx(Link, {\n      href: \"/auth/register\"\n    }, __jsx(\"a\", null, \"Sign Up\")))], user._id && __jsx(\"li\", {\n      key: \"avatar\",\n      \"aria-hidden\": true,\n      onClick: () => this.setState({\n        openProfile: true\n      })\n    }, user !== null && user !== void 0 && user.avatar ? __jsx(Avatar, {\n      src: (user === null || user === void 0 ? void 0 : user.avatar) || '/static/no-avatar.png'\n    }) : __jsx(UserIcon, null))))), __jsx(Drawer, {\n      title: __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"profile-user\"\n      }, __jsx(\"img\", {\n        className: \"avatar\",\n        src: (user === null || user === void 0 ? void 0 : user.avatar) || '/static/no-avatar.png',\n        alt: \"avatar\"\n      }), __jsx(\"span\", {\n        className: \"profile-name\"\n      }, __jsx(\"span\", null, (user === null || user === void 0 ? void 0 : user.name) || 'N/A', ' ', __jsx(TickIcon, null)), __jsx(\"span\", {\n        className: \"sub-name\"\n      }, \"@\", (user === null || user === void 0 ? void 0 : user.username) || 'n/a'))), __jsx(\"div\", {\n        className: \"sub-info\"\n      }, __jsx(\"a\", {\n        \"aria-hidden\": true,\n        className: \"user-balance\",\n        onClick: () => !(user !== null && user !== void 0 && user.isPerformer) ? Router.push('/wallet') : Router.push('/model/earning')\n      }, __jsx(WalletSvg, null), ' ', \"$\", ((user === null || user === void 0 ? void 0 : user.balance) || 0).toFixed(2), !(user !== null && user !== void 0 && user.isPerformer) && __jsx(PlusCircleOutlined, null)), user.isPerformer ? __jsx(Link, {\n        href: \"/model/my-subscriber\"\n      }, __jsx(\"a\", null, __jsx(StarOutlined, null), \"Subscribers\", ' ', shortenLargeNumber((user === null || user === void 0 ? void 0 : (_user$stats = user.stats) === null || _user$stats === void 0 ? void 0 : _user$stats.subscribers) || 0))) : __jsx(Link, {\n        href: \"/user/my-subscription\"\n      }, __jsx(\"a\", null, __jsx(HeartOutlined, null), \"Subscription\", ' ', shortenLargeNumber((user === null || user === void 0 ? void 0 : (_user$stats2 = user.stats) === null || _user$stats2 === void 0 ? void 0 : _user$stats2.totalSubscriptions) || 0))))),\n      closable: true,\n      onClose: () => this.setState({\n        openProfile: false\n      }),\n      visible: openProfile,\n      key: \"profile-drawer\",\n      className: ui.theme === 'light' ? 'profile-drawer' : 'profile-drawer dark',\n      width: 280\n    }, user.isPerformer && __jsx(\"div\", {\n      className: \"profile-menu-item\"\n    }, (settings === null || settings === void 0 ? void 0 : settings.agoraEnable) && __jsx(Link, {\n      href: {\n        pathname: '/model/live'\n      },\n      as: \"/model/live\"\n    }, __jsx(\"div\", {\n      className: router.asPath === '/model/live' ? 'menu-item active' : 'menu-item'\n    }, __jsx(LiveIcon, null), ' ', \"Go Live\")), __jsx(Divider, null), __jsx(Link, {\n      href: {\n        pathname: '/model/profile',\n        query: {\n          username: user.username || user._id\n        }\n      },\n      as: `/${user.username || user._id}`\n    }, __jsx(\"div\", {\n      className: router.asPath === `/${user.username || user._id}` ? 'menu-item active' : 'menu-item'\n    }, __jsx(HomeIcon, null), ' ', \"My Profile\")), __jsx(Link, {\n      href: \"/model/account\",\n      as: \"/model/account\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/model/account' ? 'menu-item active' : 'menu-item'\n    }, __jsx(UserOutlined, null), ' ', \"Edit Profile\")), __jsx(Link, {\n      href: {\n        pathname: '/model/block-user'\n      },\n      as: \"/model/block-user\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/model/block-user' ? 'menu-item active' : 'menu-item'\n    }, __jsx(BlockOutlined, null), ' ', \"Blacklist\")), __jsx(Link, {\n      href: {\n        pathname: '/model/block-countries'\n      },\n      as: \"/model/block-countries\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/model/block-countries' ? 'menu-item active' : 'menu-item'\n    }, __jsx(StopOutlined, null), ' ', \"Block Countries\")), __jsx(Link, {\n      href: {\n        pathname: '/model/banking'\n      },\n      as: \"/model/banking\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/model/banking' ? 'menu-item active' : 'menu-item'\n    }, __jsx(BankOutlined, null), ' ', \"Banking (to earn)\")), __jsx(Divider, null), __jsx(Link, {\n      href: \"/model/my-post\",\n      as: \"/model/my-post\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/model/my-post' ? 'menu-item active' : 'menu-item'\n    }, __jsx(FireOutlined, null), ' ', \"My Feeds\")), __jsx(Link, {\n      href: \"/model/my-video\",\n      as: \"/model/my-video\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/model/my-video' ? 'menu-item active' : 'menu-item'\n    }, __jsx(VideoCameraOutlined, null), ' ', \"My Videos\")), __jsx(Link, {\n      href: \"/model/my-store\",\n      as: \"/model/my-store\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/model/my-store' ? 'menu-item active' : 'menu-item'\n    }, __jsx(ShoppingOutlined, null), ' ', \"My Products\")), __jsx(Link, {\n      href: \"/model/my-gallery\",\n      as: \"/model/my-gallery\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/model/my-gallery' ? 'menu-item active' : 'menu-item'\n    }, __jsx(PictureOutlined, null), ' ', \"My Galleries\")), __jsx(Divider, null), __jsx(Link, {\n      href: {\n        pathname: '/model/my-order'\n      },\n      as: \"/model/my-order\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/model/my-order' ? 'menu-item active' : 'menu-item'\n    }, __jsx(ShoppingCartOutlined, null), ' ', \"Order History\")), __jsx(Link, {\n      href: \"/model/earning\",\n      as: \"/model/earning\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/model/earning' ? 'menu-item active' : 'menu-item'\n    }, __jsx(DollarOutlined, null), ' ', \"Earning History\")), __jsx(Link, {\n      href: \"/model/payout-request\",\n      as: \"/model/payout-request\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/model/payout-request' ? 'menu-item active' : 'menu-item'\n    }, __jsx(NotificationOutlined, null), ' ', \"Payout Requests\")), __jsx(Divider, null), __jsx(\"div\", {\n      \"aria-hidden\": true,\n      className: \"menu-item\",\n      onClick: () => this.beforeLogout()\n    }, __jsx(LogoutOutlined, null), ' ', \"Sign Out\")), !user.isPerformer && __jsx(\"div\", {\n      className: \"profile-menu-item\"\n    }, __jsx(Link, {\n      href: \"/user/account\",\n      as: \"/user/account\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/user/account' ? 'menu-item active' : 'menu-item'\n    }, __jsx(UserOutlined, null), ' ', \"Edit Profile\")), config.paymentGateway === 'stripe' && __jsx(Link, {\n      href: \"/user/cards\",\n      as: \"/user/cards\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/user/cards' ? 'menu-item active' : 'menu-item'\n    }, __jsx(CreditCardOutlined, null), ' ', \"Add Card\")), __jsx(Link, {\n      href: \"/user/bookmarks\",\n      as: \"/user/bookmarks\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/user/bookmarks' ? 'menu-item active' : 'menu-item'\n    }, __jsx(BookOutlined, null), ' ', \"Bookmarks\")), __jsx(Link, {\n      href: \"/user/my-subscription\",\n      as: \"/user/my-subscription\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/user/my-subscriptions' ? 'menu-item active' : 'menu-item'\n    }, __jsx(HeartOutlined, null), ' ', \"Subscriptions\")), __jsx(Divider, null), __jsx(Link, {\n      href: \"/user/orders\",\n      as: \"/user/orders\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/user/orders' ? 'menu-item active' : 'menu-item'\n    }, __jsx(ShoppingCartOutlined, null), ' ', \"Order History\")), __jsx(Link, {\n      href: \"/user/payment-history\",\n      as: \"/user/payment-history\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/user/payment-history' ? 'menu-item active' : 'menu-item'\n    }, __jsx(HistoryOutlined, null), ' ', \"Payment History\")), __jsx(Link, {\n      href: \"/user/wallet-transaction\",\n      as: \"/user/wallet-transaction\"\n    }, __jsx(\"div\", {\n      className: router.pathname === '/user/wallet-transaction' ? 'menu-item active' : 'menu-item'\n    }, __jsx(DollarOutlined, null), ' ', \"Wallet Transactions\")), __jsx(Divider, null), __jsx(\"div\", {\n      className: \"menu-item\",\n      \"aria-hidden\": true,\n      onClick: () => this.beforeLogout()\n    }, __jsx(LogoutOutlined, null), ' ', \"Sign Out\"))), __jsx(SubscribePerformerModal, {\n      onSubscribed: this.handleSubscribe\n    })));\n  }\n\n}\n\nHeader.contextType = SocketContext;\n\nconst mapState = state => _objectSpread({\n  user: _objectSpread({}, state.user.current),\n  ui: _objectSpread({}, state.ui),\n  config: _objectSpread({}, state.settings)\n}, state.streaming);\n\nconst mapDispatch = {\n  logout,\n  addPrivateRequest,\n  accessPrivateRequest,\n  updateUIValue,\n  updateBalance\n};\nexport default withRouter(connect(mapState, mapDispatch)(Header));","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/common/layout/header.tsx"],"names":["PureComponent","Layout","Badge","Drawer","Divider","Avatar","connect","Link","logout","ShoppingCartOutlined","UserOutlined","HistoryOutlined","CreditCardOutlined","VideoCameraOutlined","FireOutlined","NotificationOutlined","BookOutlined","DollarOutlined","PictureOutlined","StarOutlined","ShoppingOutlined","BankOutlined","LogoutOutlined","HeartOutlined","BlockOutlined","PlusCircleOutlined","StopOutlined","HomeIcon","ModelIcon","PlusIcon","MessageIcon","UserIcon","LiveIcon","TickIcon","WalletSvg","Router","withRouter","RouterEvent","messageService","authService","Event","SocketContext","addPrivateRequest","accessPrivateRequest","updateUIValue","updateBalance","shortenLargeNumber","SubscribePerformerModal","Header","totalNotReadMessage","openProfile","setState","event","total","username","push","pathname","query","componentDidMount","events","on","handleChangeRoute","user","props","_id","handleCountNotificationMessage","componentDidUpdate","prevProps","componentWillUnmount","off","token","getToken","socket","context","emit","data","countTotalNotRead","handleUpdateBalance","isPerformer","handlePaymentStatusCallback","redirectUrl","window","location","href","beforeLogout","handleLogout","render","router","ui","settings","config","state","handleMessage","bind","logo","siteName","avatar","name","balance","toFixed","stats","subscribers","totalSubscriptions","theme","agoraEnable","asPath","paymentGateway","handleSubscribe","contextType","mapState","current","streaming","mapDispatch"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  Layout, Badge, Drawer, Divider, Avatar\n} from 'antd';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport {\n  IUser, StreamSettings, IUIConfig, ISettings\n} from 'src/interfaces';\nimport { logout } from '@redux/auth/actions';\nimport {\n  ShoppingCartOutlined, UserOutlined, HistoryOutlined, CreditCardOutlined,\n  VideoCameraOutlined, FireOutlined, NotificationOutlined, BookOutlined,\n  DollarOutlined, PictureOutlined, StarOutlined, ShoppingOutlined, BankOutlined,\n  LogoutOutlined, HeartOutlined, BlockOutlined, PlusCircleOutlined, StopOutlined\n} from '@ant-design/icons';\nimport {\n  HomeIcon, ModelIcon, PlusIcon, MessageIcon, UserIcon, LiveIcon, TickIcon, WalletSvg\n} from 'src/icons';\nimport Router, { withRouter, Router as RouterEvent } from 'next/router';\nimport {\n  messageService, authService\n} from 'src/services';\nimport { Event, SocketContext } from 'src/socket';\nimport { addPrivateRequest, accessPrivateRequest } from '@redux/streaming/actions';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport { updateBalance } from '@redux/user/actions';\nimport { shortenLargeNumber } from '@lib/number';\nimport { SubscribePerformerModal } from 'src/components/subscription/subscribe-performer-modal';\nimport './header.less';\n\ninterface IProps {\n  updateBalance: Function;\n  updateUIValue: Function;\n  user: IUser;\n  logout: Function;\n  router: any;\n  ui: IUIConfig;\n  privateRequests: any;\n  addPrivateRequest: Function;\n  accessPrivateRequest: Function;\n  settings: StreamSettings;\n  config: ISettings;\n}\n\nclass Header extends PureComponent<IProps> {\n  state = {\n    totalNotReadMessage: 0,\n    openProfile: false\n  };\n\n  componentDidMount() {\n    RouterEvent.events.on('routeChangeStart', this.handleChangeRoute);\n    const { user } = this.props;\n    if (user._id) {\n      this.handleCountNotificationMessage();\n    }\n  }\n\n  componentDidUpdate(prevProps: any) {\n    const { user } = this.props;\n    if (user._id && prevProps.user._id !== user._id) {\n      this.handleCountNotificationMessage();\n    }\n  }\n\n  componentWillUnmount() {\n    RouterEvent.events.off('routeChangeStart', this.handleChangeRoute);\n    const token = authService.getToken();\n    const socket = this.context;\n    token && socket && socket.emit('auth/logout', { token });\n  }\n\n  handleChangeRoute = () => {\n    this.setState({\n      openProfile: false\n    });\n  }\n\n  handleMessage = async (event) => {\n    event && this.setState({ totalNotReadMessage: event.total });\n  };\n\n  handleSubscribe = (username) => {\n    Router.push(\n      { pathname: '/streaming/details', query: { username } },\n      `/streaming/${username}`\n    );\n  };\n\n  async handleCountNotificationMessage() {\n    const data = await (await messageService.countTotalNotRead()).data;\n    if (data) {\n      this.setState({ totalNotReadMessage: data.total });\n    }\n  }\n\n  async handleUpdateBalance(event) {\n    const { user, updateBalance: handleUpdateBalance } = this.props;\n    if (user.isPerformer) {\n      handleUpdateBalance({ token: event.token });\n    }\n  }\n\n  async handlePaymentStatusCallback({ redirectUrl }) {\n    if (redirectUrl) {\n      window.location.href = redirectUrl;\n    }\n  }\n\n  async beforeLogout() {\n    const { logout: handleLogout } = this.props;\n    const token = authService.getToken();\n    const socket = this.context;\n    token && socket && await socket.emit('auth/logout', {\n      token\n    });\n    handleLogout();\n  }\n\n  render() {\n    const {\n      user, router, ui, settings, config\n    } = this.props;\n    const {\n      totalNotReadMessage, openProfile\n    } = this.state;\n\n    return (\n      <div className=\"main-header\">\n        <Event\n          event=\"nofify_read_messages_in_conversation\"\n          handler={this.handleMessage.bind(this)}\n        />\n        <Event\n          event=\"update_balance\"\n          handler={this.handleUpdateBalance.bind(this)}\n        />\n        <Event\n          event=\"payment_status_callback\"\n          handler={this.handlePaymentStatusCallback.bind(this)}\n        />\n        <div className=\"main-container\">\n          <Layout.Header className=\"header\" id=\"layoutHeader\">\n            <div className=\"nav-bar\">\n              <ul className={user._id ? 'nav-icons' : 'nav-icons custom'}>\n                {user._id && (\n                  <li className={router.pathname === '/home' ? 'active' : ''}>\n                    <Link href=\"/home\">\n                      <a>\n                        <HomeIcon />\n                      </a>\n                    </Link>\n                  </li>\n                )}\n                {user._id && (\n                  <>\n                    {user?.isPerformer && (\n                    <li className={router.pathname === '/model/my-post/create' ? 'active' : ''}>\n                      <Link href=\"/model/my-post/create\">\n                        <a>\n                          <PlusIcon />\n                        </a>\n                      </Link>\n                    </li>\n                    )}\n                  </>\n                )}\n                {user._id && !user.isPerformer && (\n                  <li key=\"model\" className={router.pathname === '/model' ? 'active' : ''}>\n                    <Link href=\"/model\">\n                      <a>\n                        <ModelIcon />\n                      </a>\n                    </Link>\n                  </li>\n                )}\n                {user._id && (\n                  <li key=\"messenger\" className={router.pathname === '/messages' ? 'active' : ''}>\n                    <Link href=\"/messages\">\n                      <a>\n                        <MessageIcon />\n                        <Badge\n                          className=\"cart-total\"\n                          count={totalNotReadMessage}\n                          showZero\n                        />\n                      </a>\n                    </Link>\n                  </li>\n                )}\n                {!user._id && [\n                  <li key=\"logo\" className=\"logo-nav\">\n                    <Link href=\"/home\">\n                      <a>{ui.logo ? <img src={ui.logo} alt=\"logo\" /> : `${ui.siteName}`}</a>\n                    </Link>\n                  </li>,\n                  <li key=\"login\" className={router.pathname === '/' ? 'active' : ''}>\n                    <Link href=\"/\">\n                      <a>Log In</a>\n                    </Link>\n                  </li>,\n                  <li key=\"signup\" className={router.pathname === '/auth/register' ? 'active' : ''}>\n                    <Link href=\"/auth/register\">\n                      <a>Sign Up</a>\n                    </Link>\n                  </li>\n                ]}\n                {user._id && (\n                  <li key=\"avatar\" aria-hidden onClick={() => this.setState({ openProfile: true })}>\n                    {user?.avatar ? <Avatar src={user?.avatar || '/static/no-avatar.png'} /> : <UserIcon />}\n                  </li>\n                )}\n              </ul>\n            </div>\n          </Layout.Header>\n          <Drawer\n            title={(\n              <>\n                <div className=\"profile-user\">\n                  <img className=\"avatar\" src={user?.avatar || '/static/no-avatar.png'} alt=\"avatar\" />\n                  <span className=\"profile-name\">\n                    <span>\n                      {user?.name || 'N/A'}\n                      {' '}\n                      <TickIcon />\n                    </span>\n                    <span className=\"sub-name\">\n                      @\n                      {user?.username || 'n/a'}\n                    </span>\n                  </span>\n                </div>\n                <div className=\"sub-info\">\n                  <a aria-hidden className=\"user-balance\" onClick={() => (!user?.isPerformer ? Router.push('/wallet') : Router.push('/model/earning'))}>\n                    <WalletSvg />\n                    {' '}\n                    $\n                    {(user?.balance || 0).toFixed(2)}\n                    {!user?.isPerformer && <PlusCircleOutlined />}\n                  </a>\n                  {user.isPerformer ? (\n                    <Link href=\"/model/my-subscriber\">\n                      <a>\n                        <StarOutlined />\n                        Subscribers\n                        {' '}\n                        {shortenLargeNumber(user?.stats?.subscribers || 0)}\n                      </a>\n                    </Link>\n                  ) : (\n                    <Link href=\"/user/my-subscription\">\n                      <a>\n                        <HeartOutlined />\n                        Subscription\n                        {' '}\n                        {shortenLargeNumber(user?.stats?.totalSubscriptions || 0)}\n                      </a>\n                    </Link>\n                  )}\n                </div>\n              </>\n            )}\n            closable\n            onClose={() => this.setState({ openProfile: false })}\n            visible={openProfile}\n            key=\"profile-drawer\"\n            className={ui.theme === 'light' ? 'profile-drawer' : 'profile-drawer dark'}\n            width={280}\n          >\n            {user.isPerformer && (\n              <div className=\"profile-menu-item\">\n                {settings?.agoraEnable && (\n                <Link href={{ pathname: '/model/live' }} as=\"/model/live\">\n                  <div className={router.asPath === '/model/live' ? 'menu-item active' : 'menu-item'}>\n                    <LiveIcon />\n                    {' '}\n                    Go Live\n                  </div>\n                </Link>\n                )}\n                <Divider />\n                <Link href={{ pathname: '/model/profile', query: { username: user.username || user._id } }} as={`/${user.username || user._id}`}>\n                  <div className={router.asPath === `/${user.username || user._id}` ? 'menu-item active' : 'menu-item'}>\n                    <HomeIcon />\n                    {' '}\n                    My Profile\n                  </div>\n                </Link>\n                <Link href=\"/model/account\" as=\"/model/account\">\n                  <div className={router.pathname === '/model/account' ? 'menu-item active' : 'menu-item'}>\n                    <UserOutlined />\n                    {' '}\n                    Edit Profile\n                  </div>\n                </Link>\n                <Link href={{ pathname: '/model/block-user' }} as=\"/model/block-user\">\n                  <div className={router.pathname === '/model/block-user' ? 'menu-item active' : 'menu-item'}>\n                    <BlockOutlined />\n                    {' '}\n                    Blacklist\n                  </div>\n                </Link>\n                <Link href={{ pathname: '/model/block-countries' }} as=\"/model/block-countries\">\n                  <div className={router.pathname === '/model/block-countries' ? 'menu-item active' : 'menu-item'}>\n                    <StopOutlined />\n                    {' '}\n                    Block Countries\n                  </div>\n                </Link>\n                <Link href={{ pathname: '/model/banking' }} as=\"/model/banking\">\n                  <div className={router.pathname === '/model/banking' ? 'menu-item active' : 'menu-item'}>\n                    <BankOutlined />\n                    {' '}\n                    Banking (to earn)\n                  </div>\n                </Link>\n                <Divider />\n                <Link href=\"/model/my-post\" as=\"/model/my-post\">\n                  <div className={router.pathname === '/model/my-post' ? 'menu-item active' : 'menu-item'}>\n                    <FireOutlined />\n                    {' '}\n                    My Feeds\n                  </div>\n                </Link>\n                <Link href=\"/model/my-video\" as=\"/model/my-video\">\n                  <div className={router.pathname === '/model/my-video' ? 'menu-item active' : 'menu-item'}>\n                    <VideoCameraOutlined />\n                    {' '}\n                    My Videos\n                  </div>\n                </Link>\n                <Link href=\"/model/my-store\" as=\"/model/my-store\">\n                  <div className={router.pathname === '/model/my-store' ? 'menu-item active' : 'menu-item'}>\n                    <ShoppingOutlined />\n                    {' '}\n                    My Products\n                  </div>\n                </Link>\n                <Link href=\"/model/my-gallery\" as=\"/model/my-gallery\">\n                  <div className={router.pathname === '/model/my-gallery' ? 'menu-item active' : 'menu-item'}>\n                    <PictureOutlined />\n                    {' '}\n                    My Galleries\n                  </div>\n                </Link>\n                <Divider />\n                <Link href={{ pathname: '/model/my-order' }} as=\"/model/my-order\">\n                  <div className={router.pathname === '/model/my-order' ? 'menu-item active' : 'menu-item'}>\n                    <ShoppingCartOutlined />\n                    {' '}\n                    Order History\n                  </div>\n                </Link>\n                <Link href=\"/model/earning\" as=\"/model/earning\">\n                  <div className={router.pathname === '/model/earning' ? 'menu-item active' : 'menu-item'}>\n                    <DollarOutlined />\n                    {' '}\n                    Earning History\n                  </div>\n                </Link>\n                <Link href=\"/model/payout-request\" as=\"/model/payout-request\">\n                  <div className={router.pathname === '/model/payout-request' ? 'menu-item active' : 'menu-item'}>\n                    <NotificationOutlined />\n                    {' '}\n                    Payout Requests\n                  </div>\n                </Link>\n                <Divider />\n                <div aria-hidden className=\"menu-item\" onClick={() => this.beforeLogout()}>\n                  <LogoutOutlined />\n                  {' '}\n                  Sign Out\n                </div>\n              </div>\n            )}\n            {!user.isPerformer && (\n              <div className=\"profile-menu-item\">\n                <Link href=\"/user/account\" as=\"/user/account\">\n                  <div className={router.pathname === '/user/account' ? 'menu-item active' : 'menu-item'}>\n                    <UserOutlined />\n                    {' '}\n                    Edit Profile\n                  </div>\n                </Link>\n                {config.paymentGateway === 'stripe' && (\n                <Link href=\"/user/cards\" as=\"/user/cards\">\n                  <div className={router.pathname === '/user/cards' ? 'menu-item active' : 'menu-item'}>\n                    <CreditCardOutlined />\n                    {' '}\n                    Add Card\n                  </div>\n                </Link>\n                )}\n                <Link href=\"/user/bookmarks\" as=\"/user/bookmarks\">\n                  <div className={router.pathname === '/user/bookmarks' ? 'menu-item active' : 'menu-item'}>\n                    <BookOutlined />\n                    {' '}\n                    Bookmarks\n                  </div>\n                </Link>\n                <Link href=\"/user/my-subscription\" as=\"/user/my-subscription\">\n                  <div className={router.pathname === '/user/my-subscriptions' ? 'menu-item active' : 'menu-item'}>\n                    <HeartOutlined />\n                    {' '}\n                    Subscriptions\n                  </div>\n                </Link>\n                <Divider />\n                <Link href=\"/user/orders\" as=\"/user/orders\">\n                  <div className={router.pathname === '/user/orders' ? 'menu-item active' : 'menu-item'}>\n                    <ShoppingCartOutlined />\n                    {' '}\n                    Order History\n                  </div>\n                </Link>\n                <Link href=\"/user/payment-history\" as=\"/user/payment-history\">\n                  <div className={router.pathname === '/user/payment-history' ? 'menu-item active' : 'menu-item'}>\n                    <HistoryOutlined />\n                    {' '}\n                    Payment History\n                  </div>\n                </Link>\n                <Link href=\"/user/wallet-transaction\" as=\"/user/wallet-transaction\">\n                  <div className={router.pathname === '/user/wallet-transaction' ? 'menu-item active' : 'menu-item'}>\n                    <DollarOutlined />\n                    {' '}\n                    Wallet Transactions\n                  </div>\n                </Link>\n                <Divider />\n                <div className=\"menu-item\" aria-hidden onClick={() => this.beforeLogout()}>\n                  <LogoutOutlined />\n                  {' '}\n                  Sign Out\n                </div>\n              </div>\n            )}\n            {/* <div className=\"switchTheme\">\n              <span>\n                <BulbOutlined />\n                <span>Switch Theme</span>\n              </span>\n              <Switch\n                onChange={this.onThemeChange.bind(this, ui.theme === 'dark' ? 'light' : 'dark')}\n                checked={ui.theme === 'dark'}\n                checkedChildren=\"Dark\"\n                unCheckedChildren=\"Light\"\n              />\n            </div> */}\n          </Drawer>\n          <SubscribePerformerModal onSubscribed={this.handleSubscribe} />\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.contextType = SocketContext;\n\nconst mapState = (state: any) => ({\n  user: { ...state.user.current },\n  ui: { ...state.ui },\n  config: { ...state.settings },\n  ...state.streaming\n});\nconst mapDispatch = {\n  logout, addPrivateRequest, accessPrivateRequest, updateUIValue, updateBalance\n};\nexport default withRouter(connect(mapState, mapDispatch)(Header)) as any;\n"]},"metadata":{},"sourceType":"module"}