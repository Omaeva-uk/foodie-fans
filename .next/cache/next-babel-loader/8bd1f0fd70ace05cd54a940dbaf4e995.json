{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport cookie from 'js-cookie';\nimport { APIRequest, TOKEN } from './api-request';\nexport var AuthService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(AuthService, _APIRequest);\n\n  var _super = _createSuper(AuthService);\n\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.post('/auth/login', data));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"loginTwitter\",\n    value: function () {\n      var _loginTwitter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.get(this.buildUrl('/auth/twitter/login')));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loginTwitter() {\n        return _loginTwitter.apply(this, arguments);\n      }\n\n      return loginTwitter;\n    }()\n  }, {\n    key: \"loginGoogle\",\n    value: function () {\n      var _loginGoogle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.post('/auth/google/login', data));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loginGoogle(_x2) {\n        return _loginGoogle.apply(this, arguments);\n      }\n\n      return loginGoogle;\n    }()\n  }, {\n    key: \"callbackLoginTwitter\",\n    value: function () {\n      var _callbackLoginTwitter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.get(this.buildUrl('/auth/twitter/callback', data)));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function callbackLoginTwitter(_x3) {\n        return _callbackLoginTwitter.apply(this, arguments);\n      }\n\n      return callbackLoginTwitter;\n    }()\n  }, {\n    key: \"verifyEmail\",\n    value: function () {\n      var _verifyEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(data) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this.post('/auth/email-verification', data));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function verifyEmail(_x4) {\n        return _verifyEmail.apply(this, arguments);\n      }\n\n      return verifyEmail;\n    }()\n  }, {\n    key: \"setToken\",\n    value: function setToken(token) {\n      var remember = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var expired = {\n        expires: !remember ? 1 : 365\n      };\n      cookie.set(TOKEN, token, expired);\n      this.setAuthHeaderToken(token);\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return cookie.get(TOKEN);\n    }\n  }, {\n    key: \"setTwitterToken\",\n    value: function setTwitterToken(data, role) {\n      cookie.set('oauthToken', data.oauthToken, {\n        expires: 1\n      });\n      cookie.set('oauthTokenSecret', data.oauthTokenSecret, {\n        expires: 1\n      });\n      cookie.set('role', role, {\n        expires: 1\n      });\n    }\n  }, {\n    key: \"getTwitterToken\",\n    value: function getTwitterToken() {\n      var oauthToken = cookie.get('oauthToken');\n      var oauthTokenSecret = cookie.get('oauthTokenSecret');\n      var role = cookie.get('role');\n      return {\n        oauthToken: oauthToken,\n        oauthTokenSecret: oauthTokenSecret,\n        role: role\n      };\n    }\n  }, {\n    key: \"removeToken\",\n    value: function removeToken() {\n      cookie.remove(TOKEN);\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(password, source) {\n      return this.put('/auth/users/me/password', {\n        password: password,\n        source: source\n      });\n    }\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword(data) {\n      return this.post('/auth/users/forgot', data);\n    }\n  }, {\n    key: \"register\",\n    value: function register(data) {\n      return this.post('/auth/users/register', data);\n    }\n  }, {\n    key: \"registerPerformer\",\n    value: function registerPerformer(documents, data, onProgress) {\n      return this.upload('/auth/performers/register', documents, {\n        onProgress: onProgress,\n        customData: data\n      });\n    }\n  }, {\n    key: \"userSwitchToPerformer\",\n    value: function userSwitchToPerformer(userId) {\n      return this.post(\"/auth/users/\".concat(userId, \"/switch-to-performer\"));\n    }\n  }]);\n\n  return AuthService;\n}(APIRequest);\nexport var authService = new AuthService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/auth.service.ts"],"names":["cookie","APIRequest","TOKEN","AuthService","data","post","get","buildUrl","token","remember","expired","expires","set","setAuthHeaderToken","role","oauthToken","oauthTokenSecret","remove","password","source","put","documents","onProgress","upload","customData","userId","authService"],"mappings":"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","sourcesContent":["import cookie from 'js-cookie';\nimport {\n  ILogin, IFanRegister, IForgot, IVerifyEmail\n} from 'src/interfaces';\nimport { APIRequest, TOKEN } from './api-request';\n\nexport class AuthService extends APIRequest {\n  public async login(data: ILogin) {\n    return this.post('/auth/login', data);\n  }\n\n  public async loginTwitter() {\n    return this.get(\n      this.buildUrl('/auth/twitter/login')\n    );\n  }\n\n  public async loginGoogle(data: any) {\n    return this.post('/auth/google/login', data);\n  }\n\n  public async callbackLoginTwitter(data) {\n    return this.get(\n      this.buildUrl('/auth/twitter/callback', data)\n    );\n  }\n\n  public async verifyEmail(data: IVerifyEmail) {\n    return this.post('/auth/email-verification', data);\n  }\n\n  setToken(token: string, remember = true): void {\n    const expired = { expires: !remember ? 1 : 365 };\n    cookie.set(TOKEN, token, expired);\n    this.setAuthHeaderToken(token);\n  }\n\n  getToken(): string {\n    return cookie.get(TOKEN);\n  }\n\n  setTwitterToken(data: any, role: string) {\n    cookie.set('oauthToken', data.oauthToken, { expires: 1 });\n    cookie.set('oauthTokenSecret', data.oauthTokenSecret, { expires: 1 });\n    cookie.set('role', role, { expires: 1 });\n  }\n\n  getTwitterToken() {\n    const oauthToken = cookie.get('oauthToken');\n    const oauthTokenSecret = cookie.get('oauthTokenSecret');\n    const role = cookie.get('role');\n    return { oauthToken, oauthTokenSecret, role };\n  }\n\n  removeToken(): void {\n    cookie.remove(TOKEN);\n  }\n\n  updatePassword(password: string, source?: string) {\n    return this.put('/auth/users/me/password', { password, source });\n  }\n\n  resetPassword(data: IForgot) {\n    return this.post('/auth/users/forgot', data);\n  }\n\n  register(data: IFanRegister) {\n    return this.post('/auth/users/register', data);\n  }\n\n  registerPerformer(documents: {\n    file: File;\n    fieldname: string;\n  }[], data: any, onProgress?: Function) {\n    return this.upload('/auth/performers/register', documents, {\n      onProgress,\n      customData: data\n    });\n  }\n\n  userSwitchToPerformer(userId: string) {\n    return this.post(`/auth/users/${userId}/switch-to-performer`);\n  }\n}\n\nexport const authService = new AuthService();\n"]},"metadata":{},"sourceType":"module"}