{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { feedService } from '@services/index';\nimport { getFeeds, getFeedsSuccess, getFeedsFail, moreFeeds, moreFeedsSuccess, moreFeedsFail, getVideoFeeds, getVideoFeedsFail, getVideoFeedsSuccess, getPhotoFeeds, getPhotoFeedsFail, getPhotoFeedsSuccess, moreVideoFeeds, morePhotoFeeds, morePhotoFeedsSuccess, morePhotoFeedsFail } from './actions';\nconst performerSagas = [{\n  on: getFeeds,\n\n  *worker(data) {\n    try {\n      const resp = data.payload.isHome ? yield feedService.userHomeFeeds(data.payload) : yield feedService.userSearch(data.payload);\n      yield put(getFeedsSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(getFeedsFail(error));\n    }\n  }\n\n}, {\n  on: moreFeeds,\n\n  *worker(data) {\n    try {\n      const resp = data.payload.isHome ? yield feedService.userHomeFeeds(data.payload) : yield feedService.userSearch(data.payload);\n      yield put(moreFeedsSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(moreFeedsFail(error));\n    }\n  }\n\n}, {\n  on: getVideoFeeds,\n\n  *worker(data) {\n    try {\n      const resp = yield feedService.userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {\n        postType: 'video'\n      }));\n      yield put(getVideoFeedsSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(getVideoFeedsFail(error));\n    }\n  }\n\n}, {\n  on: moreVideoFeeds,\n\n  *worker(data) {\n    try {\n      const resp = yield feedService.userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {\n        postType: 'video'\n      }));\n      yield put(moreFeedsSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(moreFeedsFail(error));\n    }\n  }\n\n}, {\n  on: getPhotoFeeds,\n\n  *worker(data) {\n    try {\n      const resp = yield feedService.userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {\n        postType: 'photo'\n      }));\n      yield put(getPhotoFeedsSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(getPhotoFeedsFail(error));\n    }\n  }\n\n}, {\n  on: morePhotoFeeds,\n\n  *worker(data) {\n    try {\n      const resp = yield feedService.userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {\n        postType: 'photo'\n      }));\n      yield put(morePhotoFeedsSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(morePhotoFeedsFail(error));\n    }\n  }\n\n}];\nexport default flatten([createSagas(performerSagas)]);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/feed/sagas.ts"],"names":["flatten","put","createSagas","feedService","getFeeds","getFeedsSuccess","getFeedsFail","moreFeeds","moreFeedsSuccess","moreFeedsFail","getVideoFeeds","getVideoFeedsFail","getVideoFeedsSuccess","getPhotoFeeds","getPhotoFeedsFail","getPhotoFeedsSuccess","moreVideoFeeds","morePhotoFeeds","morePhotoFeedsSuccess","morePhotoFeedsFail","performerSagas","on","worker","data","resp","payload","isHome","userHomeFeeds","userSearch","e","error","Promise","resolve","postType"],"mappings":"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","sourcesContent":["import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { feedService } from '@services/index';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  getFeeds, getFeedsSuccess, getFeedsFail,\n  moreFeeds, moreFeedsSuccess, moreFeedsFail,\n  getVideoFeeds, getVideoFeedsFail, getVideoFeedsSuccess,\n  getPhotoFeeds, getPhotoFeedsFail, getPhotoFeedsSuccess, moreVideoFeeds, morePhotoFeeds, morePhotoFeedsSuccess, morePhotoFeedsFail\n} from './actions';\n\nconst performerSagas = [\n  {\n    on: getFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = data.payload.isHome ? yield feedService.userHomeFeeds(data.payload) : yield feedService.userSearch(data.payload);\n        yield put(getFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getFeedsFail(error));\n      }\n    }\n  },\n  {\n    on: moreFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = data.payload.isHome ? yield feedService.userHomeFeeds(data.payload) : yield feedService.userSearch(data.payload);\n        yield put(moreFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(moreFeedsFail(error));\n      }\n    }\n  },\n  {\n    on: getVideoFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield feedService.userSearch({ ...data.payload, postType: 'video' });\n        yield put(getVideoFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getVideoFeedsFail(error));\n      }\n    }\n  },\n  {\n    on: moreVideoFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield feedService.userSearch({ ...data.payload, postType: 'video' });\n        yield put(moreFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(moreFeedsFail(error));\n      }\n    }\n  },\n\n  {\n    on: getPhotoFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield feedService.userSearch({ ...data.payload, postType: 'photo' });\n        yield put(getPhotoFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getPhotoFeedsFail(error));\n      }\n    }\n  },\n  {\n    on: morePhotoFeeds,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield feedService.userSearch({ ...data.payload, postType: 'photo' });\n        yield put(morePhotoFeedsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(morePhotoFeedsFail(error));\n      }\n    }\n  }\n];\n\nexport default flatten([createSagas(performerSagas)]);\n"]},"metadata":{},"sourceType":"module"}