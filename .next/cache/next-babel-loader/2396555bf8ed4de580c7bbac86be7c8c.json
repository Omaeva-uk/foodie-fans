{"ast":null,"code":"import { APIRequest } from './api-request';\n\nclass StreamService extends APIRequest {\n  updateStreamInfo(payload) {\n    return this.put('/streaming/update', payload);\n  }\n\n  updateStreamDuration(payload) {\n    return this.put('/streaming/set-duration', payload);\n  }\n\n  goLive(data) {\n    return this.post('/streaming/live', data);\n  }\n\n  editLive(id, data) {\n    return this.put(`/streaming/live/${id}`, data);\n  }\n\n  joinPublicChat(performerId, headers) {\n    return this.post(`/streaming/join/${performerId}`, headers);\n  }\n\n  fetchAgoraAppToken(data) {\n    return this.post('/streaming/agora/token', data);\n  }\n\n  search(query) {\n    return this.get(this.buildUrl('/streaming/user/search', query));\n  }\n\n}\n\nexport const streamService = new StreamService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/stream.service.tsx"],"names":["APIRequest","StreamService","updateStreamInfo","payload","put","updateStreamDuration","goLive","data","post","editLive","id","joinPublicChat","performerId","headers","fetchAgoraAppToken","search","query","get","buildUrl","streamService"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;;AAEA,MAAMC,aAAN,SAA4BD,UAA5B,CAAuC;AACrCE,EAAAA,gBAAgB,CAACC,OAAD,EAAU;AACxB,WAAO,KAAKC,GAAL,CAAS,mBAAT,EAA8BD,OAA9B,CAAP;AACD;;AAEDE,EAAAA,oBAAoB,CAACF,OAAD,EAAU;AAC5B,WAAO,KAAKC,GAAL,CAAS,yBAAT,EAAoCD,OAApC,CAAP;AACD;;AAEDG,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,WAAO,KAAKC,IAAL,CAAU,iBAAV,EAA6BD,IAA7B,CAAP;AACD;;AAEDE,EAAAA,QAAQ,CAACC,EAAD,EAAKH,IAAL,EAAW;AACjB,WAAO,KAAKH,GAAL,CAAU,mBAAkBM,EAAG,EAA/B,EAAkCH,IAAlC,CAAP;AACD;;AAEDI,EAAAA,cAAc,CAACC,WAAD,EAAsBC,OAAtB,EAAqC;AACjD,WAAO,KAAKL,IAAL,CAAW,mBAAkBI,WAAY,EAAzC,EAA4CC,OAA5C,CAAP;AACD;;AAEDC,EAAAA,kBAAkB,CAACP,IAAD,EAAO;AACvB,WAAO,KAAKC,IAAL,CAAU,wBAAV,EAAoCD,IAApC,CAAP;AACD;;AAEDQ,EAAAA,MAAM,CAACC,KAAD,EAAgC;AACpC,WAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,wBAAd,EAAwCF,KAAxC,CAAT,CAAP;AACD;;AA3BoC;;AA8BvC,OAAO,MAAMG,aAAa,GAAG,IAAIlB,aAAJ,EAAtB","sourcesContent":["import { APIRequest } from './api-request';\n\nclass StreamService extends APIRequest {\n  updateStreamInfo(payload) {\n    return this.put('/streaming/update', payload);\n  }\n\n  updateStreamDuration(payload) {\n    return this.put('/streaming/set-duration', payload);\n  }\n\n  goLive(data) {\n    return this.post('/streaming/live', data);\n  }\n\n  editLive(id, data) {\n    return this.put(`/streaming/live/${id}`, data);\n  }\n\n  joinPublicChat(performerId: string, headers?: any) {\n    return this.post(`/streaming/join/${performerId}`, headers);\n  }\n\n  fetchAgoraAppToken(data) {\n    return this.post('/streaming/agora/token', data);\n  }\n\n  search(query: { [key: string]: any }) {\n    return this.get(this.buildUrl('/streaming/user/search', query));\n  }\n}\n\nexport const streamService = new StreamService();\n"]},"metadata":{},"sourceType":"module"}