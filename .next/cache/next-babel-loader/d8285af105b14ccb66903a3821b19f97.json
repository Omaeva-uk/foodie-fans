{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent, createRef } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { utilsService } from '@services/index';\nexport var GoogleReCaptcha = /*#__PURE__*/function (_PureComponent) {\n  _inherits(GoogleReCaptcha, _PureComponent);\n\n  var _super = _createSuper(GoogleReCaptcha);\n\n  function GoogleReCaptcha() {\n    var _this;\n\n    _classCallCheck(this, GoogleReCaptcha);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"recaptchaRef\", void 0);\n\n    return _this;\n  }\n\n  _createClass(GoogleReCaptcha, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.recaptchaRef) {\n        this.recaptchaRef = /*#__PURE__*/createRef();\n      }\n    }\n  }, {\n    key: \"handleVerifyCapcha\",\n    value: function () {\n      var _handleVerifyCapcha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token) {\n        var handleVerify, resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                handleVerify = this.props.handleVerify;\n\n                if (!token) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 4;\n                return utilsService.verifyRecaptcha(token);\n\n              case 4:\n                resp = _context.sent;\n                handleVerify(resp);\n                _context.next = 9;\n                break;\n\n              case 8:\n                handleVerify({\n                  success: false\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleVerifyCapcha(_x) {\n        return _handleVerifyCapcha.apply(this, arguments);\n      }\n\n      return handleVerifyCapcha;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var settings = this.props.settings;\n\n      if (!this.recaptchaRef) {\n        this.recaptchaRef = /*#__PURE__*/createRef();\n      }\n\n      return __jsx(\"div\", {\n        className: \"recaptcha-box\"\n      }, (settings === null || settings === void 0 ? void 0 : settings.enableGoogleReCaptcha) && __jsx(ReCAPTCHA, {\n        ref: this.recaptchaRef,\n        sitekey: settings === null || settings === void 0 ? void 0 : settings.googleReCaptchaSiteKey,\n        onChange: this.handleVerifyCapcha.bind(this)\n      }));\n    }\n  }]);\n\n  return GoogleReCaptcha;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/common/recaptcha.tsx"],"names":["PureComponent","createRef","ReCAPTCHA","utilsService","GoogleReCaptcha","recaptchaRef","token","handleVerify","props","verifyRecaptcha","resp","success","settings","enableGoogleReCaptcha","googleReCaptchaSiteKey","handleVerifyCapcha","bind"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,OAAzC;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAOA,WAAaC,eAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAGE,6BAAoB;AAClB,UAAI,CAAC,KAAKC,YAAV,EAAwB;AACtB,aAAKA,YAAL,gBAAoBJ,SAAS,EAA7B;AACD;AACF;AAPH;AAAA;AAAA;AAAA,yFASE,iBAAyBK,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,gBAAAA,YADV,GAC2B,KAAKC,KADhC,CACUD,YADV;;AAAA,qBAEMD,KAFN;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGuBH,YAAY,CAACM,eAAb,CAA6BH,KAA7B,CAHvB;;AAAA;AAGUI,gBAAAA,IAHV;AAIIH,gBAAAA,YAAY,CAACG,IAAD,CAAZ;AAJJ;AAAA;;AAAA;AAMIH,gBAAAA,YAAY,CAAC;AAAEI,kBAAAA,OAAO,EAAE;AAAX,iBAAD,CAAZ;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OATF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,WAmBE,kBAAS;AACP,UAAQC,QAAR,GAAqB,KAAKJ,KAA1B,CAAQI,QAAR;;AACA,UAAI,CAAC,KAAKP,YAAV,EAAwB;AACtB,aAAKA,YAAL,gBAAoBJ,SAAS,EAA7B;AACD;;AACD,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACG,CAAAW,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,qBAAV,KACD,MAAC,SAAD;AACE,QAAA,GAAG,EAAE,KAAKR,YADZ;AAEE,QAAA,OAAO,EAAEO,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEE,sBAFrB;AAGE,QAAA,QAAQ,EAAE,KAAKC,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B;AAHZ,QAFF,CADF;AAWD;AAnCH;;AAAA;AAAA,EAAqChB,aAArC","sourcesContent":["import { PureComponent, createRef } from 'react';\nimport { ISettings } from 'src/interfaces';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { utilsService } from '@services/index';\n\ninterface IProps {\n  settings: ISettings;\n  handleVerify: Function;\n}\n\nexport class GoogleReCaptcha extends PureComponent<IProps> {\n  recaptchaRef: any;\n\n  componentDidMount() {\n    if (!this.recaptchaRef) {\n      this.recaptchaRef = createRef();\n    }\n  }\n\n  async handleVerifyCapcha(token: string) {\n    const { handleVerify } = this.props;\n    if (token) {\n      const resp = await utilsService.verifyRecaptcha(token);\n      handleVerify(resp);\n    } else {\n      handleVerify({ success: false });\n    }\n  }\n\n  render() {\n    const { settings } = this.props;\n    if (!this.recaptchaRef) {\n      this.recaptchaRef = createRef();\n    }\n    return (\n      <div className=\"recaptcha-box\">\n        {settings?.enableGoogleReCaptcha && (\n        <ReCAPTCHA\n          ref={this.recaptchaRef}\n          sitekey={settings?.googleReCaptchaSiteKey}\n          onChange={this.handleVerifyCapcha.bind(this)}\n        />\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}