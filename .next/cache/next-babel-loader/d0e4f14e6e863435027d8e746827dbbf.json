{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent, createRef } from 'react';\nimport { Form, Input, Button, Row, Col, Select } from 'antd';\nimport { utilsService } from 'src/services';\nvar Option = Select.Option;\nvar layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nvar validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  },\n  number: {\n    // eslint-disable-next-line no-template-curly-in-string\n    range: 'Must be between ${min} and ${max}'\n  }\n};\nexport var PerformerBankingForm = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerBankingForm, _PureComponent);\n\n  var _super = _createSuper(PerformerBankingForm);\n\n  function PerformerBankingForm() {\n    var _this;\n\n    _classCallCheck(this, PerformerBankingForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      states: [],\n      cities: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleGetStates\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(countryCode) {\n        var user, resp, eState;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = _this.props.user;\n                _context.next = 3;\n                return utilsService.statesList(countryCode);\n\n              case 3:\n                resp = _context.sent;\n                _context.next = 6;\n                return _this.setState({\n                  states: resp.data\n                });\n\n              case 6:\n                eState = resp.data.find(function (s) {\n                  var _user$bankingInformat;\n\n                  return s === (user === null || user === void 0 ? void 0 : (_user$bankingInformat = user.bankingInformation) === null || _user$bankingInformat === void 0 ? void 0 : _user$bankingInformat.state);\n                });\n\n                if (eState) {\n                  _this.formRef.setFieldsValue({\n                    state: eState\n                  });\n                } else {\n                  _this.formRef.setFieldsValue({\n                    state: '',\n                    city: ''\n                  });\n                }\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleGetCities\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(state, countryCode) {\n        var user, resp, eCity;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                user = _this.props.user;\n                _context2.next = 3;\n                return utilsService.citiesList(countryCode, state);\n\n              case 3:\n                resp = _context2.sent;\n                _context2.next = 6;\n                return _this.setState({\n                  cities: resp.data\n                });\n\n              case 6:\n                eCity = resp.data.find(function (s) {\n                  var _user$bankingInformat2;\n\n                  return s === (user === null || user === void 0 ? void 0 : (_user$bankingInformat2 = user.bankingInformation) === null || _user$bankingInformat2 === void 0 ? void 0 : _user$bankingInformat2.city);\n                });\n\n                if (eCity) {\n                  _this.formRef.setFieldsValue({\n                    city: eCity\n                  });\n                } else {\n                  _this.formRef.setFieldsValue({\n                    city: ''\n                  });\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(PerformerBankingForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _user$bankingInformat3;\n\n      var user = this.props.user;\n\n      if (user !== null && user !== void 0 && (_user$bankingInformat3 = user.bankingInformation) !== null && _user$bankingInformat3 !== void 0 && _user$bankingInformat3.country) {\n        var _user$bankingInformat4, _user$bankingInformat5;\n\n        this.handleGetStates(user === null || user === void 0 ? void 0 : (_user$bankingInformat4 = user.bankingInformation) === null || _user$bankingInformat4 === void 0 ? void 0 : _user$bankingInformat4.country);\n\n        if (user !== null && user !== void 0 && (_user$bankingInformat5 = user.bankingInformation) !== null && _user$bankingInformat5 !== void 0 && _user$bankingInformat5.state) {\n          var _user$bankingInformat6, _user$bankingInformat7;\n\n          this.handleGetCities(user === null || user === void 0 ? void 0 : (_user$bankingInformat6 = user.bankingInformation) === null || _user$bankingInformat6 === void 0 ? void 0 : _user$bankingInformat6.state, user === null || user === void 0 ? void 0 : (_user$bankingInformat7 = user.bankingInformation) === null || _user$bankingInformat7 === void 0 ? void 0 : _user$bankingInformat7.country);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.formRef) this.formRef = /*#__PURE__*/createRef();\n      var _this$props = this.props,\n          onFinish = _this$props.onFinish,\n          user = _this$props.user,\n          updating = _this$props.updating,\n          countries = _this$props.countries;\n      var _this$state = this.state,\n          states = _this$state.states,\n          cities = _this$state.cities;\n      return __jsx(Form, _extends({}, layout, {\n        name: \"nest-messages\",\n        onFinish: onFinish.bind(this),\n        validateMessages: validateMessages,\n        initialValues: user === null || user === void 0 ? void 0 : user.bankingInformation,\n        labelAlign: \"left\",\n        className: \"account-form\",\n        ref: function ref(_ref3) {\n          _this2.formRef = _ref3;\n        }\n      }), __jsx(Row, null, __jsx(Col, {\n        xl: 12,\n        md: 12,\n        xs: 12\n      }, __jsx(Form.Item, {\n        label: \"First name\",\n        name: \"firstName\",\n        rules: [{\n          required: true,\n          message: 'Please input your first name!'\n        }]\n      }, __jsx(Input, {\n        placeholder: \"First name\"\n      }))), __jsx(Col, {\n        xl: 12,\n        md: 12,\n        xs: 12\n      }, __jsx(Form.Item, {\n        name: \"lastName\",\n        label: \"Last name\",\n        rules: [{\n          required: true,\n          message: 'Please input your last name!'\n        }]\n      }, __jsx(Input, {\n        placeholder: \"Last name\"\n      }))), __jsx(Col, {\n        xl: 12,\n        md: 12,\n        xs: 12\n      }, __jsx(Form.Item, {\n        name: \"bankName\",\n        label: \"Bank name\",\n        rules: [{\n          required: true,\n          message: 'Please input your bank name!'\n        }]\n      }, __jsx(Input, {\n        placeholder: \"Bank name\"\n      }))), __jsx(Col, {\n        xl: 12,\n        md: 12,\n        xs: 12\n      }, __jsx(Form.Item, {\n        name: \"bankAccount\",\n        label: \"Bank Account\",\n        rules: [{\n          required: true,\n          message: 'Please input your bank account!'\n        }]\n      }, __jsx(Input, {\n        placeholder: \"Bank account\"\n      }))), __jsx(Col, {\n        xl: 12,\n        md: 12,\n        xs: 12\n      }, __jsx(Form.Item, {\n        name: \"country\",\n        label: \"Country\",\n        rules: [{\n          required: true,\n          message: 'Please choose country!'\n        }]\n      }, __jsx(Select, {\n        showSearch: true,\n        optionFilterProp: \"label\",\n        onChange: function onChange(val) {\n          return _this2.handleGetStates(val);\n        }\n      }, countries.map(function (c) {\n        return __jsx(Option, {\n          key: c.code,\n          value: c.code,\n          label: c.name\n        }, __jsx(\"img\", {\n          alt: \"flag\",\n          src: c === null || c === void 0 ? void 0 : c.flag,\n          width: \"20px\"\n        }), ' ', c.name);\n      })))), __jsx(Col, {\n        xl: 12,\n        md: 12,\n        xs: 12\n      }, __jsx(Form.Item, {\n        name: \"state\",\n        label: \"State\"\n      }, __jsx(Select, {\n        placeholder: \"Select your state\",\n        optionFilterProp: \"label\",\n        showSearch: true,\n        onChange: function onChange(val) {\n          return _this2.handleGetCities(val, _this2.formRef.getFieldValue('country'));\n        }\n      }, states.map(function (state) {\n        return __jsx(Option, {\n          value: state,\n          label: state,\n          key: state\n        }, state);\n      })))), __jsx(Col, {\n        xl: 12,\n        md: 12,\n        xs: 12\n      }, __jsx(Form.Item, {\n        name: \"city\",\n        label: \"City\"\n      }, __jsx(Select, {\n        placeholder: \"Select your city\",\n        showSearch: true,\n        optionFilterProp: \"label\"\n      }, cities.map(function (city) {\n        return __jsx(Option, {\n          value: city,\n          label: city,\n          key: city\n        }, city);\n      })))), __jsx(Col, {\n        xl: 12,\n        md: 12,\n        xs: 12\n      }, __jsx(Form.Item, {\n        name: \"address\",\n        label: \"Address\"\n      }, __jsx(Input, {\n        placeholder: \"Address\"\n      }))), __jsx(Col, {\n        xl: 12,\n        md: 12,\n        xs: 12\n      }, __jsx(Form.Item, {\n        name: \"bankRouting\",\n        label: \"Bank Routing\"\n      }, __jsx(Input, {\n        placeholder: \"Bank routing\"\n      }))), __jsx(Col, {\n        xl: 12,\n        md: 12,\n        xs: 12\n      }, __jsx(Form.Item, {\n        name: \"bankSwiftCode\",\n        label: \"Bank swift code\"\n      }, __jsx(Input, {\n        placeholder: \"Bank swift code\"\n      })))), __jsx(Form.Item, {\n        className: \"text-center\"\n      }, __jsx(Button, {\n        className: \"primary\",\n        htmlType: \"submit\",\n        loading: updating,\n        disabled: updating\n      }, \"Save Changes\")));\n    }\n  }]);\n\n  return PerformerBankingForm;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/banking-form.tsx"],"names":["PureComponent","createRef","Form","Input","Button","Row","Col","Select","utilsService","Option","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","PerformerBankingForm","states","cities","countryCode","user","props","statesList","resp","setState","data","eState","find","s","bankingInformation","state","formRef","setFieldsValue","city","citiesList","eCity","country","handleGetStates","handleGetCities","onFinish","updating","countries","bind","ref","message","val","map","c","code","name","flag","getFieldValue"],"mappings":"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","sourcesContent":["import { PureComponent, createRef } from 'react';\nimport {\n  Form, Input, Button, Row, Col, Select\n} from 'antd';\nimport { utilsService } from 'src/services';\nimport { IPerformer, ICountry } from 'src/interfaces';\n\nconst { Option } = Select;\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }\n};\n\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  },\n  number: {\n    // eslint-disable-next-line no-template-curly-in-string\n    range: 'Must be between ${min} and ${max}'\n  }\n};\n\ninterface IProps {\n  onFinish: Function;\n  user: IPerformer;\n  updating?: boolean;\n  countries?: ICountry[];\n}\n\nexport class PerformerBankingForm extends PureComponent<IProps> {\n  state = {\n    states: [],\n    cities: []\n  }\n\n  formRef: any;\n\n  componentDidMount() {\n    const { user } = this.props;\n    if (user?.bankingInformation?.country) {\n      this.handleGetStates(user?.bankingInformation?.country);\n      if (user?.bankingInformation?.state) {\n        this.handleGetCities(user?.bankingInformation?.state, user?.bankingInformation?.country);\n      }\n    }\n  }\n\n  handleGetStates = async (countryCode: string) => {\n    const { user } = this.props;\n    const resp = await utilsService.statesList(countryCode);\n    await this.setState({ states: resp.data });\n    const eState = resp.data.find((s) => s === user?.bankingInformation?.state);\n    if (eState) {\n      this.formRef.setFieldsValue({ state: eState });\n    } else {\n      this.formRef.setFieldsValue({ state: '', city: '' });\n    }\n  }\n\n  handleGetCities = async (state: string, countryCode: string) => {\n    const { user } = this.props;\n    const resp = await utilsService.citiesList(countryCode, state);\n    await this.setState({ cities: resp.data });\n    const eCity = resp.data.find((s) => s === user?.bankingInformation?.city);\n    if (eCity) {\n      this.formRef.setFieldsValue({ city: eCity });\n    } else {\n      this.formRef.setFieldsValue({ city: '' });\n    }\n  }\n\n  render() {\n    if (!this.formRef) this.formRef = createRef();\n    const {\n      onFinish, user, updating, countries\n    } = this.props;\n    const { states, cities } = this.state;\n    return (\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish.bind(this)}\n        validateMessages={validateMessages}\n        initialValues={user?.bankingInformation}\n        labelAlign=\"left\"\n        className=\"account-form\"\n        ref={(ref) => { this.formRef = ref; }}\n      >\n        <Row>\n          <Col xl={12} md={12} xs={12}>\n            <Form.Item\n              label=\"First name\"\n              name=\"firstName\"\n              rules={[\n                { required: true, message: 'Please input your first name!' }\n              ]}\n            >\n              <Input placeholder=\"First name\" />\n            </Form.Item>\n          </Col>\n          <Col xl={12} md={12} xs={12}>\n            <Form.Item\n              name=\"lastName\"\n              label=\"Last name\"\n              rules={[\n                { required: true, message: 'Please input your last name!' }\n              ]}\n            >\n              <Input placeholder=\"Last name\" />\n            </Form.Item>\n          </Col>\n          <Col xl={12} md={12} xs={12}>\n            <Form.Item\n              name=\"bankName\"\n              label=\"Bank name\"\n              rules={[\n                { required: true, message: 'Please input your bank name!' }\n              ]}\n            >\n              <Input placeholder=\"Bank name\" />\n            </Form.Item>\n          </Col>\n          <Col xl={12} md={12} xs={12}>\n            <Form.Item\n              name=\"bankAccount\"\n              label=\"Bank Account\"\n              rules={[\n                { required: true, message: 'Please input your bank account!' }\n              ]}\n            >\n              <Input placeholder=\"Bank account\" />\n            </Form.Item>\n          </Col>\n          <Col xl={12} md={12} xs={12}>\n            <Form.Item\n              name=\"country\"\n              label=\"Country\"\n              rules={[{ required: true, message: 'Please choose country!' }]}\n            >\n              <Select\n                showSearch\n                optionFilterProp=\"label\"\n                onChange={(val: string) => this.handleGetStates(val)}\n              >\n                {countries.map((c) => (\n                  <Option key={c.code} value={c.code} label={c.name}>\n                    <img alt=\"flag\" src={c?.flag} width=\"20px\" />\n                    {' '}\n                    {c.name}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col xl={12} md={12} xs={12}>\n            <Form.Item name=\"state\" label=\"State\">\n              <Select\n                placeholder=\"Select your state\"\n                optionFilterProp=\"label\"\n                showSearch\n                onChange={(val: string) => this.handleGetCities(val, this.formRef.getFieldValue('country'))}\n              >\n                {states.map((state) => (\n                  <Option value={state} label={state} key={state}>\n                    {state}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col xl={12} md={12} xs={12}>\n            <Form.Item\n              name=\"city\"\n              label=\"City\"\n            >\n              <Select\n                placeholder=\"Select your city\"\n                showSearch\n                optionFilterProp=\"label\"\n              >\n                {cities.map((city) => (\n                  <Option value={city} label={city} key={city}>\n                    {city}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col xl={12} md={12} xs={12}>\n            <Form.Item name=\"address\" label=\"Address\">\n              <Input placeholder=\"Address\" />\n            </Form.Item>\n          </Col>\n          <Col xl={12} md={12} xs={12}>\n            <Form.Item name=\"bankRouting\" label=\"Bank Routing\">\n              <Input placeholder=\"Bank routing\" />\n            </Form.Item>\n          </Col>\n          <Col xl={12} md={12} xs={12}>\n            <Form.Item name=\"bankSwiftCode\" label=\"Bank swift code\">\n              <Input placeholder=\"Bank swift code\" />\n            </Form.Item>\n          </Col>\n          {/* <Col xl={12} md={12} xs={12}>\n            <Form.Item name=\"SSN\" label=\"SSN\">\n              <Input placeholder=\"SSN\" />\n            </Form.Item>\n          </Col> */}\n        </Row>\n        <Form.Item className=\"text-center\">\n          <Button\n            className=\"primary\"\n            htmlType=\"submit\"\n            loading={updating}\n            disabled={updating}\n          >\n            Save Changes\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}