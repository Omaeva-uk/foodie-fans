{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { Input, DatePicker } from 'antd';\nimport { AppstoreOutlined, MenuOutlined, SearchOutlined, CalendarOutlined } from '@ant-design/icons';\nimport { debounce } from 'lodash';\nimport './index.less';\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  Search\n} = Input;\nexport default class SearchFeedBar extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      q: '',\n      isGrid: false,\n      showSearch: false,\n      showCalendar: false\n    });\n\n    _defineProperty(this, \"onSearch\", debounce(async e => {\n      const {\n        handleSearch\n      } = this.props;\n      const value = e.target && e.target.value || '';\n      handleSearch({\n        q: value\n      });\n    }, 500));\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      tab: prevTab\n    } = prevProps;\n    const {\n      tab\n    } = this.props;\n\n    if (prevTab !== tab) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        q: ''\n      });\n    }\n  }\n\n  handleViewGrid(isGrid) {\n    const {\n      handleViewGrid: viewGrid\n    } = this.props;\n    this.setState({\n      isGrid\n    });\n    viewGrid(isGrid);\n  }\n\n  searchDateRange(dates, dateStrings) {\n    if (!dateStrings.length) return;\n    const {\n      handleSearch\n    } = this.props;\n    handleSearch({\n      fromDate: dateStrings[0],\n      toDate: dateStrings[1]\n    });\n  }\n\n  render() {\n    const {\n      q,\n      isGrid,\n      showSearch,\n      showCalendar\n    } = this.state;\n    const {\n      searching,\n      tab\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"search-post-bar\"\n    }, showCalendar && __jsx(RangePicker, {\n      onChange: this.searchDateRange.bind(this)\n    }), showSearch && __jsx(Search, {\n      placeholder: \"Enter keyword here...\",\n      onChange: e => {\n        var _e$target;\n\n        e.persist();\n        this.setState({\n          q: (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || ''\n        });\n        this.onSearch(e);\n      },\n      value: q,\n      loading: searching,\n      allowClear: true,\n      enterButton: true\n    }), __jsx(\"div\", {\n      className: \"grid-btns\"\n    }, __jsx(\"a\", {\n      \"aria-hidden\": true,\n      className: showSearch ? 'active' : '',\n      onClick: () => this.setState({\n        showSearch: !showSearch,\n        showCalendar: false\n      })\n    }, __jsx(SearchOutlined, null)), __jsx(\"a\", {\n      \"aria-hidden\": true,\n      className: showCalendar ? 'active' : '',\n      onClick: () => this.setState({\n        showCalendar: !showCalendar,\n        showSearch: false\n      })\n    }, __jsx(CalendarOutlined, null)), tab === 'post' && __jsx(\"a\", {\n      \"aria-hidden\": true,\n      className: isGrid ? 'active' : '',\n      onClick: this.handleViewGrid.bind(this, true)\n    }, __jsx(AppstoreOutlined, null)), tab === 'post' && __jsx(\"a\", {\n      \"aria-hidden\": true,\n      className: !isGrid ? 'active' : '',\n      onClick: this.handleViewGrid.bind(this, false)\n    }, __jsx(MenuOutlined, null))));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/post/search-bar.tsx"],"names":["PureComponent","Input","DatePicker","AppstoreOutlined","MenuOutlined","SearchOutlined","CalendarOutlined","debounce","RangePicker","Search","SearchFeedBar","q","isGrid","showSearch","showCalendar","e","handleSearch","props","value","target","componentDidUpdate","prevProps","tab","prevTab","setState","handleViewGrid","viewGrid","searchDateRange","dates","dateStrings","length","fromDate","toDate","render","state","searching","bind","persist","onSearch"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  Input, DatePicker\n} from 'antd';\nimport {\n  AppstoreOutlined, MenuOutlined, SearchOutlined, CalendarOutlined\n} from '@ant-design/icons';\nimport { debounce } from 'lodash';\nimport './index.less';\n\nconst { RangePicker } = DatePicker;\n\nconst { Search } = Input;\ninterface IProps {\n  searching: boolean;\n  handleSearch: Function;\n  handleViewGrid?: Function;\n  tab: string;\n}\n\nexport default class SearchFeedBar extends PureComponent<IProps> {\n  state = {\n    q: '',\n    isGrid: false,\n    showSearch: false,\n    showCalendar: false\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tab: prevTab } = prevProps;\n    const { tab } = this.props;\n    if (prevTab !== tab) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ q: '' });\n    }\n  }\n\n  onSearch = debounce(async (e) => {\n    const { handleSearch } = this.props;\n    const value = (e.target && e.target.value) || '';\n    handleSearch({\n      q: value\n    });\n  }, 500)\n\n  handleViewGrid(isGrid: boolean) {\n    const { handleViewGrid: viewGrid } = this.props;\n    this.setState({ isGrid });\n    viewGrid(isGrid);\n  }\n\n  searchDateRange(dates: [any, any], dateStrings: [string, string]) {\n    if (!dateStrings.length) return;\n    const { handleSearch } = this.props;\n    handleSearch({\n      fromDate: dateStrings[0],\n      toDate: dateStrings[1]\n    });\n  }\n\n  render() {\n    const {\n      q, isGrid, showSearch, showCalendar\n    } = this.state;\n    const { searching, tab } = this.props;\n    return (\n      <div className=\"search-post-bar\">\n        {showCalendar && <RangePicker onChange={this.searchDateRange.bind(this)} />}\n        {showSearch && (\n        <Search\n          placeholder=\"Enter keyword here...\"\n          onChange={(e) => {\n            e.persist();\n            this.setState({ q: e?.target?.value || '' });\n            this.onSearch(e);\n          }}\n          value={q}\n          loading={searching}\n          allowClear\n          enterButton\n        />\n        )}\n        <div className=\"grid-btns\">\n          <a aria-hidden className={showSearch ? 'active' : ''} onClick={() => this.setState({ showSearch: !showSearch, showCalendar: false })}><SearchOutlined /></a>\n          <a aria-hidden className={showCalendar ? 'active' : ''} onClick={() => this.setState({ showCalendar: !showCalendar, showSearch: false })}><CalendarOutlined /></a>\n          {tab === 'post' && <a aria-hidden className={isGrid ? 'active' : ''} onClick={this.handleViewGrid.bind(this, true)}><AppstoreOutlined /></a>}\n          {tab === 'post' && <a aria-hidden className={!isGrid ? 'active' : ''} onClick={this.handleViewGrid.bind(this, false)}><MenuOutlined /></a>}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}