{"ast":null,"code":"import { createAsyncAction, createAction } from '@lib/redux';\n\nvar _createAsyncAction = createAsyncAction('login', 'LOGIN'),\n    login = _createAsyncAction.login,\n    loginSuccess = _createAsyncAction.loginSuccess,\n    loginFail = _createAsyncAction.loginFail;\n\nexport { login, loginSuccess, loginFail };\n\nvar _createAsyncAction2 = createAsyncAction('loginPerformer', 'LOGINPERFORMER'),\n    loginPerformer = _createAsyncAction2.loginPerformer;\n\nexport { loginPerformer };\n\nvar _createAsyncAction3 = createAsyncAction('loginSocial', 'LOGINSOCIAL'),\n    loginSocial = _createAsyncAction3.loginSocial;\n\nexport { loginSocial };\n\nvar _createAsyncAction4 = createAsyncAction('registerFan', 'REGISTERFAN'),\n    registerFan = _createAsyncAction4.registerFan,\n    registerFanSuccess = _createAsyncAction4.registerFanSuccess,\n    registerFanFail = _createAsyncAction4.registerFanFail;\n\nexport { registerFan, registerFanSuccess, registerFanFail };\n\nvar _createAsyncAction5 = createAsyncAction('registerPerformer', 'REGISTERPERFORMER'),\n    registerPerformer = _createAsyncAction5.registerPerformer,\n    registerPerformerSuccess = _createAsyncAction5.registerPerformerSuccess,\n    registerPerformerFail = _createAsyncAction5.registerPerformerFail;\n\nexport { registerPerformer, registerPerformerSuccess, registerPerformerFail };\n\nvar _createAsyncAction6 = createAsyncAction('forgot', 'FORGOT'),\n    forgot = _createAsyncAction6.forgot,\n    forgotSuccess = _createAsyncAction6.forgotSuccess,\n    forgotFail = _createAsyncAction6.forgotFail;\n\nexport { forgot, forgotSuccess, forgotFail };\nexport var logout = createAction('logout');\nexport var getCurrentUser = createAction('getCurrentUser');","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/auth/actions.ts"],"names":["createAsyncAction","createAction","login","loginSuccess","loginFail","loginPerformer","loginSocial","registerFan","registerFanSuccess","registerFanFail","registerPerformer","registerPerformerSuccess","registerPerformerFail","forgot","forgotSuccess","forgotFail","logout","getCurrentUser"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,YAA5B,QAAgD,YAAhD;;AAEO,yBAA2CD,iBAAiB,CACjE,OADiE,EAEjE,OAFiE,CAA5D;AAAA,IAAQE,KAAR,sBAAQA,KAAR;AAAA,IAAeC,YAAf,sBAAeA,YAAf;AAAA,IAA6BC,SAA7B,sBAA6BA,SAA7B;;;;AAKA,0BAA2BJ,iBAAiB,CACjD,gBADiD,EAEjD,gBAFiD,CAA5C;AAAA,IAAQK,cAAR,uBAAQA,cAAR;;;;AAKA,0BAAwBL,iBAAiB,CAC9C,aAD8C,EAE9C,aAF8C,CAAzC;AAAA,IAAQM,WAAR,uBAAQA,WAAR;;;;AAKA,0BAA6DN,iBAAiB,CACnF,aADmF,EAEnF,aAFmF,CAA9E;AAAA,IAAQO,WAAR,uBAAQA,WAAR;AAAA,IAAqBC,kBAArB,uBAAqBA,kBAArB;AAAA,IAAyCC,eAAzC,uBAAyCA,eAAzC;;;;AAKA,0BAA+ET,iBAAiB,CACrG,mBADqG,EAErG,mBAFqG,CAAhG;AAAA,IAAQU,iBAAR,uBAAQA,iBAAR;AAAA,IAA2BC,wBAA3B,uBAA2BA,wBAA3B;AAAA,IAAqDC,qBAArD,uBAAqDA,qBAArD;;;;AAKA,0BAA8CZ,iBAAiB,CACpE,QADoE,EAEpE,QAFoE,CAA/D;AAAA,IAAQa,MAAR,uBAAQA,MAAR;AAAA,IAAgBC,aAAhB,uBAAgBA,aAAhB;AAAA,IAA+BC,UAA/B,uBAA+BA,UAA/B;;;AAKP,OAAO,IAAMC,MAAM,GAAGf,YAAY,CAAC,QAAD,CAA3B;AAEP,OAAO,IAAMgB,cAAc,GAAGhB,YAAY,CAAC,gBAAD,CAAnC","sourcesContent":["import { createAsyncAction, createAction } from '@lib/redux';\n\nexport const { login, loginSuccess, loginFail } = createAsyncAction(\n  'login',\n  'LOGIN'\n);\n\nexport const { loginPerformer } = createAsyncAction(\n  'loginPerformer',\n  'LOGINPERFORMER'\n);\n\nexport const { loginSocial } = createAsyncAction(\n  'loginSocial',\n  'LOGINSOCIAL'\n);\n\nexport const { registerFan, registerFanSuccess, registerFanFail } = createAsyncAction(\n  'registerFan',\n  'REGISTERFAN'\n);\n\nexport const { registerPerformer, registerPerformerSuccess, registerPerformerFail } = createAsyncAction(\n  'registerPerformer',\n  'REGISTERPERFORMER'\n);\n\nexport const { forgot, forgotSuccess, forgotFail } = createAsyncAction(\n  'forgot',\n  'FORGOT'\n);\n\nexport const logout = createAction('logout');\n\nexport const getCurrentUser = createAction('getCurrentUser');\n"]},"metadata":{},"sourceType":"module"}