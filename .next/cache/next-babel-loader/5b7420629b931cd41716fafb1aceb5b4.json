{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { Form, Input, InputNumber, Select, Upload, Button, message, Progress, Switch, DatePicker, Row, Col, Avatar, Modal } from 'antd';\nimport { CameraOutlined, VideoCameraAddOutlined, FileDoneOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { performerService, videoService } from '@services/index';\nimport moment from 'moment';\nimport { debounce } from 'lodash';\nimport Router from 'next/router';\nimport { VideoPlayer } from '@components/common';\nimport { getGlobalConfig } from '@services/config';\nimport './video.less';\nconst layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst {\n  Option\n} = Select;\nconst validateMessages = {\n  required: 'This field is required!'\n};\nexport class FormUploadVideo extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      previewThumbnail: null,\n      previewTeaser: null,\n      previewVideo: null,\n      selectedThumbnail: null,\n      selectedVideo: null,\n      selectedTeaser: null,\n      isSale: false,\n      isSchedule: false,\n      scheduledAt: moment(),\n      performers: [],\n      isShowPreview: false,\n      previewUrl: '',\n      previewType: '',\n      removedTeaser: false,\n      removedThumbnail: false\n    });\n\n    _defineProperty(this, \"getPerformers\", debounce(async (q, performerIds) => {\n      try {\n        const resp = await (await performerService.search({\n          q,\n          performerIds: performerIds || '',\n          limit: 500\n        })).data;\n        const performers = resp.data || [];\n        this.setState({\n          performers\n        });\n      } catch (e) {\n        const err = await e;\n        message.error((err === null || err === void 0 ? void 0 : err.message) || 'Error occured');\n      }\n    }, 500));\n\n    _defineProperty(this, \"previewModal\", () => {\n      const {\n        isShowPreview,\n        previewUrl,\n        previewType\n      } = this.state;\n      return __jsx(Modal, {\n        width: 767,\n        footer: null,\n        onOk: () => this.setState({\n          isShowPreview: false\n        }),\n        onCancel: () => this.setState({\n          isShowPreview: false\n        }),\n        visible: isShowPreview,\n        destroyOnClose: true\n      }, ['teaser', 'video'].includes(previewType) && __jsx(VideoPlayer, {\n        autoplay: true,\n        controls: true,\n        playsinline: true,\n        fluid: true,\n        sources: [{\n          src: previewUrl,\n          type: 'video/mp4'\n        }]\n      }), previewType === 'thumbnail' && __jsx(\"img\", {\n        src: previewUrl,\n        alt: \"thumbnail\",\n        width: \"100%\",\n        style: {\n          borderRadius: 5\n        }\n      }));\n    });\n  }\n\n  componentDidMount() {\n    const {\n      video,\n      user\n    } = this.props;\n\n    if (video) {\n      this.setState({\n        previewThumbnail: video === null || video === void 0 ? void 0 : video.thumbnail,\n        previewVideo: video === null || video === void 0 ? void 0 : video.video,\n        previewTeaser: video === null || video === void 0 ? void 0 : video.teaser,\n        isSale: video.isSale,\n        isSchedule: video.isSchedule,\n        scheduledAt: video.scheduledAt ? moment(video.scheduledAt) : moment()\n      });\n    }\n\n    this.getPerformers('', (video === null || video === void 0 ? void 0 : video.participantIds) || [user._id]);\n  }\n\n  async handleRemovefile(type) {\n    if (!window.confirm('Confirm to remove file!')) return;\n    const {\n      video\n    } = this.props;\n\n    try {\n      await videoService.deleteFile(video._id, type);\n      type === 'teaser' && this.setState({\n        removedTeaser: true\n      });\n      type === 'thumbnail' && this.setState({\n        removedThumbnail: true\n      });\n    } catch (e) {\n      const err = await e;\n      message.error((err === null || err === void 0 ? void 0 : err.message) || 'Error occured, please try again later');\n    }\n  }\n\n  beforeUpload(file, field) {\n    const {\n      beforeUpload: beforeUploadHandler\n    } = this.props;\n    const config = getGlobalConfig();\n\n    if (field === 'thumbnail') {\n      const isValid = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5);\n\n      if (!isValid) {\n        message.error(`File is too large please provide an file ${config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5}MB or below`);\n        return isValid;\n      }\n\n      this.setState({\n        selectedThumbnail: file\n      });\n    }\n\n    if (field === 'teaser') {\n      const isValid = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200);\n\n      if (!isValid) {\n        message.error(`File is too large please provide an file ${config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200}MB or below`);\n        return isValid;\n      }\n\n      this.setState({\n        selectedTeaser: file\n      });\n    }\n\n    if (field === 'video') {\n      const isValid = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2000);\n\n      if (!isValid) {\n        message.error(`File is too large please provide an file ${config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2000}MB or below`);\n        return isValid;\n      }\n\n      this.setState({\n        selectedVideo: file\n      });\n    }\n\n    return beforeUploadHandler(file, field);\n  }\n\n  render() {\n    const {\n      video,\n      submit,\n      uploading,\n      uploadPercentage,\n      user\n    } = this.props;\n    const {\n      previewThumbnail,\n      previewTeaser,\n      previewVideo,\n      performers,\n      isSale,\n      isSchedule,\n      scheduledAt,\n      selectedThumbnail,\n      selectedTeaser,\n      selectedVideo,\n      removedTeaser,\n      removedThumbnail\n    } = this.state;\n    const config = getGlobalConfig();\n    return __jsx(Form, _extends({}, layout, {\n      onFinish: values => {\n        const data = values;\n\n        if (isSchedule) {\n          data.scheduledAt = scheduledAt;\n        }\n\n        if (values.tags && values.tags.length) {\n          data.tags = values.tags.map(tag => tag.replace(/[^a-zA-Z0-9 ]/g, '_'));\n        }\n\n        submit(data);\n      },\n      onFinishFailed: () => message.error('Please complete the required fields'),\n      name: \"form-upload\",\n      validateMessages: validateMessages,\n      initialValues: video || {\n        title: '',\n        price: 9.99,\n        description: '',\n        tags: [],\n        isSale: false,\n        participantIds: [user._id],\n        isSchedule: false,\n        status: 'active'\n      },\n      scrollToFirstError: true,\n      className: \"account-form\"\n    }), __jsx(Row, null, __jsx(Col, {\n      md: 24,\n      xs: 24\n    }, __jsx(Form.Item, {\n      label: \"Title\",\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: 'Please input title of video!'\n      }]\n    }, __jsx(Input, null))), __jsx(Col, {\n      md: 24,\n      xs: 24\n    }, __jsx(Form.Item, {\n      label: \"Participants\",\n      name: \"participantIds\"\n    }, __jsx(Select, {\n      mode: \"multiple\",\n      style: {\n        width: '100%'\n      },\n      showSearch: true,\n      placeholder: \"Search performers here\",\n      optionFilterProp: \"children\",\n      onSearch: this.getPerformers.bind(this),\n      loading: uploading,\n      defaultValue: (video === null || video === void 0 ? void 0 : video.participantIds) || []\n    }, performers && performers.length > 0 && performers.map(p => __jsx(Option, {\n      key: p._id,\n      value: p._id\n    }, __jsx(Avatar, {\n      src: (p === null || p === void 0 ? void 0 : p.avatar) || '/static/no-avatar.png'\n    }), ' ', (p === null || p === void 0 ? void 0 : p.name) || (p === null || p === void 0 ? void 0 : p.username) || 'N/A'))))), __jsx(Col, {\n      md: 12,\n      xs: 24\n    }, __jsx(Form.Item, {\n      label: \"Tags\",\n      name: \"tags\"\n    }, __jsx(Select, {\n      mode: \"tags\",\n      style: {\n        width: '100%'\n      },\n      size: \"middle\",\n      showArrow: false,\n      defaultValue: (video === null || video === void 0 ? void 0 : video.tags) || []\n    }))), __jsx(Col, {\n      md: 12,\n      xs: 24\n    }, __jsx(Form.Item, {\n      name: \"status\",\n      label: \"Status\",\n      rules: [{\n        required: true,\n        message: 'Please select status!'\n      }]\n    }, __jsx(Select, null, __jsx(Select.Option, {\n      key: \"active\",\n      value: \"active\"\n    }, \"Active\"), __jsx(Select.Option, {\n      key: \"inactive\",\n      value: \"inactive\"\n    }, \"Inactive\")))), __jsx(Col, {\n      md: 12,\n      xs: 24\n    }, __jsx(Form.Item, {\n      name: \"isSale\",\n      label: \"For sale?\"\n    }, __jsx(Switch, {\n      checkedChildren: \"Pay per view\",\n      unCheckedChildren: \"Subscribe to view\",\n      checked: isSale,\n      onChange: val => this.setState({\n        isSale: val\n      })\n    })), isSale && __jsx(Form.Item, {\n      name: \"price\",\n      label: \"Price\"\n    }, __jsx(InputNumber, {\n      style: {\n        width: '100%'\n      },\n      min: 1\n    }))), __jsx(Col, {\n      md: 12,\n      xs: 24\n    }, __jsx(Form.Item, {\n      name: \"isSchedule\",\n      label: \"Scheduled?\"\n    }, __jsx(Switch, {\n      checkedChildren: \"Scheduled\",\n      unCheckedChildren: \"Not scheduled\",\n      checked: isSchedule,\n      onChange: val => this.setState({\n        isSchedule: val\n      })\n    })), isSchedule && __jsx(Form.Item, {\n      label: \"Scheduled for\"\n    }, __jsx(DatePicker, {\n      style: {\n        width: '100%'\n      },\n      disabledDate: currentDate => currentDate && currentDate < moment().endOf('day'),\n      defaultValue: scheduledAt,\n      onChange: val => this.setState({\n        scheduledAt: val\n      })\n    }))), __jsx(Col, {\n      span: 24\n    }, __jsx(Form.Item, {\n      name: \"description\",\n      label: \"Description\"\n    }, __jsx(Input.TextArea, {\n      rows: 3\n    }))), __jsx(Col, {\n      xs: 24,\n      md: 8\n    }, __jsx(Form.Item, {\n      label: \"Video\",\n      className: \"upload-bl\",\n      help: previewVideo && __jsx(\"a\", {\n        \"aria-hidden\": true,\n        onClick: () => this.setState({\n          isShowPreview: true,\n          previewUrl: previewVideo === null || previewVideo === void 0 ? void 0 : previewVideo.url,\n          previewType: 'video'\n        })\n      }, (previewVideo === null || previewVideo === void 0 ? void 0 : previewVideo.name) || 'Click here to preview') || selectedVideo && __jsx(\"a\", null, selectedVideo.name) || `Video file is ${config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2048}MB or below`\n    }, __jsx(Upload, {\n      customRequest: () => false,\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      accept: \"video/*\",\n      multiple: false,\n      showUploadList: false,\n      disabled: uploading,\n      beforeUpload: file => this.beforeUpload(file, 'video')\n    }, selectedVideo ? __jsx(FileDoneOutlined, null) : __jsx(VideoCameraAddOutlined, null)))), __jsx(Col, {\n      xs: 24,\n      md: 8\n    }, __jsx(Form.Item, {\n      label: \"Teaser\",\n      className: \"upload-bl\",\n      help: previewTeaser && !removedTeaser && __jsx(\"a\", {\n        \"aria-hidden\": true,\n        onClick: () => this.setState({\n          isShowPreview: true,\n          previewUrl: previewTeaser === null || previewTeaser === void 0 ? void 0 : previewTeaser.url,\n          previewType: 'teaser'\n        })\n      }, (previewTeaser === null || previewTeaser === void 0 ? void 0 : previewTeaser.name) || 'Click here to preview') || selectedTeaser && __jsx(\"a\", null, selectedTeaser.name) || `Teaser is ${config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200}MB or below`\n    }, __jsx(Upload, {\n      customRequest: () => false,\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      accept: \"video/*\",\n      multiple: false,\n      showUploadList: false,\n      disabled: uploading,\n      beforeUpload: file => this.beforeUpload(file, 'teaser')\n    }, selectedTeaser ? __jsx(FileDoneOutlined, null) : __jsx(VideoCameraAddOutlined, null)), (video === null || video === void 0 ? void 0 : video.teaserId) && !removedTeaser && __jsx(Button, {\n      className: \"remove-btn\",\n      type: \"primary\",\n      onClick: () => this.handleRemovefile('teaser')\n    }, __jsx(DeleteOutlined, null)))), __jsx(Col, {\n      xs: 24,\n      md: 8\n    }, __jsx(Form.Item, {\n      className: \"upload-bl\",\n      label: \"Thumbnail\",\n      help: previewThumbnail && !removedThumbnail && __jsx(\"a\", {\n        \"aria-hidden\": true,\n        onClick: () => this.setState({\n          isShowPreview: true,\n          previewUrl: previewThumbnail === null || previewThumbnail === void 0 ? void 0 : previewThumbnail.url,\n          previewType: 'thumbnail'\n        })\n      }, (previewThumbnail === null || previewThumbnail === void 0 ? void 0 : previewThumbnail.name) || 'Click here to preview') || selectedThumbnail && __jsx(\"a\", null, selectedThumbnail.name) || `Thumbnail is ${config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5}MB or below`\n    }, __jsx(Upload, {\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      accept: \"image/*\",\n      multiple: false,\n      showUploadList: false,\n      disabled: uploading,\n      beforeUpload: file => this.beforeUpload(file, 'thumbnail')\n    }, selectedThumbnail ? __jsx(FileDoneOutlined, null) : __jsx(CameraOutlined, null)), (video === null || video === void 0 ? void 0 : video.thumbnailId) && !removedThumbnail && __jsx(Button, {\n      className: \"remove-btn\",\n      type: \"primary\",\n      onClick: () => this.handleRemovefile('thumbnail')\n    }, __jsx(DeleteOutlined, null))))), uploadPercentage ? __jsx(Progress, {\n      percent: Math.round(uploadPercentage)\n    }) : null, __jsx(Form.Item, {\n      wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n        offset: 4\n      })\n    }, __jsx(Button, {\n      className: \"primary\",\n      htmlType: \"submit\",\n      loading: uploading,\n      disabled: uploading\n    }, video ? 'Update' : 'Upload'), __jsx(Button, {\n      className: \"secondary\",\n      onClick: () => Router.back(),\n      disabled: uploading\n    }, \"Back\")), this.previewModal());\n  }\n\n}","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/video/form-upload.tsx"],"names":["PureComponent","Form","Input","InputNumber","Select","Upload","Button","message","Progress","Switch","DatePicker","Row","Col","Avatar","Modal","CameraOutlined","VideoCameraAddOutlined","FileDoneOutlined","DeleteOutlined","performerService","videoService","moment","debounce","Router","VideoPlayer","getGlobalConfig","layout","labelCol","span","wrapperCol","Option","validateMessages","required","FormUploadVideo","previewThumbnail","previewTeaser","previewVideo","selectedThumbnail","selectedVideo","selectedTeaser","isSale","isSchedule","scheduledAt","performers","isShowPreview","previewUrl","previewType","removedTeaser","removedThumbnail","q","performerIds","resp","search","limit","data","setState","e","err","error","state","includes","autoplay","controls","playsinline","fluid","sources","src","type","borderRadius","componentDidMount","video","user","props","thumbnail","teaser","getPerformers","participantIds","_id","handleRemovefile","window","confirm","deleteFile","beforeUpload","file","field","beforeUploadHandler","config","isValid","size","NEXT_PUBLIC_MAX_SIZE_IMAGE","NEXT_PUBLIC_MAX_SIZE_TEASER","NEXT_PUBLIC_MAX_SIZE_VIDEO","render","submit","uploading","uploadPercentage","values","tags","length","map","tag","replace","title","price","description","status","width","bind","p","avatar","name","username","val","currentDate","endOf","url","teaserId","thumbnailId","Math","round","offset","back","previewModal"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  Form,\n  Input,\n  InputNumber,\n  Select,\n  Upload,\n  Button,\n  message,\n  Progress,\n  Switch,\n  DatePicker,\n  Row,\n  Col,\n  Avatar,\n  Modal\n} from 'antd';\nimport { IPerformer, IVideo } from 'src/interfaces/index';\nimport {\n  CameraOutlined, VideoCameraAddOutlined, FileDoneOutlined, DeleteOutlined\n} from '@ant-design/icons';\nimport { performerService, videoService } from '@services/index';\nimport moment from 'moment';\nimport { debounce } from 'lodash';\nimport Router from 'next/router';\nimport { VideoPlayer } from '@components/common';\nimport { getGlobalConfig } from '@services/config';\nimport './video.less';\n\ninterface IProps {\n  user: IPerformer;\n  video?: IVideo;\n  submit: Function;\n  beforeUpload?: Function;\n  uploading?: boolean;\n  uploadPercentage?: number;\n}\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }\n};\n\nconst { Option } = Select;\n\nconst validateMessages = {\n  required: 'This field is required!'\n};\n\nexport class FormUploadVideo extends PureComponent<IProps> {\n  state = {\n    previewThumbnail: null,\n    previewTeaser: null,\n    previewVideo: null,\n    selectedThumbnail: null,\n    selectedVideo: null,\n    selectedTeaser: null,\n    isSale: false,\n    isSchedule: false,\n    scheduledAt: moment(),\n    performers: [],\n    isShowPreview: false,\n    previewUrl: '',\n    previewType: '',\n    removedTeaser: false,\n    removedThumbnail: false\n  };\n\n  componentDidMount() {\n    const { video, user } = this.props;\n    if (video) {\n      this.setState({\n        previewThumbnail: video?.thumbnail,\n        previewVideo: video?.video,\n        previewTeaser: video?.teaser,\n        isSale: video.isSale,\n        isSchedule: video.isSchedule,\n        scheduledAt: video.scheduledAt ? moment(video.scheduledAt) : moment()\n      });\n    }\n    this.getPerformers('', video?.participantIds || [user._id]);\n  }\n\n  async handleRemovefile(type: string) {\n    if (!window.confirm('Confirm to remove file!')) return;\n    const { video } = this.props;\n    try {\n      await videoService.deleteFile(video._id, type);\n      type === 'teaser' && this.setState({ removedTeaser: true });\n      type === 'thumbnail' && this.setState({ removedThumbnail: true });\n    } catch (e) {\n      const err = await e;\n      message.error(err?.message || 'Error occured, please try again later');\n    }\n  }\n\n  getPerformers = debounce(async (q, performerIds) => {\n    try {\n      const resp = await (\n        await performerService.search({\n          q,\n          performerIds: performerIds || '',\n          limit: 500\n        })\n      ).data;\n      const performers = resp.data || [];\n      this.setState({ performers });\n    } catch (e) {\n      const err = await e;\n      message.error(err?.message || 'Error occured');\n    }\n  }, 500);\n\n  previewModal = () => {\n    const {\n      isShowPreview, previewUrl, previewType\n    } = this.state;\n    return (\n      <Modal\n        width={767}\n        footer={null}\n        onOk={() => this.setState({ isShowPreview: false })}\n        onCancel={() => this.setState({ isShowPreview: false })}\n        visible={isShowPreview}\n        destroyOnClose\n      >\n        {['teaser', 'video'].includes(previewType) && (\n          <VideoPlayer\n            {...{\n              autoplay: true,\n              controls: true,\n              playsinline: true,\n              fluid: true,\n              sources: [\n                {\n                  src: previewUrl,\n                  type: 'video/mp4'\n                }\n              ]\n            }}\n          />\n        )}\n        {previewType === 'thumbnail' && (\n          <img\n            src={previewUrl}\n            alt=\"thumbnail\"\n            width=\"100%\"\n            style={{ borderRadius: 5 }}\n          />\n        )}\n      </Modal>\n    );\n  };\n\n  beforeUpload(file: File, field: string) {\n    const { beforeUpload: beforeUploadHandler } = this.props;\n    const config = getGlobalConfig();\n    if (field === 'thumbnail') {\n      const isValid = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5);\n      if (!isValid) {\n        message.error(`File is too large please provide an file ${config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5}MB or below`);\n        return isValid;\n      }\n      this.setState({ selectedThumbnail: file });\n    }\n    if (field === 'teaser') {\n      const isValid = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200);\n      if (!isValid) {\n        message.error(`File is too large please provide an file ${config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200}MB or below`);\n        return isValid;\n      }\n      this.setState({ selectedTeaser: file });\n    }\n    if (field === 'video') {\n      const isValid = file.size / 1024 / 1024 < (config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2000);\n      if (!isValid) {\n        message.error(`File is too large please provide an file ${config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2000}MB or below`);\n        return isValid;\n      }\n      this.setState({ selectedVideo: file });\n    }\n    return beforeUploadHandler(file, field);\n  }\n\n  render() {\n    const {\n      video, submit, uploading, uploadPercentage, user\n    } = this.props;\n    const {\n      previewThumbnail,\n      previewTeaser,\n      previewVideo,\n      performers,\n      isSale,\n      isSchedule,\n      scheduledAt,\n      selectedThumbnail,\n      selectedTeaser,\n      selectedVideo,\n      removedTeaser,\n      removedThumbnail\n    } = this.state;\n    const config = getGlobalConfig();\n\n    return (\n      <Form\n        {...layout}\n        onFinish={(values) => {\n          const data = values;\n          if (isSchedule) {\n            data.scheduledAt = scheduledAt;\n          }\n          if (values.tags && values.tags.length) {\n            data.tags = values.tags.map((tag) => tag.replace(/[^a-zA-Z0-9 ]/g, '_'));\n          }\n          submit(data);\n        }}\n        onFinishFailed={() => message.error('Please complete the required fields')}\n        name=\"form-upload\"\n        validateMessages={validateMessages}\n        initialValues={\n            video || {\n              title: '',\n              price: 9.99,\n              description: '',\n              tags: [],\n              isSale: false,\n              participantIds: [user._id],\n              isSchedule: false,\n              status: 'active'\n            }\n          }\n        scrollToFirstError\n        className=\"account-form\"\n      >\n        <Row>\n          <Col md={24} xs={24}>\n            <Form.Item\n              label=\"Title\"\n              name=\"title\"\n              rules={[\n                { required: true, message: 'Please input title of video!' }\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col md={24} xs={24}>\n            <Form.Item label=\"Participants\" name=\"participantIds\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: '100%' }}\n                showSearch\n                placeholder=\"Search performers here\"\n                optionFilterProp=\"children\"\n                onSearch={this.getPerformers.bind(this)}\n                loading={uploading}\n                defaultValue={video?.participantIds || []}\n              >\n                {performers\n                    && performers.length > 0\n                    && performers.map((p) => (\n                      <Option key={p._id} value={p._id}>\n                        <Avatar src={p?.avatar || '/static/no-avatar.png'} />\n                        {' '}\n                        {p?.name || p?.username || 'N/A'}\n                      </Option>\n                    ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={12} xs={24}>\n            <Form.Item label=\"Tags\" name=\"tags\">\n              <Select\n                mode=\"tags\"\n                style={{ width: '100%' }}\n                size=\"middle\"\n                showArrow={false}\n                defaultValue={video?.tags || []}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={12} xs={24}>\n            <Form.Item\n              name=\"status\"\n              label=\"Status\"\n              rules={[{ required: true, message: 'Please select status!' }]}\n            >\n              <Select>\n                <Select.Option key=\"active\" value=\"active\">\n                  Active\n                </Select.Option>\n                <Select.Option key=\"inactive\" value=\"inactive\">\n                  Inactive\n                </Select.Option>\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={12} xs={24}>\n            <Form.Item name=\"isSale\" label=\"For sale?\">\n              <Switch\n                checkedChildren=\"Pay per view\"\n                unCheckedChildren=\"Subscribe to view\"\n                checked={isSale}\n                onChange={(val) => this.setState({ isSale: val })}\n              />\n            </Form.Item>\n            {isSale && (\n            <Form.Item name=\"price\" label=\"Price\">\n              <InputNumber style={{ width: '100%' }} min={1} />\n            </Form.Item>\n            )}\n          </Col>\n          <Col md={12} xs={24}>\n            <Form.Item name=\"isSchedule\" label=\"Scheduled?\">\n              <Switch\n                checkedChildren=\"Scheduled\"\n                unCheckedChildren=\"Not scheduled\"\n                checked={isSchedule}\n                onChange={(val) => this.setState({ isSchedule: val })}\n              />\n            </Form.Item>\n            {isSchedule && (\n            <Form.Item label=\"Scheduled for\">\n              <DatePicker\n                style={{ width: '100%' }}\n                disabledDate={(currentDate) => currentDate && currentDate < moment().endOf('day')}\n                defaultValue={scheduledAt}\n                onChange={(val) => this.setState({ scheduledAt: val })}\n              />\n            </Form.Item>\n            )}\n          </Col>\n          <Col span={24}>\n            <Form.Item name=\"description\" label=\"Description\">\n              <Input.TextArea rows={3} />\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={8}>\n            <Form.Item\n              label=\"Video\"\n              className=\"upload-bl\"\n              help={\n                  (previewVideo && (\n                  <a\n                    aria-hidden\n                    onClick={() => this.setState({\n                      isShowPreview: true, previewUrl: previewVideo?.url, previewType: 'video'\n                    })}\n                  >\n                    {previewVideo?.name || 'Click here to preview'}\n                  </a>\n                  ))\n                  || (selectedVideo && <a>{selectedVideo.name}</a>)\n                  || `Video file is ${config.NEXT_PUBLIC_MAX_SIZE_VIDEO || 2048}MB or below`\n                }\n            >\n              <Upload\n                customRequest={() => false}\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                accept=\"video/*\"\n                multiple={false}\n                showUploadList={false}\n                disabled={uploading}\n                beforeUpload={(file) => this.beforeUpload(file, 'video')}\n              >\n                {selectedVideo ? (\n                  <FileDoneOutlined />\n                ) : (\n                  <VideoCameraAddOutlined />\n                )}\n              </Upload>\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={8}>\n            <Form.Item\n              label=\"Teaser\"\n              className=\"upload-bl\"\n              help={\n                (previewTeaser && !removedTeaser && (\n                  <a\n                    aria-hidden\n                    onClick={() => this.setState({\n                      isShowPreview: true, previewUrl: previewTeaser?.url, previewType: 'teaser'\n                    })}\n                  >\n                    {previewTeaser?.name || 'Click here to preview'}\n                  </a>\n                ))\n                  || (selectedTeaser && <a>{selectedTeaser.name}</a>)\n                  || `Teaser is ${config.NEXT_PUBLIC_MAX_SIZE_TEASER || 200}MB or below`\n                }\n            >\n              <Upload\n                customRequest={() => false}\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                accept=\"video/*\"\n                multiple={false}\n                showUploadList={false}\n                disabled={uploading}\n                beforeUpload={(file) => this.beforeUpload(file, 'teaser')}\n              >\n                {selectedTeaser ? (\n                  <FileDoneOutlined />\n                ) : (\n                  <VideoCameraAddOutlined />\n                )}\n              </Upload>\n              {video?.teaserId && !removedTeaser && <Button className=\"remove-btn\" type=\"primary\" onClick={() => this.handleRemovefile('teaser')}><DeleteOutlined /></Button>}\n            </Form.Item>\n          </Col>\n          <Col xs={24} md={8}>\n            <Form.Item\n              className=\"upload-bl\"\n              label=\"Thumbnail\"\n              help={\n                (previewThumbnail && !removedThumbnail && (\n                  <a\n                    aria-hidden\n                    onClick={() => this.setState({\n                      isShowPreview: true, previewUrl: previewThumbnail?.url, previewType: 'thumbnail'\n                    })}\n                  >\n                    {previewThumbnail?.name || 'Click here to preview'}\n                  </a>\n                ))\n                  || (selectedThumbnail && <a>{selectedThumbnail.name}</a>)\n                  || `Thumbnail is ${config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5}MB or below`\n                }\n            >\n              <Upload\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                accept=\"image/*\"\n                multiple={false}\n                showUploadList={false}\n                disabled={uploading}\n                beforeUpload={(file) => this.beforeUpload(file, 'thumbnail')}\n              >\n                {selectedThumbnail ? (\n                  <FileDoneOutlined />\n                ) : (\n                  <CameraOutlined />\n                )}\n              </Upload>\n              {video?.thumbnailId && !removedThumbnail && <Button className=\"remove-btn\" type=\"primary\" onClick={() => this.handleRemovefile('thumbnail')}><DeleteOutlined /></Button>}\n            </Form.Item>\n          </Col>\n        </Row>\n        {uploadPercentage ? (\n          <Progress percent={Math.round(uploadPercentage)} />\n        ) : null}\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\n          <Button\n            className=\"primary\"\n            htmlType=\"submit\"\n            loading={uploading}\n            disabled={uploading}\n          >\n            {video ? 'Update' : 'Upload'}\n          </Button>\n          <Button\n            className=\"secondary\"\n            onClick={() => Router.back()}\n            disabled={uploading}\n          >\n            Back\n          </Button>\n        </Form.Item>\n        {this.previewModal()}\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}