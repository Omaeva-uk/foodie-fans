{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { Spin } from 'antd';\nimport CommentItem from '@components/comment/comment-item';\nexport var ListComments = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ListComments, _PureComponent);\n\n  var _super = _createSuper(ListComments);\n\n  function ListComments() {\n    _classCallCheck(this, ListComments);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ListComments, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          comments = _this$props.comments,\n          requesting = _this$props.requesting,\n          user = _this$props.user,\n          onDelete = _this$props.onDelete,\n          canReply = _this$props.canReply;\n      return __jsx(\"div\", {\n        className: \"cmt-list\"\n      }, comments.map(function (comment) {\n        return __jsx(CommentItem, {\n          canReply: canReply,\n          key: comment._id,\n          item: comment,\n          user: user,\n          onDelete: onDelete\n        });\n      }), requesting && __jsx(\"div\", {\n        className: \"text-center\",\n        style: {\n          margin: 20\n        }\n      }, __jsx(Spin, null)), !requesting && !comments.length && __jsx(\"div\", {\n        className: \"text-center\",\n        style: {\n          padding: '15px 5px'\n        }\n      }, \"Be the first to comment\"));\n    }\n  }]);\n\n  return ListComments;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/comment/list-comments.tsx"],"names":["PureComponent","Spin","CommentItem","ListComments","props","comments","requesting","user","onDelete","canReply","map","comment","_id","margin","length","padding"],"mappings":";;;;;;;;;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAYA,WAAaC,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS;AACP,wBAEI,KAAKC,KAFT;AAAA,UACEC,QADF,eACEA,QADF;AAAA,UACYC,UADZ,eACYA,UADZ;AAAA,UACwBC,IADxB,eACwBA,IADxB;AAAA,UAC8BC,QAD9B,eAC8BA,QAD9B;AAAA,UACwCC,QADxC,eACwCA,QADxC;AAIA,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGJ,QAAQ,CAACK,GAAT,CAAa,UAACC,OAAD;AAAA,eAAuB,MAAC,WAAD;AAAa,UAAA,QAAQ,EAAEF,QAAvB;AAAiC,UAAA,GAAG,EAAEE,OAAO,CAACC,GAA9C;AAAmD,UAAA,IAAI,EAAED,OAAzD;AAAkE,UAAA,IAAI,EAAEJ,IAAxE;AAA8E,UAAA,QAAQ,EAAEC;AAAxF,UAAvB;AAAA,OAAb,CADH,EAEGF,UAAU,IAAI;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE;AAAEO,UAAAA,MAAM,EAAE;AAAV;AAApC,SAAoD,MAAC,IAAD,OAApD,CAFjB,EAGG,CAACP,UAAD,IAAe,CAACD,QAAQ,CAACS,MAAzB,IAAmC;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAApC,mCAHtC,CADF;AAOD;AAbH;;AAAA;AAAA,EAAkCf,aAAlC","sourcesContent":["import { PureComponent } from 'react';\nimport { Spin } from 'antd';\nimport CommentItem from '@components/comment/comment-item';\nimport { IComment, IUser } from 'src/interfaces/index';\n\ninterface IProps {\n  comments: IComment[];\n  total?: number;\n  requesting: boolean;\n  onDelete?: Function;\n  user?: IUser;\n  canReply?: boolean\n}\n\nexport class ListComments extends PureComponent<IProps> {\n  render() {\n    const {\n      comments, requesting, user, onDelete, canReply\n    } = this.props;\n\n    return (\n      <div className=\"cmt-list\">\n        {comments.map((comment: IComment) => <CommentItem canReply={canReply} key={comment._id} item={comment} user={user} onDelete={onDelete} />)}\n        {requesting && <div className=\"text-center\" style={{ margin: 20 }}><Spin /></div>}\n        {!requesting && !comments.length && <div className=\"text-center\" style={{ padding: '15px 5px' }}>Be the first to comment</div>}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}