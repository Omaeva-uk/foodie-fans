{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\nimport { Form, Row, Col, message, Image } from 'antd';\nimport { ImageUpload } from '@components/file';\nimport { performerService, authService } from '@services/index';\nimport './performer.less';\nvar layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nexport var PerformerVerificationForm = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerVerificationForm, _PureComponent);\n\n  var _super = _createSuper(PerformerVerificationForm);\n\n  function PerformerVerificationForm() {\n    var _this;\n\n    _classCallCheck(this, PerformerVerificationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"idVerificationFileId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"documentVerificationFileId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      idImage: '',\n      documentImage: ''\n    });\n\n    return _this;\n  }\n\n  _createClass(PerformerVerificationForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = this.props.user;\n\n      if (user.documentVerification) {\n        var _user$documentVerific, _user$documentVerific2;\n\n        this.documentVerificationFileId = user === null || user === void 0 ? void 0 : (_user$documentVerific = user.documentVerification) === null || _user$documentVerific === void 0 ? void 0 : _user$documentVerific._id;\n        this.setState({\n          documentImage: user === null || user === void 0 ? void 0 : (_user$documentVerific2 = user.documentVerification) === null || _user$documentVerific2 === void 0 ? void 0 : _user$documentVerific2.url\n        });\n      }\n\n      if (user.idVerification) {\n        var _user$idVerification, _user$idVerification2;\n\n        this.idVerificationFileId = user === null || user === void 0 ? void 0 : (_user$idVerification = user.idVerification) === null || _user$idVerification === void 0 ? void 0 : _user$idVerification._id;\n        this.setState({\n          idImage: user === null || user === void 0 ? void 0 : (_user$idVerification2 = user.idVerification) === null || _user$idVerification2 === void 0 ? void 0 : _user$idVerification2.url\n        });\n      }\n    }\n  }, {\n    key: \"onFileUploaded\",\n    value: function onFileUploaded(type, file) {\n      if (file && type === 'idFile') {\n        var _file$response, _file$response$data, _file$response2;\n\n        this.idVerificationFileId = file === null || file === void 0 ? void 0 : (_file$response = file.response) === null || _file$response === void 0 ? void 0 : (_file$response$data = _file$response.data) === null || _file$response$data === void 0 ? void 0 : _file$response$data._id;\n        this.setState({\n          idImage: file === null || file === void 0 ? void 0 : (_file$response2 = file.response) === null || _file$response2 === void 0 ? void 0 : _file$response2.data.url\n        });\n      }\n\n      if (file && type === 'documentFile') {\n        var _file$response3, _file$response3$data, _file$response4;\n\n        this.documentVerificationFileId = file === null || file === void 0 ? void 0 : (_file$response3 = file.response) === null || _file$response3 === void 0 ? void 0 : (_file$response3$data = _file$response3.data) === null || _file$response3$data === void 0 ? void 0 : _file$response3$data._id;\n        this.setState({\n          documentImage: file === null || file === void 0 ? void 0 : (_file$response4 = file.response) === null || _file$response4 === void 0 ? void 0 : _file$response4.data.url\n        });\n      }\n\n      message.success('Photo has been uploaded!');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          idImage = _this$state.idImage,\n          documentImage = _this$state.documentImage;\n      var documentUploadUrl = performerService.getDocumentUploadUrl();\n      var headers = {\n        authorization: authService.getToken()\n      };\n      return __jsx(Form, _extends({}, layout, {\n        name: \"nest-messages\",\n        labelAlign: \"left\",\n        className: \"account-form\"\n      }), __jsx(Row, null, __jsx(Col, {\n        xs: 24,\n        sm: 24,\n        md: 12\n      }, __jsx(Form.Item, {\n        labelCol: {\n          span: 24\n        },\n        label: \"Your government issued ID\",\n        className: \"model-photo-verification\"\n      }, __jsx(\"div\", {\n        className: \"document-upload\"\n      }, __jsx(ImageUpload, {\n        accept: \"image/*\",\n        headers: headers,\n        uploadUrl: \"\".concat(documentUploadUrl, \"/idVerificationId\"),\n        onUploaded: this.onFileUploaded.bind(this, 'idFile')\n      }), idImage ? __jsx(Image, {\n        alt: \"id-img\",\n        src: idImage,\n        style: {\n          height: '150px'\n        }\n      }) : __jsx(\"img\", {\n        src: \"/static/front-id.png\",\n        height: \"150px\",\n        alt: \"id-img\"\n      })), __jsx(\"div\", {\n        className: \"ant-form-item-explain\",\n        style: {\n          textAlign: 'left'\n        }\n      }, __jsx(\"ul\", {\n        className: \"list-issued-id\"\n      }, __jsx(\"li\", null, \"Government-issued ID card\"), __jsx(\"li\", null, \"National Id card\"), __jsx(\"li\", null, \"Passport\"), __jsx(\"li\", null, \"Driving license\"))))), __jsx(Col, {\n        xs: 24,\n        sm: 24,\n        md: 12\n      }, __jsx(Form.Item, {\n        labelCol: {\n          span: 24\n        },\n        label: \"Your selfie with your ID and handwritten note\",\n        className: \"model-photo-verification\"\n      }, __jsx(\"div\", {\n        className: \"document-upload\"\n      }, __jsx(ImageUpload, {\n        accept: \"image/*\",\n        headers: headers,\n        uploadUrl: \"\".concat(documentUploadUrl, \"/documentVerificationId\"),\n        onUploaded: this.onFileUploaded.bind(this, 'documentFile')\n      }), documentImage ? __jsx(Image, {\n        alt: \"id-img\",\n        src: documentImage,\n        style: {\n          height: '150px'\n        }\n      }) : __jsx(\"img\", {\n        src: \"/static/holding-id.jpg\",\n        height: \"150px\",\n        alt: \"holding-id\"\n      })), __jsx(\"div\", {\n        className: \"ant-form-item-explain\",\n        style: {\n          textAlign: 'left'\n        }\n      }, __jsx(\"ul\", {\n        className: \"list-issued-id\"\n      }, __jsx(\"li\", null, \"On a blank piece of white paper write your name, today's date and our website address\", ' ', window.location.hash), __jsx(\"li\", null, \"Hold your paper and your ID so we can clearly see hoth\"), __jsx(\"li\", null, \"Take a selfie of you, your ID and your handwritten note. All three elements (you, your ID and your writting) must be clearly visible without copying or editing\")))))));\n    }\n  }]);\n\n  return PerformerVerificationForm;\n}(PureComponent);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/verificationForm.tsx"],"names":["PureComponent","Form","Row","Col","message","Image","ImageUpload","performerService","authService","layout","labelCol","span","wrapperCol","PerformerVerificationForm","idImage","documentImage","user","props","documentVerification","documentVerificationFileId","_id","setState","url","idVerification","idVerificationFileId","type","file","response","data","success","state","documentUploadUrl","getDocumentUploadUrl","headers","authorization","getToken","onFileUploaded","bind","height","textAlign","window","location","hash"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  Form, Button, Row, Col, message, Image\n} from 'antd';\nimport { IPerformer } from 'src/interfaces';\nimport { ImageUpload } from '@components/file';\nimport { performerService, authService } from '@services/index';\nimport './performer.less';\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }\n};\n\ninterface IProps {\n  user: IPerformer;\n}\n\nexport class PerformerVerificationForm extends PureComponent<IProps> {\n  idVerificationFileId: string;\n\n  documentVerificationFileId: string;\n\n  state = {\n    idImage: '',\n    documentImage: ''\n  }\n\n  componentDidMount() {\n    const { user } = this.props;\n    if (user.documentVerification) {\n      this.documentVerificationFileId = user?.documentVerification?._id;\n      this.setState({ documentImage: user?.documentVerification?.url });\n    }\n    if (user.idVerification) {\n      this.idVerificationFileId = user?.idVerification?._id;\n      this.setState({ idImage: user?.idVerification?.url });\n    }\n  }\n\n  onFileUploaded(type, file) {\n    if (file && type === 'idFile') {\n      this.idVerificationFileId = file?.response?.data?._id;\n      this.setState({ idImage: file?.response?.data.url });\n    }\n    if (file && type === 'documentFile') {\n      this.documentVerificationFileId = file?.response?.data?._id;\n      this.setState({ documentImage: file?.response?.data.url });\n    }\n    message.success('Photo has been uploaded!');\n  }\n\n  render() {\n    const {\n      idImage, documentImage\n    } = this.state;\n    const documentUploadUrl = performerService.getDocumentUploadUrl();\n    const headers = {\n      authorization: authService.getToken()\n    };\n    return (\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        labelAlign=\"left\"\n        className=\"account-form\"\n      >\n        <Row>\n          <Col xs={24} sm={24} md={12}>\n            <Form.Item\n              labelCol={{ span: 24 }}\n              label=\"Your government issued ID\"\n              className=\"model-photo-verification\"\n            >\n              <div className=\"document-upload\">\n                <ImageUpload accept=\"image/*\" headers={headers} uploadUrl={`${documentUploadUrl}/idVerificationId`} onUploaded={this.onFileUploaded.bind(this, 'idFile')} />\n                {idImage ? (\n                  <Image alt=\"id-img\" src={idImage} style={{ height: '150px' }} />\n                ) : <img src=\"/static/front-id.png\" height=\"150px\" alt=\"id-img\" />}\n              </div>\n              <div className=\"ant-form-item-explain\" style={{ textAlign: 'left' }}>\n                <ul className=\"list-issued-id\">\n                  <li>Government-issued ID card</li>\n                  <li>National Id card</li>\n                  <li>Passport</li>\n                  <li>Driving license</li>\n                </ul>\n              </div>\n            </Form.Item>\n          </Col>\n          <Col xs={24} sm={24} md={12}>\n            <Form.Item\n              labelCol={{ span: 24 }}\n              label=\"Your selfie with your ID and handwritten note\"\n              className=\"model-photo-verification\"\n            >\n              <div className=\"document-upload\">\n                <ImageUpload accept=\"image/*\" headers={headers} uploadUrl={`${documentUploadUrl}/documentVerificationId`} onUploaded={this.onFileUploaded.bind(this, 'documentFile')} />\n                {documentImage ? (\n                  <Image alt=\"id-img\" src={documentImage} style={{ height: '150px' }} />\n                ) : <img src=\"/static/holding-id.jpg\" height=\"150px\" alt=\"holding-id\" />}\n              </div>\n              <div className=\"ant-form-item-explain\" style={{ textAlign: 'left' }}>\n                <ul className=\"list-issued-id\">\n                  <li>\n                    On a blank piece of white paper write your name, today&apos;s date and our website address\n                    {' '}\n                    {window.location.hash}\n                  </li>\n                  <li>Hold your paper and your ID so we can clearly see hoth</li>\n                  <li>Take a selfie of you, your ID and your handwritten note. All three elements (you, your ID and your writting) must be clearly visible without copying or editing</li>\n                </ul>\n              </div>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}