{"ast":null,"code":"import { galleryService } from 'src/services';\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { getGalleries, getGalleriesSuccess, getGalleriesFail, moreGalleries, moreGalleriesFail, moreGalleriesSuccess, getRelatedGalleries, getRelatedGalleriesFail, getRelatedGalleriesSuccess } from './actions';\nconst gallerySagas = [{\n  on: getGalleries,\n\n  *worker(data) {\n    try {\n      const resp = yield galleryService.userSearch(data.payload);\n      yield put(getGalleriesSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(getGalleriesFail(error));\n    }\n  }\n\n}, {\n  on: moreGalleries,\n\n  *worker(data) {\n    try {\n      const resp = yield galleryService.userSearch(data.payload);\n      yield put(moreGalleriesSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(moreGalleriesFail(error));\n    }\n  }\n\n}, {\n  on: getRelatedGalleries,\n\n  *worker(data) {\n    try {\n      const resp = yield galleryService.userSearch(data.payload);\n      yield put(getRelatedGalleriesSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(getRelatedGalleriesFail(error));\n    }\n  }\n\n}];\nexport default flatten([createSagas(gallerySagas)]);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/gallery/sagas.ts"],"names":["galleryService","flatten","put","createSagas","getGalleries","getGalleriesSuccess","getGalleriesFail","moreGalleries","moreGalleriesFail","moreGalleriesSuccess","getRelatedGalleries","getRelatedGalleriesFail","getRelatedGalleriesSuccess","gallerySagas","on","worker","data","resp","userSearch","payload","e","error","Promise","resolve"],"mappings":"AAAA,SAASA,cAAT,QAA+B,cAA/B;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,SACEC,YADF,EACgBC,mBADhB,EACqCC,gBADrC,EAEEC,aAFF,EAEiBC,iBAFjB,EAEoCC,oBAFpC,EAGEC,mBAHF,EAGuBC,uBAHvB,EAGgDC,0BAHhD,QAIO,WAJP;AAMA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAEV,YADN;;AAEE,GAAEW,MAAF,CAASC,IAAT,EAAkC;AAChC,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMjB,cAAc,CAACkB,UAAf,CAA0BF,IAAI,CAACG,OAA/B,CAAnB;AACA,YAAMjB,GAAG,CAACG,mBAAmB,CAACY,IAAI,CAACD,IAAN,CAApB,CAAT;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACV,YAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgBH,CAAhB,CAApB;AACA,YAAMlB,GAAG,CAACI,gBAAgB,CAACe,KAAD,CAAjB,CAAT;AACD;AACF;;AAVH,CADmB,EAanB;AACEP,EAAAA,EAAE,EAAEP,aADN;;AAEE,GAAEQ,MAAF,CAASC,IAAT,EAAkC;AAChC,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMjB,cAAc,CAACkB,UAAf,CAA0BF,IAAI,CAACG,OAA/B,CAAnB;AACA,YAAMjB,GAAG,CAACO,oBAAoB,CAACQ,IAAI,CAACD,IAAN,CAArB,CAAT;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACV,YAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgBH,CAAhB,CAApB;AACA,YAAMlB,GAAG,CAACM,iBAAiB,CAACa,KAAD,CAAlB,CAAT;AACD;AACF;;AAVH,CAbmB,EAyBnB;AACEP,EAAAA,EAAE,EAAEJ,mBADN;;AAEE,GAAEK,MAAF,CAASC,IAAT,EAAkC;AAChC,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMjB,cAAc,CAACkB,UAAf,CAA0BF,IAAI,CAACG,OAA/B,CAAnB;AACA,YAAMjB,GAAG,CAACU,0BAA0B,CAACK,IAAI,CAACD,IAAN,CAA3B,CAAT;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACV,YAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgBH,CAAhB,CAApB;AACA,YAAMlB,GAAG,CAACS,uBAAuB,CAACU,KAAD,CAAxB,CAAT;AACD;AACF;;AAVH,CAzBmB,CAArB;AAuCA,eAAepB,OAAO,CAAC,CAACE,WAAW,CAACU,YAAD,CAAZ,CAAD,CAAtB","sourcesContent":["import { galleryService } from 'src/services';\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  getGalleries, getGalleriesSuccess, getGalleriesFail,\n  moreGalleries, moreGalleriesFail, moreGalleriesSuccess,\n  getRelatedGalleries, getRelatedGalleriesFail, getRelatedGalleriesSuccess\n} from './actions';\n\nconst gallerySagas = [\n  {\n    on: getGalleries,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield galleryService.userSearch(data.payload);\n        yield put(getGalleriesSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getGalleriesFail(error));\n      }\n    }\n  },\n  {\n    on: moreGalleries,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield galleryService.userSearch(data.payload);\n        yield put(moreGalleriesSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(moreGalleriesFail(error));\n      }\n    }\n  },\n  {\n    on: getRelatedGalleries,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield galleryService.userSearch(data.payload);\n        yield put(getRelatedGalleriesSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getRelatedGalleriesFail(error));\n      }\n    }\n  }\n];\n\nexport default flatten([createSagas(gallerySagas)]);\n"]},"metadata":{},"sourceType":"module"}