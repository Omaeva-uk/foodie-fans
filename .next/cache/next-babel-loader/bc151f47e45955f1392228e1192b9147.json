{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { galleryService } from 'src/services';\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { getGalleries, getGalleriesSuccess, getGalleriesFail, moreGalleries, moreGalleriesFail, moreGalleriesSuccess, getRelatedGalleries, getRelatedGalleriesFail, getRelatedGalleriesSuccess } from './actions';\nvar gallerySagas = [{\n  on: getGalleries,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return galleryService.userSearch(data.payload);\n\n          case 3:\n            resp = _context.sent;\n            _context.next = 6;\n            return put(getGalleriesSuccess(resp.data));\n\n          case 6:\n            _context.next = 15;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            _context.next = 12;\n            return Promise.resolve(_context.t0);\n\n          case 12:\n            error = _context.sent;\n            _context.next = 15;\n            return put(getGalleriesFail(error));\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}, {\n  on: moreGalleries,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return galleryService.userSearch(data.payload);\n\n          case 3:\n            resp = _context2.sent;\n            _context2.next = 6;\n            return put(moreGalleriesSuccess(resp.data));\n\n          case 6:\n            _context2.next = 15;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.next = 12;\n            return Promise.resolve(_context2.t0);\n\n          case 12:\n            error = _context2.sent;\n            _context2.next = 15;\n            return put(moreGalleriesFail(error));\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}, {\n  on: getRelatedGalleries,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return galleryService.userSearch(data.payload);\n\n          case 3:\n            resp = _context3.sent;\n            _context3.next = 6;\n            return put(getRelatedGalleriesSuccess(resp.data));\n\n          case 6:\n            _context3.next = 15;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            _context3.next = 12;\n            return Promise.resolve(_context3.t0);\n\n          case 12:\n            error = _context3.sent;\n            _context3.next = 15;\n            return put(getRelatedGalleriesFail(error));\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}];\nexport default flatten([createSagas(gallerySagas)]);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/gallery/sagas.ts"],"names":["galleryService","flatten","put","createSagas","getGalleries","getGalleriesSuccess","getGalleriesFail","moreGalleries","moreGalleriesFail","moreGalleriesSuccess","getRelatedGalleries","getRelatedGalleriesFail","getRelatedGalleriesSuccess","gallerySagas","on","worker","data","userSearch","payload","resp","Promise","resolve","error"],"mappings":";AAAA,SAASA,cAAT,QAA+B,cAA/B;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,SACEC,YADF,EACgBC,mBADhB,EACqCC,gBADrC,EAEEC,aAFF,EAEiBC,iBAFjB,EAEoCC,oBAFpC,EAGEC,mBAHF,EAGuBC,uBAHvB,EAGgDC,0BAHhD,QAIO,WAJP;AAMA,IAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAEV,YADN;AAEIW,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMhB,cAAc,CAACiB,UAAf,CAA0BD,IAAI,CAACE,OAA/B,CAAN;;AAJnB;AAIYC,YAAAA,IAJZ;AAAA;AAKM,mBAAMjB,GAAG,CAACG,mBAAmB,CAACc,IAAI,CAACH,IAAN,CAApB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMI,OAAO,CAACC,OAAR,aAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAMpB,GAAG,CAACI,gBAAgB,CAACgB,KAAD,CAAjB,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADmB,EAanB;AACER,EAAAA,EAAE,EAAEP,aADN;AAEIQ,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMhB,cAAc,CAACiB,UAAf,CAA0BD,IAAI,CAACE,OAA/B,CAAN;;AAJnB;AAIYC,YAAAA,IAJZ;AAAA;AAKM,mBAAMjB,GAAG,CAACO,oBAAoB,CAACU,IAAI,CAACH,IAAN,CAArB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMI,OAAO,CAACC,OAAR,cAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAMpB,GAAG,CAACM,iBAAiB,CAACc,KAAD,CAAlB,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAbmB,EAyBnB;AACER,EAAAA,EAAE,EAAEJ,mBADN;AAEIK,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMhB,cAAc,CAACiB,UAAf,CAA0BD,IAAI,CAACE,OAA/B,CAAN;;AAJnB;AAIYC,YAAAA,IAJZ;AAAA;AAKM,mBAAMjB,GAAG,CAACU,0BAA0B,CAACO,IAAI,CAACH,IAAN,CAA3B,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMI,OAAO,CAACC,OAAR,cAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAMpB,GAAG,CAACS,uBAAuB,CAACW,KAAD,CAAxB,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAzBmB,CAArB;AAuCA,eAAerB,OAAO,CAAC,CAACE,WAAW,CAACU,YAAD,CAAZ,CAAD,CAAtB","sourcesContent":["import { galleryService } from 'src/services';\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  getGalleries, getGalleriesSuccess, getGalleriesFail,\n  moreGalleries, moreGalleriesFail, moreGalleriesSuccess,\n  getRelatedGalleries, getRelatedGalleriesFail, getRelatedGalleriesSuccess\n} from './actions';\n\nconst gallerySagas = [\n  {\n    on: getGalleries,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield galleryService.userSearch(data.payload);\n        yield put(getGalleriesSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getGalleriesFail(error));\n      }\n    }\n  },\n  {\n    on: moreGalleries,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield galleryService.userSearch(data.payload);\n        yield put(moreGalleriesSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(moreGalleriesFail(error));\n      }\n    }\n  },\n  {\n    on: getRelatedGalleries,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield galleryService.userSearch(data.payload);\n        yield put(getRelatedGalleriesSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getRelatedGalleriesFail(error));\n      }\n    }\n  }\n];\n\nexport default flatten([createSagas(gallerySagas)]);\n"]},"metadata":{},"sourceType":"module"}