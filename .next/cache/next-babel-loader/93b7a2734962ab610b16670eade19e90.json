{"ast":null,"code":"import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { productService } from '@services/index';\nimport { listProducts, listProductsFail, listProductsSuccess, moreProductFail, moreProductSuccess, moreProduct } from './actions';\nconst productSagas = [{\n  on: listProducts,\n\n  *worker(data) {\n    try {\n      const resp = yield productService.userSearch(data.payload);\n      yield put(listProductsSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(listProductsFail(error));\n    }\n  }\n\n}, {\n  on: moreProduct,\n\n  *worker(data) {\n    try {\n      const resp = yield productService.userSearch(data.payload);\n      yield put(moreProductSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(moreProductFail(error));\n    }\n  }\n\n}];\nexport default flatten([createSagas(productSagas)]);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/product/sagas.ts"],"names":["flatten","put","createSagas","productService","listProducts","listProductsFail","listProductsSuccess","moreProductFail","moreProductSuccess","moreProduct","productSagas","on","worker","data","resp","userSearch","payload","e","error","Promise","resolve"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AAEA,SACEC,YADF,EACgBC,gBADhB,EACkCC,mBADlC,EACuDC,eADvD,EACwEC,kBADxE,EAC4FC,WAD5F,QAEO,WAFP;AAIA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAEP,YADN;;AAEE,GAAEQ,MAAF,CAASC,IAAT,EAAkC;AAChC,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMX,cAAc,CAACY,UAAf,CAA0BF,IAAI,CAACG,OAA/B,CAAnB;AACA,YAAMf,GAAG,CAACK,mBAAmB,CAACQ,IAAI,CAACD,IAAN,CAApB,CAAT;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACV,YAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgBH,CAAhB,CAApB;AACA,YAAMhB,GAAG,CAACI,gBAAgB,CAACa,KAAD,CAAjB,CAAT;AACD;AACF;;AAVH,CADmB,EAanB;AACEP,EAAAA,EAAE,EAAEF,WADN;;AAEE,GAAEG,MAAF,CAASC,IAAT,EAAkC;AAChC,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMX,cAAc,CAACY,UAAf,CAA0BF,IAAI,CAACG,OAA/B,CAAnB;AACA,YAAMf,GAAG,CAACO,kBAAkB,CAACM,IAAI,CAACD,IAAN,CAAnB,CAAT;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACV,YAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgBH,CAAhB,CAApB;AACA,YAAMhB,GAAG,CAACM,eAAe,CAACW,KAAD,CAAhB,CAAT;AACD;AACF;;AAVH,CAbmB,CAArB;AA2BA,eAAelB,OAAO,CAAC,CAACE,WAAW,CAACQ,YAAD,CAAZ,CAAD,CAAtB","sourcesContent":["import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { productService } from '@services/index';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  listProducts, listProductsFail, listProductsSuccess, moreProductFail, moreProductSuccess, moreProduct\n} from './actions';\n\nconst productSagas = [\n  {\n    on: listProducts,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield productService.userSearch(data.payload);\n        yield put(listProductsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(listProductsFail(error));\n      }\n    }\n  },\n  {\n    on: moreProduct,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield productService.userSearch(data.payload);\n        yield put(moreProductSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(moreProductFail(error));\n      }\n    }\n  }\n];\n\nexport default flatten([createSagas(productSagas)]);\n"]},"metadata":{},"sourceType":"module"}