{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class TokenTransctionService extends APIRequest {\n  sendTip(performerId, payload) {\n    return this.post(`/wallet/charges/tip/${performerId}`, payload);\n  }\n\n  purchaseFeed(id, payload) {\n    return this.post(`/wallet/charges/feed/${id}`, payload);\n  }\n\n  purchaseProduct(id, payload) {\n    return this.post(`/wallet/charges/product/${id}`, payload);\n  }\n\n  purchaseVideo(id, payload) {\n    return this.post(`/wallet/charges/video/${id}`, payload);\n  }\n\n  purchaseGallery(id, payload) {\n    return this.post(`/wallet/charges/gallery/${id}`, payload);\n  }\n\n  purchaseMessage(id, payload) {\n    return this.post(`/wallet/charges/message/${id}`, payload);\n  }\n\n  purchaseStream(id) {\n    return this.post(`/wallet/charges/stream/${id}`);\n  }\n\n  userSearch(query) {\n    return this.get(this.buildUrl('/wallet/charges/user/search', query));\n  }\n\n}\nexport const tokenTransctionService = new TokenTransctionService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/token-transaction.service.ts"],"names":["APIRequest","TokenTransctionService","sendTip","performerId","payload","post","purchaseFeed","id","purchaseProduct","purchaseVideo","purchaseGallery","purchaseMessage","purchaseStream","userSearch","query","get","buildUrl","tokenTransctionService"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,sBAAN,SAAqCD,UAArC,CAAgD;AACrDE,EAAAA,OAAO,CAACC,WAAD,EAAsBC,OAAtB,EAAoC;AACzC,WAAO,KAAKC,IAAL,CAAW,uBAAsBF,WAAY,EAA7C,EAAgDC,OAAhD,CAAP;AACD;;AAEDE,EAAAA,YAAY,CAACC,EAAD,EAAKH,OAAL,EAAc;AACxB,WAAO,KAAKC,IAAL,CAAW,wBAAuBE,EAAG,EAArC,EAAwCH,OAAxC,CAAP;AACD;;AAEDI,EAAAA,eAAe,CAACD,EAAD,EAAKH,OAAL,EAAc;AAC3B,WAAO,KAAKC,IAAL,CAAW,2BAA0BE,EAAG,EAAxC,EAA2CH,OAA3C,CAAP;AACD;;AAEDK,EAAAA,aAAa,CAACF,EAAD,EAAKH,OAAL,EAAc;AACzB,WAAO,KAAKC,IAAL,CAAW,yBAAwBE,EAAG,EAAtC,EAAyCH,OAAzC,CAAP;AACD;;AAEDM,EAAAA,eAAe,CAACH,EAAD,EAAKH,OAAL,EAAc;AAC3B,WAAO,KAAKC,IAAL,CAAW,2BAA0BE,EAAG,EAAxC,EAA2CH,OAA3C,CAAP;AACD;;AAEDO,EAAAA,eAAe,CAACJ,EAAD,EAAKH,OAAL,EAAc;AAC3B,WAAO,KAAKC,IAAL,CAAW,2BAA0BE,EAAG,EAAxC,EAA2CH,OAA3C,CAAP;AACD;;AAEDQ,EAAAA,cAAc,CAACL,EAAD,EAAK;AACjB,WAAO,KAAKF,IAAL,CAAW,0BAAyBE,EAAG,EAAvC,CAAP;AACD;;AAEDM,EAAAA,UAAU,CAACC,KAAD,EAAiC;AACzC,WAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,6BAAd,EAA6CF,KAA7C,CAAT,CAAP;AACD;;AA/BoD;AAkCvD,OAAO,MAAMG,sBAAsB,GAAG,IAAIhB,sBAAJ,EAA/B","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class TokenTransctionService extends APIRequest {\n  sendTip(performerId: string, payload: any) {\n    return this.post(`/wallet/charges/tip/${performerId}`, payload);\n  }\n\n  purchaseFeed(id, payload) {\n    return this.post(`/wallet/charges/feed/${id}`, payload);\n  }\n\n  purchaseProduct(id, payload) {\n    return this.post(`/wallet/charges/product/${id}`, payload);\n  }\n\n  purchaseVideo(id, payload) {\n    return this.post(`/wallet/charges/video/${id}`, payload);\n  }\n\n  purchaseGallery(id, payload) {\n    return this.post(`/wallet/charges/gallery/${id}`, payload);\n  }\n\n  purchaseMessage(id, payload) {\n    return this.post(`/wallet/charges/message/${id}`, payload);\n  }\n\n  purchaseStream(id) {\n    return this.post(`/wallet/charges/stream/${id}`);\n  }\n\n  userSearch(query?: { [key: string]: any }) {\n    return this.get(this.buildUrl('/wallet/charges/user/search', query));\n  }\n}\n\nexport const tokenTransctionService = new TokenTransctionService();\n"]},"metadata":{},"sourceType":"module"}