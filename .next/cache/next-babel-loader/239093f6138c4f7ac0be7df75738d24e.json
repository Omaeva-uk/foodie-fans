{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-prototype-builtins */\nimport { PureComponent } from 'react';\nimport { Menu, Dropdown, message } from 'antd';\nimport { HeartOutlined, MoreOutlined, CaretUpOutlined } from '@ant-design/icons';\nimport { reactionService } from '@services/index';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { CommentForm, ListComments } from '@components/comment';\nimport { getComments, moreComment, createComment, deleteComment } from '@redux/comment/actions';\n\nclass CommentItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isLiked: false,\n      isOpenComment: false,\n      isFirstLoadComment: true,\n      itemPerPage: 10,\n      commentPage: 0,\n      isReply: false,\n      totalReply: 0,\n      totalLike: 0\n    });\n  }\n\n  componentDidMount() {\n    const {\n      item\n    } = this.props;\n\n    if (item) {\n      this.setState({\n        isLiked: !!item.isLiked,\n        totalLike: item.totalLike || 0,\n        totalReply: item.totalReply ? item.totalReply : 0\n      });\n    }\n  }\n\n  async handleComment(values) {\n    const {\n      createComment: handleCreate\n    } = this.props;\n    const {\n      totalReply\n    } = this.state;\n    handleCreate(values);\n    await this.setState({\n      isReply: false,\n      isOpenComment: false,\n      totalReply: totalReply + 1\n    });\n    this.onOpenComment();\n  }\n\n  async onOpenComment() {\n    const {\n      item,\n      getComments: handleGetComment\n    } = this.props;\n    const {\n      isOpenComment,\n      isFirstLoadComment,\n      itemPerPage,\n      commentPage\n    } = this.state;\n    this.setState({\n      isOpenComment: !isOpenComment\n    });\n\n    if (isFirstLoadComment) {\n      await this.setState({\n        isFirstLoadComment: false\n      });\n      handleGetComment({\n        objectId: item._id,\n        objectType: 'comment',\n        limit: itemPerPage,\n        offset: commentPage\n      });\n    }\n  }\n\n  async onLikeComment(comment) {\n    const {\n      isLiked,\n      totalLike\n    } = this.state;\n\n    try {\n      if (!isLiked) {\n        await reactionService.create({\n          objectId: comment._id,\n          action: 'like',\n          objectType: 'comment'\n        });\n        this.setState({\n          isLiked: true,\n          totalLike: totalLike + 1\n        });\n      } else {\n        await reactionService.delete({\n          objectId: comment._id,\n          action: 'like',\n          objectType: 'comment'\n        });\n        this.setState({\n          isLiked: false,\n          totalLike: totalLike - 1\n        });\n      }\n    } catch (e) {\n      const error = await e;\n      message.error(error.message || 'Error occured, please try again later');\n    }\n  }\n\n  async moreComment() {\n    const {\n      item,\n      moreComment: handleLoadMore\n    } = this.props;\n    const {\n      commentPage,\n      itemPerPage\n    } = this.state;\n    await this.setState({\n      commentPage: commentPage + 1\n    });\n    handleLoadMore({\n      limit: itemPerPage,\n      objectType: 'comment',\n      offset: (commentPage + 1) * itemPerPage,\n      objectId: item._id\n    });\n  }\n\n  async deleteComment(item) {\n    const {\n      deleteComment: handleDelete\n    } = this.props;\n    if (!window.confirm('Are you sure to remove this comment?')) return;\n    handleDelete(item._id);\n  }\n\n  render() {\n    var _item$creator, _item$creator2, _item$creator3;\n\n    const {\n      item,\n      user,\n      canReply,\n      onDelete,\n      commentMapping,\n      comment,\n      siteName\n    } = this.props;\n    const {\n      requesting: commenting\n    } = comment;\n    const fetchingComment = commentMapping.hasOwnProperty(item._id) ? commentMapping[item._id].requesting : false;\n    const comments = commentMapping.hasOwnProperty(item._id) ? commentMapping[item._id].items : [];\n    const totalComments = commentMapping.hasOwnProperty(item._id) ? commentMapping[item._id].total : 0;\n    const {\n      isLiked,\n      isOpenComment,\n      isReply,\n      totalReply,\n      totalLike\n    } = this.state;\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"cmt-item\",\n      key: item._id\n    }, __jsx(\"img\", {\n      alt: \"creator-avt\",\n      src: (item === null || item === void 0 ? void 0 : (_item$creator = item.creator) === null || _item$creator === void 0 ? void 0 : _item$creator.avatar) || '/static/no-avatar.png'\n    }), __jsx(\"div\", {\n      className: \"cmt-content\"\n    }, __jsx(\"div\", {\n      className: \"cmt-user\"\n    }, __jsx(\"span\", null, __jsx(\"span\", null, (item === null || item === void 0 ? void 0 : (_item$creator2 = item.creator) === null || _item$creator2 === void 0 ? void 0 : _item$creator2.name) || (item === null || item === void 0 ? void 0 : (_item$creator3 = item.creator) === null || _item$creator3 === void 0 ? void 0 : _item$creator3.username) || 'N/A'), __jsx(\"span\", {\n      className: \"cmt-time\"\n    }, moment(item.createdAt).fromNow())), user._id === item.createdBy && __jsx(Dropdown, {\n      overlay: __jsx(Menu, {\n        key: `menu_cmt_${item._id}`\n      }, __jsx(Menu.Item, {\n        key: `delete_cmt_${item._id}`,\n        onClick: () => onDelete(item)\n      }, __jsx(\"a\", null, \"Delete\")))\n    }, __jsx(\"a\", {\n      \"aria-hidden\": true,\n      className: \"ant-dropdown-link\",\n      onClick: e => e.preventDefault()\n    }, __jsx(MoreOutlined, null)))), __jsx(\"p\", {\n      className: \"cmt-text\"\n    }, item.content), __jsx(\"div\", {\n      className: \"cmt-action\"\n    }, __jsx(\"a\", {\n      \"aria-hidden\": true,\n      className: isLiked ? 'cmt-like active' : 'cmt-like',\n      onClick: this.onLikeComment.bind(this, item)\n    }, __jsx(HeartOutlined, null), ' ', totalLike > 0 && totalLike), canReply && __jsx(\"a\", {\n      \"aria-hidden\": true,\n      className: !isReply ? 'cmt-reply' : 'cmt-reply active',\n      onClick: () => this.setState({\n        isReply: !isReply\n      })\n    }, \"Reply\")), __jsx(\"div\", {\n      className: isReply ? 'reply-bl-form active' : 'reply-bl-form'\n    }, __jsx(\"div\", {\n      className: \"feed-comment\"\n    }, __jsx(CommentForm, {\n      creator: user,\n      onSubmit: this.handleComment.bind(this),\n      objectId: item._id,\n      objectType: \"comment\",\n      requesting: commenting,\n      isReply: true,\n      siteName: siteName\n    }))), canReply && totalReply > 0 && __jsx(\"div\", {\n      className: \"view-cmt\"\n    }, __jsx(\"a\", {\n      \"aria-hidden\": true,\n      onClick: this.onOpenComment.bind(this)\n    }, ' ', __jsx(CaretUpOutlined, {\n      rotate: !isOpenComment ? 180 : 0\n    }), ' ', !isOpenComment ? 'View' : 'Hide', ' ', \"reply\")))), isOpenComment && __jsx(\"div\", {\n      className: \"reply-bl-list\"\n    }, __jsx(\"div\", null, __jsx(ListComments, {\n      key: `list_comments_${item._id}_${comments.length}`,\n      requesting: fetchingComment,\n      comments: comments,\n      total: totalComments,\n      onDelete: this.deleteComment.bind(this),\n      user: user,\n      canReply: false\n    }), comments.length < totalComments && __jsx(\"p\", {\n      className: \"text-center\"\n    }, __jsx(\"a\", {\n      \"aria-hidden\": true,\n      onClick: this.moreComment.bind(this)\n    }, \"more...\")))));\n  }\n\n}\n\nconst mapStates = state => {\n  const {\n    commentMapping,\n    comment\n  } = state.comment;\n  return {\n    commentMapping,\n    comment,\n    siteName: state.ui.siteName\n  };\n};\n\nconst mapDispatch = {\n  getComments,\n  moreComment,\n  createComment,\n  deleteComment\n};\nexport default connect(mapStates, mapDispatch)(CommentItem);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/comment/comment-item.tsx"],"names":["PureComponent","Menu","Dropdown","message","HeartOutlined","MoreOutlined","CaretUpOutlined","reactionService","moment","connect","CommentForm","ListComments","getComments","moreComment","createComment","deleteComment","CommentItem","isLiked","isOpenComment","isFirstLoadComment","itemPerPage","commentPage","isReply","totalReply","totalLike","componentDidMount","item","props","setState","handleComment","values","handleCreate","state","onOpenComment","handleGetComment","objectId","_id","objectType","limit","offset","onLikeComment","comment","create","action","delete","e","error","handleLoadMore","handleDelete","window","confirm","render","user","canReply","onDelete","commentMapping","siteName","requesting","commenting","fetchingComment","hasOwnProperty","comments","items","totalComments","total","creator","avatar","name","username","createdAt","fromNow","createdBy","preventDefault","content","bind","length","mapStates","ui","mapDispatch"],"mappings":"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","sourcesContent":["/* eslint-disable no-prototype-builtins */\nimport { PureComponent } from 'react';\nimport { Menu, Dropdown, message } from 'antd';\nimport { HeartOutlined, MoreOutlined, CaretUpOutlined } from '@ant-design/icons';\nimport { reactionService } from '@services/index';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { CommentForm, ListComments } from '@components/comment';\nimport {\n  getComments, moreComment, createComment, deleteComment\n} from '@redux/comment/actions';\nimport { IUser, IComment } from 'src/interfaces/index';\n\ninterface IProps {\n  item: IComment;\n  comment: any;\n  onDelete?: Function;\n  user?: IUser;\n  canReply?: boolean;\n  getComments: Function;\n  moreComment: Function;\n  createComment: Function;\n  deleteComment: Function;\n  commentMapping: any;\n  siteName: string;\n}\n\nclass CommentItem extends PureComponent<IProps> {\n  state = {\n    isLiked: false,\n    isOpenComment: false,\n    isFirstLoadComment: true,\n    itemPerPage: 10,\n    commentPage: 0,\n    isReply: false,\n    totalReply: 0,\n    totalLike: 0\n  }\n\n  componentDidMount() {\n    const { item } = this.props;\n    if (item) {\n      this.setState({\n        isLiked: !!item.isLiked,\n        totalLike: item.totalLike || 0,\n        totalReply: item.totalReply ? item.totalReply : 0\n      });\n    }\n  }\n\n  async handleComment(values) {\n    const { createComment: handleCreate } = this.props;\n    const { totalReply } = this.state;\n    handleCreate(values);\n    await this.setState({ isReply: false, isOpenComment: false, totalReply: totalReply + 1 });\n    this.onOpenComment();\n  }\n\n  async onOpenComment() {\n    const { item, getComments: handleGetComment } = this.props;\n    const {\n      isOpenComment, isFirstLoadComment, itemPerPage, commentPage\n    } = this.state;\n    this.setState({ isOpenComment: !isOpenComment });\n    if (isFirstLoadComment) {\n      await this.setState({ isFirstLoadComment: false });\n      handleGetComment({\n        objectId: item._id,\n        objectType: 'comment',\n        limit: itemPerPage,\n        offset: commentPage\n      });\n    }\n  }\n\n  async onLikeComment(comment) {\n    const { isLiked, totalLike } = this.state;\n    try {\n      if (!isLiked) {\n        await reactionService.create({\n          objectId: comment._id,\n          action: 'like',\n          objectType: 'comment'\n        });\n        this.setState({ isLiked: true, totalLike: totalLike + 1 });\n      } else {\n        await reactionService.delete({\n          objectId: comment._id,\n          action: 'like',\n          objectType: 'comment'\n        });\n        this.setState({ isLiked: false, totalLike: totalLike - 1 });\n      }\n    } catch (e) {\n      const error = await e;\n      message.error(error.message || 'Error occured, please try again later');\n    }\n  }\n\n  async moreComment() {\n    const { item, moreComment: handleLoadMore } = this.props;\n    const { commentPage, itemPerPage } = this.state;\n    await this.setState({\n      commentPage: commentPage + 1\n    });\n    handleLoadMore({\n      limit: itemPerPage,\n      objectType: 'comment',\n      offset: (commentPage + 1) * itemPerPage,\n      objectId: item._id\n    });\n  }\n\n  async deleteComment(item) {\n    const { deleteComment: handleDelete } = this.props;\n    if (!window.confirm('Are you sure to remove this comment?')) return;\n    handleDelete(item._id);\n  }\n\n  render() {\n    const {\n      item, user, canReply, onDelete, commentMapping, comment, siteName\n    } = this.props;\n    const { requesting: commenting } = comment;\n    const fetchingComment = commentMapping.hasOwnProperty(item._id) ? commentMapping[item._id].requesting : false;\n    const comments = commentMapping.hasOwnProperty(item._id) ? commentMapping[item._id].items : [];\n    const totalComments = commentMapping.hasOwnProperty(item._id) ? commentMapping[item._id].total : 0;\n    const {\n      isLiked, isOpenComment, isReply, totalReply, totalLike\n    } = this.state;\n    return (\n      <div>\n        <div className=\"cmt-item\" key={item._id}>\n          <img alt=\"creator-avt\" src={item?.creator?.avatar || '/static/no-avatar.png'} />\n          <div className=\"cmt-content\">\n            <div className=\"cmt-user\">\n              <span>\n                <span>{item?.creator?.name || item?.creator?.username || 'N/A'}</span>\n                <span className=\"cmt-time\">{moment(item.createdAt).fromNow()}</span>\n              </span>\n              {user._id === item.createdBy && (\n                <Dropdown overlay={(\n                  <Menu key={`menu_cmt_${item._id}`}>\n                    <Menu.Item key={`delete_cmt_${item._id}`} onClick={() => onDelete(item)}>\n                      <a>\n                        Delete\n                      </a>\n                    </Menu.Item>\n                  </Menu>\n                )}\n                >\n                  <a aria-hidden className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n                    <MoreOutlined />\n                  </a>\n                </Dropdown>\n              )}\n            </div>\n            <p className=\"cmt-text\">{item.content}</p>\n            <div className=\"cmt-action\">\n              <a aria-hidden className={isLiked ? 'cmt-like active' : 'cmt-like'} onClick={this.onLikeComment.bind(this, item)}>\n                <HeartOutlined />\n                {' '}\n                {totalLike > 0 && totalLike}\n              </a>\n              {canReply && <a aria-hidden className={!isReply ? 'cmt-reply' : 'cmt-reply active'} onClick={() => this.setState({ isReply: !isReply })}>Reply</a>}\n            </div>\n            <div className={isReply ? 'reply-bl-form active' : 'reply-bl-form'}>\n              <div className=\"feed-comment\">\n                <CommentForm\n                  creator={user}\n                  onSubmit={this.handleComment.bind(this)}\n                  objectId={item._id}\n                  objectType=\"comment\"\n                  requesting={commenting}\n                  isReply\n                  siteName={siteName}\n                />\n              </div>\n            </div>\n            {canReply && totalReply > 0 && (\n              <div className=\"view-cmt\">\n                <a aria-hidden onClick={this.onOpenComment.bind(this)}>\n                  {' '}\n                  <CaretUpOutlined rotate={!isOpenComment ? 180 : 0} />\n                  {' '}\n                  {!isOpenComment ? 'View' : 'Hide'}\n                  {' '}\n                  reply\n                </a>\n              </div>\n            )}\n          </div>\n        </div>\n        {isOpenComment && (\n          <div className=\"reply-bl-list\">\n            <div>\n              <ListComments\n                key={`list_comments_${item._id}_${comments.length}`}\n                requesting={fetchingComment}\n                comments={comments}\n                total={totalComments}\n                onDelete={this.deleteComment.bind(this)}\n                user={user}\n                canReply={false}\n              />\n              {comments.length < totalComments && <p className=\"text-center\"><a aria-hidden onClick={this.moreComment.bind(this)}>more...</a></p>}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStates = (state: any) => {\n  const { commentMapping, comment } = state.comment;\n  return {\n    commentMapping,\n    comment,\n    siteName: state.ui.siteName\n  };\n};\n\nconst mapDispatch = {\n  getComments, moreComment, createComment, deleteComment\n};\nexport default connect(mapStates, mapDispatch)(CommentItem);\n"]},"metadata":{},"sourceType":"module"}