{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var SearchService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(SearchService, _APIRequest);\n\n  var _super = _createSuper(SearchService);\n\n  function SearchService() {\n    _classCallCheck(this, SearchService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SearchService, [{\n    key: \"searchByKeyword\",\n    value: function searchByKeyword(payload) {\n      return this.post('/search/keywords', payload);\n    }\n  }, {\n    key: \"listByKeyword\",\n    value: function listByKeyword(query) {\n      return this.get(this.buildUrl('/search/list/keywords', query));\n    }\n  }]);\n\n  return SearchService;\n}(APIRequest);\nexport var searchService = new SearchService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/search.service.ts"],"names":["APIRequest","SearchService","payload","post","query","get","buildUrl","searchService"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,WAAaC,aAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,yBAAgBC,OAAhB,EAAyB;AACvB,aAAO,KAAKC,IAAL,CAAU,kBAAV,EAA8BD,OAA9B,CAAP;AACD;AAHH;AAAA;AAAA,WAKE,uBAAcE,KAAd,EAA8C;AAC5C,aAAO,KAAKC,GAAL,CACL,KAAKC,QAAL,CAAc,uBAAd,EAAuCF,KAAvC,CADK,CAAP;AAGD;AATH;;AAAA;AAAA,EAAmCJ,UAAnC;AAYA,OAAO,IAAMO,aAAa,GAAG,IAAIN,aAAJ,EAAtB","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class SearchService extends APIRequest {\n  searchByKeyword(payload) {\n    return this.post('/search/keywords', payload);\n  }\n\n  listByKeyword(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/search/list/keywords', query)\n    );\n  }\n}\n\nexport const searchService = new SearchService();\n"]},"metadata":{},"sourceType":"module"}