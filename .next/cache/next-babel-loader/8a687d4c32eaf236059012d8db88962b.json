{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { productService } from '@services/index';\nimport { listProducts, listProductsFail, listProductsSuccess, moreProductFail, moreProductSuccess, moreProduct } from './actions';\nvar productSagas = [{\n  on: listProducts,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return productService.userSearch(data.payload);\n\n          case 3:\n            resp = _context.sent;\n            _context.next = 6;\n            return put(listProductsSuccess(resp.data));\n\n          case 6:\n            _context.next = 15;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            _context.next = 12;\n            return Promise.resolve(_context.t0);\n\n          case 12:\n            error = _context.sent;\n            _context.next = 15;\n            return put(listProductsFail(error));\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}, {\n  on: moreProduct,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return productService.userSearch(data.payload);\n\n          case 3:\n            resp = _context2.sent;\n            _context2.next = 6;\n            return put(moreProductSuccess(resp.data));\n\n          case 6:\n            _context2.next = 15;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.next = 12;\n            return Promise.resolve(_context2.t0);\n\n          case 12:\n            error = _context2.sent;\n            _context2.next = 15;\n            return put(moreProductFail(error));\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}];\nexport default flatten([createSagas(productSagas)]);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/product/sagas.ts"],"names":["flatten","put","createSagas","productService","listProducts","listProductsFail","listProductsSuccess","moreProductFail","moreProductSuccess","moreProduct","productSagas","on","worker","data","userSearch","payload","resp","Promise","resolve","error"],"mappings":";AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AAEA,SACEC,YADF,EACgBC,gBADhB,EACkCC,mBADlC,EACuDC,eADvD,EACwEC,kBADxE,EAC4FC,WAD5F,QAEO,WAFP;AAIA,IAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAEP,YADN;AAEIQ,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMV,cAAc,CAACW,UAAf,CAA0BD,IAAI,CAACE,OAA/B,CAAN;;AAJnB;AAIYC,YAAAA,IAJZ;AAAA;AAKM,mBAAMf,GAAG,CAACK,mBAAmB,CAACU,IAAI,CAACH,IAAN,CAApB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMI,OAAO,CAACC,OAAR,aAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAMlB,GAAG,CAACI,gBAAgB,CAACc,KAAD,CAAjB,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADmB,EAanB;AACER,EAAAA,EAAE,EAAEF,WADN;AAEIG,EAAAA,MAFJ,wDAEWC,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAImB,mBAAMV,cAAc,CAACW,UAAf,CAA0BD,IAAI,CAACE,OAA/B,CAAN;;AAJnB;AAIYC,YAAAA,IAJZ;AAAA;AAKM,mBAAMf,GAAG,CAACO,kBAAkB,CAACQ,IAAI,CAACH,IAAN,CAAnB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOoB,mBAAMI,OAAO,CAACC,OAAR,cAAN;;AAPpB;AAOYC,YAAAA,KAPZ;AAAA;AAQM,mBAAMlB,GAAG,CAACM,eAAe,CAACY,KAAD,CAAhB,CAAT;;AARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAbmB,CAArB;AA2BA,eAAenB,OAAO,CAAC,CAACE,WAAW,CAACQ,YAAD,CAAZ,CAAD,CAAtB","sourcesContent":["import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { productService } from '@services/index';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  listProducts, listProductsFail, listProductsSuccess, moreProductFail, moreProductSuccess, moreProduct\n} from './actions';\n\nconst productSagas = [\n  {\n    on: listProducts,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield productService.userSearch(data.payload);\n        yield put(listProductsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(listProductsFail(error));\n      }\n    }\n  },\n  {\n    on: moreProduct,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield productService.userSearch(data.payload);\n        yield put(moreProductSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(moreProductFail(error));\n      }\n    }\n  }\n];\n\nexport default flatten([createSagas(productSagas)]);\n"]},"metadata":{},"sourceType":"module"}