{"ast":null,"code":"import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { commentService } from '@services/index';\nimport { message } from 'antd';\nimport { getComments, getCommentsSuccess, moreCommentSuccess, moreComment, getCommentsFail, moreCommentFail, createComment, createCommentSuccess, createCommentFail, deleteComment, deleteCommentFail, deleteCommentSuccess } from './actions';\nconst commentSagas = [{\n  on: getComments,\n\n  *worker(data) {\n    try {\n      const resp = yield commentService.search(data.payload);\n      yield put(getCommentsSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(getCommentsFail(error));\n    }\n  }\n\n}, {\n  on: moreComment,\n\n  *worker(data) {\n    try {\n      const resp = yield commentService.search(data.payload);\n      yield put(moreCommentSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(moreCommentFail(error));\n    }\n  }\n\n}, {\n  on: createComment,\n\n  *worker(data) {\n    try {\n      const resp = yield commentService.create(data.payload);\n      yield put(createCommentSuccess(resp.data));\n      yield message.success('Commented successfully');\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield message.error('Error occured, please try again later');\n      yield put(createCommentFail(error));\n    }\n  }\n\n}, {\n  on: deleteComment,\n\n  *worker(data) {\n    try {\n      const resp = yield commentService.delete(data.payload);\n      yield put(deleteCommentSuccess(resp.data));\n      yield message.success('Removed successfully!');\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield message.error('Error occured, please try again later');\n      yield put(deleteCommentFail(error));\n    }\n  }\n\n}];\nexport default flatten([createSagas(commentSagas)]);","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/redux/comment/sagas.ts"],"names":["flatten","put","createSagas","commentService","message","getComments","getCommentsSuccess","moreCommentSuccess","moreComment","getCommentsFail","moreCommentFail","createComment","createCommentSuccess","createCommentFail","deleteComment","deleteCommentFail","deleteCommentSuccess","commentSagas","on","worker","data","resp","search","payload","e","error","Promise","resolve","create","success","delete"],"mappings":"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","sourcesContent":["import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { commentService } from '@services/index';\nimport { IReduxAction } from 'src/interfaces';\nimport { message } from 'antd';\nimport {\n  getComments, getCommentsSuccess, moreCommentSuccess, moreComment, getCommentsFail, moreCommentFail,\n  createComment, createCommentSuccess, createCommentFail, deleteComment, deleteCommentFail, deleteCommentSuccess\n} from './actions';\n\nconst commentSagas = [\n  {\n    on: getComments,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield commentService.search(data.payload);\n        yield put(getCommentsSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(getCommentsFail(error));\n      }\n    }\n  },\n  {\n    on: moreComment,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield commentService.search(data.payload);\n        yield put(moreCommentSuccess(resp.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(moreCommentFail(error));\n      }\n    }\n  },\n  {\n    on: createComment,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield commentService.create(data.payload);\n        yield put(createCommentSuccess(resp.data));\n        yield message.success('Commented successfully');\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield message.error('Error occured, please try again later');\n        yield put(createCommentFail(error));\n      }\n    }\n  },\n  {\n    on: deleteComment,\n    * worker(data: IReduxAction<any>) {\n      try {\n        const resp = yield commentService.delete(data.payload);\n        yield put(deleteCommentSuccess(resp.data));\n        yield message.success('Removed successfully!');\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield message.error('Error occured, please try again later');\n        yield put(deleteCommentFail(error));\n      }\n    }\n  }\n];\n\nexport default flatten([createSagas(commentSagas)]);\n"]},"metadata":{},"sourceType":"module"}