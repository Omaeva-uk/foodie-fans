{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { DeleteOutlined, PlusOutlined, PlayCircleOutlined } from '@ant-design/icons';\nimport { Progress, Button, Upload, Tooltip, Image, Modal } from 'antd';\nimport { VideoPlayer } from '@components/common';\nimport '../post/index.less';\nexport default class UploadList extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isShowPreview: false,\n      previewUrl: ''\n    });\n  }\n\n  beforeUpload(file, fileList) {\n    const {\n      onAddMore: handleAddMore\n    } = this.props;\n    handleAddMore(file, fileList);\n  }\n\n  render() {\n    const {\n      files,\n      remove: handleRemove,\n      uploading,\n      type\n    } = this.props;\n    const {\n      isShowPreview,\n      previewUrl\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"f-upload-list\"\n    }, files && files.map(file => __jsx(\"div\", {\n      className: \"f-upload-item\",\n      key: file._id || file.uid\n    }, __jsx(\"div\", {\n      className: \"f-upload-thumb\"\n    }, file.type.includes('feed-photo') || file.type.includes('image') ? __jsx(Image, {\n      placeholder: true,\n      alt: \"img\",\n      src: file.url ? file.url : file.thumbnail,\n      width: \"100%\"\n    }) : file.type.includes('video') ? __jsx(\"span\", {\n      className: \"f-thumb-vid\",\n      \"aria-hidden\": true,\n      onClick: () => this.setState({\n        isShowPreview: true,\n        previewUrl: file === null || file === void 0 ? void 0 : file.url\n      })\n    }, __jsx(PlayCircleOutlined, null)) : __jsx(\"img\", {\n      alt: \"img\",\n      src: \"/static/no-image.jpg\",\n      width: \"100%\"\n    })), __jsx(\"div\", {\n      className: \"f-upload-name\"\n    }, __jsx(Tooltip, {\n      title: file.name\n    }, file.name)), __jsx(\"div\", {\n      className: \"f-upload-size\"\n    }, (file.size / (1024 * 1024)).toFixed(2), ' ', \"MB\"), file.status !== 'uploading' && __jsx(\"span\", {\n      className: \"f-remove\"\n    }, __jsx(Button, {\n      type: \"primary\",\n      onClick: handleRemove.bind(this, file)\n    }, __jsx(DeleteOutlined, null))), file.percent && __jsx(Progress, {\n      percent: Math.round(file.percent)\n    }))), (type === 'photo' || type === 'video' && !files.length) && __jsx(\"div\", {\n      className: \"add-more\"\n    }, __jsx(Upload, {\n      customRequest: () => true,\n      accept: type === 'video' ? 'video/*' : 'image/*',\n      beforeUpload: this.beforeUpload.bind(this),\n      multiple: type === 'photo',\n      showUploadList: false,\n      disabled: uploading,\n      listType: \"picture\"\n    }, __jsx(PlusOutlined, null), ' ', \"Add\", ' ', type === 'photo' ? 'photos' : type === 'video' ? 'video' : 'files')), __jsx(Modal, {\n      width: 767,\n      footer: null,\n      onOk: () => this.setState({\n        isShowPreview: false\n      }),\n      onCancel: () => this.setState({\n        isShowPreview: false\n      }),\n      visible: isShowPreview,\n      destroyOnClose: true\n    }, __jsx(VideoPlayer, {\n      autoplay: true,\n      controls: true,\n      playsinline: true,\n      fluid: true,\n      sources: [{\n        src: previewUrl,\n        type: 'video/mp4'\n      }]\n    })));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/file/list-media.tsx"],"names":["PureComponent","DeleteOutlined","PlusOutlined","PlayCircleOutlined","Progress","Button","Upload","Tooltip","Image","Modal","VideoPlayer","UploadList","isShowPreview","previewUrl","beforeUpload","file","fileList","onAddMore","handleAddMore","props","render","files","remove","handleRemove","uploading","type","state","map","_id","uid","includes","url","thumbnail","setState","name","size","toFixed","status","bind","percent","Math","round","length","autoplay","controls","playsinline","fluid","sources","src"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport { DeleteOutlined, PlusOutlined, PlayCircleOutlined } from '@ant-design/icons';\nimport {\n  Progress, Button, Upload, Tooltip, Image, Modal\n} from 'antd';\nimport { VideoPlayer } from '@components/common';\nimport '../post/index.less';\n\ninterface IProps {\n  remove: Function;\n  files: any[];\n  onAddMore: Function;\n  uploading: boolean;\n  type?: string;\n}\nexport default class UploadList extends PureComponent<IProps> {\n  state = {\n    isShowPreview: false,\n    previewUrl: ''\n  }\n\n  beforeUpload(file, fileList) {\n    const { onAddMore: handleAddMore } = this.props;\n    handleAddMore(file, fileList);\n  }\n\n  render() {\n    const {\n      files, remove: handleRemove, uploading, type\n    } = this.props;\n    const { isShowPreview, previewUrl } = this.state;\n    return (\n      <div className=\"f-upload-list\">\n        {files && files.map((file) => (\n          <div className=\"f-upload-item\" key={file._id || file.uid}>\n            <div className=\"f-upload-thumb\">\n              {/* eslint-disable-next-line no-nested-ternary */}\n              {(file.type.includes('feed-photo') || file.type.includes('image'))\n                ? <Image placeholder alt=\"img\" src={file.url ? file.url : file.thumbnail} width=\"100%\" />\n                : file.type.includes('video') ? (\n                  <span className=\"f-thumb-vid\" aria-hidden onClick={() => this.setState({ isShowPreview: true, previewUrl: file?.url })}>\n                    <PlayCircleOutlined />\n                  </span>\n                ) : <img alt=\"img\" src=\"/static/no-image.jpg\" width=\"100%\" />}\n            </div>\n            <div className=\"f-upload-name\">\n              <Tooltip title={file.name}>{file.name}</Tooltip>\n            </div>\n            <div className=\"f-upload-size\">\n              {(file.size / (1024 * 1024)).toFixed(2)}\n              {' '}\n              MB\n            </div>\n            {file.status !== 'uploading'\n              && (\n              <span className=\"f-remove\">\n                <Button type=\"primary\" onClick={handleRemove.bind(this, file)}>\n                  <DeleteOutlined />\n                </Button>\n              </span>\n              )}\n            {file.percent && <Progress percent={Math.round(file.percent)} />}\n          </div>\n        ))}\n        {(type === 'photo' || (type === 'video' && !files.length)) && (\n        <div className=\"add-more\">\n          <Upload\n            customRequest={() => true}\n            accept={type === 'video' ? 'video/*' : 'image/*'}\n            beforeUpload={this.beforeUpload.bind(this)}\n            multiple={type === 'photo'}\n            showUploadList={false}\n            disabled={uploading}\n            listType=\"picture\"\n          >\n            <PlusOutlined />\n            {' '}\n            Add\n            {' '}\n            {/* eslint-disable-next-line no-nested-ternary */}\n            {type === 'photo' ? 'photos' : type === 'video' ? 'video' : 'files'}\n          </Upload>\n        </div>\n        )}\n        <Modal\n          width={767}\n          footer={null}\n          onOk={() => this.setState({ isShowPreview: false })}\n          onCancel={() => this.setState({ isShowPreview: false })}\n          visible={isShowPreview}\n          destroyOnClose\n        >\n          <VideoPlayer\n            {...{\n              autoplay: true,\n              controls: true,\n              playsinline: true,\n              fluid: true,\n              sources: [\n                {\n                  src: previewUrl,\n                  type: 'video/mp4'\n                }\n              ]\n            }}\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}