{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport videojs from 'video.js';\nimport { isMobile } from 'react-device-detect';\nimport 'node_modules/video.js/dist/video-js.css';\nexport class VideoPlayer extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"videoNode\", void 0);\n\n    _defineProperty(this, \"player\", void 0);\n  }\n\n  componentDidMount() {\n    this.player = videojs(this.videoNode, _objectSpread(_objectSpread({}, this.props), {}, {\n      fluid: true,\n      controlBar: {\n        pictureInPictureToggle: false\n      }\n    }));\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"videojs-player\"\n    }, __jsx(\"div\", {\n      \"data-vjs-player\": true,\n      style: !isMobile ? {\n        paddingTop: 'max(81vh)'\n      } : null\n    }, __jsx(\"video\", {\n      ref: node => {\n        this.videoNode = node;\n      },\n      className: \"video-js\"\n    })));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/common/video-player.tsx"],"names":["PureComponent","videojs","isMobile","VideoPlayer","componentDidMount","player","videoNode","props","fluid","controlBar","pictureInPictureToggle","componentWillUnmount","dispose","render","paddingTop","node"],"mappings":";;;;;;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,yCAAP;AAEA,OAAO,MAAMC,WAAN,SAA0BH,aAA1B,CAA6C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAKlDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,MAAL,GAAcJ,OAAO,CAAC,KAAKK,SAAN,kCAChB,KAAKC,KADW;AAEnBC,MAAAA,KAAK,EAAE,IAFY;AAGnBC,MAAAA,UAAU,EAAE;AACVC,QAAAA,sBAAsB,EAAE;AADd;AAHO,OAArB;AAOD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKN,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYO,OAAZ;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,6BAAL;AAAqB,MAAA,KAAK,EAAE,CAACX,QAAD,GAAY;AAAEY,QAAAA,UAAU,EAAE;AAAd,OAAZ,GAA0C;AAAtE,OACE;AAAO,MAAA,GAAG,EAAGC,IAAD,IAAU;AAAE,aAAKT,SAAL,GAAiBS,IAAjB;AAAwB,OAAhD;AAAkD,MAAA,SAAS,EAAC;AAA5D,MADF,CADF,CADF;AAOD;;AA7BiD","sourcesContent":["import { PureComponent } from 'react';\nimport videojs from 'video.js';\nimport { isMobile } from 'react-device-detect';\nimport 'node_modules/video.js/dist/video-js.css';\n\nexport class VideoPlayer extends PureComponent<any> {\n  videoNode: HTMLVideoElement;\n\n  player: any;\n\n  componentDidMount() {\n    this.player = videojs(this.videoNode, {\n      ...this.props,\n      fluid: true,\n      controlBar: {\n        pictureInPictureToggle: false\n      }\n    } as any);\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"videojs-player\">\n        <div data-vjs-player style={!isMobile ? { paddingTop: 'max(81vh)' } : null}>\n          <video ref={(node) => { this.videoNode = node; }} className=\"video-js\" />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}