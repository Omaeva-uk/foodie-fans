{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent } from 'react';\nimport { InputNumber, Button, Avatar } from 'antd';\nimport { TickIcon } from 'src/icons';\nimport './performer.less';\nexport class TipPerformerForm extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      price: 10\n    });\n  }\n\n  onChangeValue(price) {\n    this.setState({\n      price\n    });\n  }\n\n  render() {\n    const {\n      onFinish,\n      submiting = false,\n      performer\n    } = this.props;\n    const {\n      price\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"confirm-purchase-form\"\n    }, __jsx(\"div\", {\n      className: \"left-col\"\n    }, __jsx(Avatar, {\n      src: (performer === null || performer === void 0 ? void 0 : performer.avatar) || '/static/no-avatar.png'\n    }), __jsx(\"div\", {\n      className: \"p-name\"\n    }, (performer === null || performer === void 0 ? void 0 : performer.name) || 'N/A', ' ', (performer === null || performer === void 0 ? void 0 : performer.verifiedAccount) && __jsx(TickIcon, {\n      className: \"primary-color\"\n    })), __jsx(\"div\", {\n      className: \"p-username\"\n    }, \"@\", (performer === null || performer === void 0 ? void 0 : performer.username) || 'n/a'), __jsx(\"img\", {\n      className: \"lock-icon\",\n      src: \"/static/lock-icon.png\",\n      alt: \"lock\"\n    })), __jsx(\"div\", {\n      className: \"right-col\"\n    }, __jsx(\"h2\", null, \"TIP\", ' ', __jsx(\"span\", {\n      className: \"username\"\n    }, `@${performer === null || performer === void 0 ? void 0 : performer.username}` || 'the model')), __jsx(\"h3\", null, __jsx(\"span\", {\n      className: \"price\"\n    }, price.toFixed(2)), ' ', \"USD\"), __jsx(\"div\", {\n      className: \"tip-grps\"\n    }, __jsx(Button, {\n      type: price === 10 ? 'primary' : 'default',\n      onClick: () => this.onChangeValue(10)\n    }, \"$10\"), __jsx(Button, {\n      type: price === 20 ? 'primary' : 'default',\n      onClick: () => this.onChangeValue(20)\n    }, \"$20\"), __jsx(Button, {\n      type: price === 50 ? 'primary' : 'default',\n      onClick: () => this.onChangeValue(50)\n    }, \"$50\"), __jsx(Button, {\n      type: price === 100 ? 'primary' : 'default',\n      onClick: () => this.onChangeValue(100)\n    }, \"$100\"), __jsx(Button, {\n      type: price === 200 ? 'primary' : 'default',\n      onClick: () => this.onChangeValue(200)\n    }, \"$200\"), __jsx(Button, {\n      type: price === 300 ? 'primary' : 'default',\n      onClick: () => this.onChangeValue(300)\n    }, \"$300\"), __jsx(Button, {\n      type: price === 400 ? 'primary' : 'default',\n      onClick: () => this.onChangeValue(400)\n    }, \"$400\"), __jsx(Button, {\n      type: price === 500 ? 'primary' : 'default',\n      onClick: () => this.onChangeValue(500)\n    }, \"$500\"), __jsx(Button, {\n      type: price === 1000 ? 'primary' : 'default',\n      onClick: () => this.onChangeValue(1000)\n    }, \"$1000\")), __jsx(\"div\", {\n      className: \"tip-input\"\n    }, __jsx(\"p\", null, \"Enter tip amount\"), __jsx(InputNumber, {\n      min: 1,\n      onChange: this.onChangeValue.bind(this),\n      value: price\n    })), __jsx(Button, {\n      className: \"primary\",\n      disabled: submiting,\n      loading: submiting,\n      onClick: () => onFinish(price)\n    }, \"SEND TIP\")));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/tip-form.tsx"],"names":["PureComponent","InputNumber","Button","Avatar","TickIcon","TipPerformerForm","price","onChangeValue","setState","render","onFinish","submiting","performer","props","state","avatar","name","verifiedAccount","username","toFixed","bind"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  InputNumber, Button, Avatar\n} from 'antd';\nimport { TickIcon } from 'src/icons';\nimport { IPerformer } from '@interfaces/index';\nimport './performer.less';\n\ninterface IProps {\n  performer: IPerformer;\n  onFinish(price: any): Function;\n  submiting: boolean;\n}\n\nexport class TipPerformerForm extends PureComponent<IProps> {\n  state = {\n    price: 10\n  }\n\n  onChangeValue(price) {\n    this.setState({ price });\n  }\n\n  render() {\n    const {\n      onFinish, submiting = false, performer\n    } = this.props;\n    const { price } = this.state;\n    return (\n      <div className=\"confirm-purchase-form\">\n        <div className=\"left-col\">\n          <Avatar src={performer?.avatar || '/static/no-avatar.png'} />\n          <div className=\"p-name\">\n            {performer?.name || 'N/A'}\n            {' '}\n            {performer?.verifiedAccount && <TickIcon className=\"primary-color\" />}\n          </div>\n          <div className=\"p-username\">\n            @\n            {performer?.username || 'n/a'}\n          </div>\n          <img className=\"lock-icon\" src=\"/static/lock-icon.png\" alt=\"lock\" />\n        </div>\n        <div className=\"right-col\">\n          <h2>\n            TIP\n            {' '}\n            <span className=\"username\">{`@${performer?.username}` || 'the model'}</span>\n          </h2>\n          <h3>\n            <span className=\"price\">{price.toFixed(2)}</span>\n            {' '}\n            USD\n          </h3>\n          <div className=\"tip-grps\">\n            <Button type={price === 10 ? 'primary' : 'default'} onClick={() => this.onChangeValue(10)}>\n              $10\n            </Button>\n            <Button type={price === 20 ? 'primary' : 'default'} onClick={() => this.onChangeValue(20)}>\n              $20\n            </Button>\n            <Button type={price === 50 ? 'primary' : 'default'} onClick={() => this.onChangeValue(50)}>\n              $50\n            </Button>\n            <Button type={price === 100 ? 'primary' : 'default'} onClick={() => this.onChangeValue(100)}>\n              $100\n            </Button>\n            <Button type={price === 200 ? 'primary' : 'default'} onClick={() => this.onChangeValue(200)}>\n              $200\n            </Button>\n            <Button type={price === 300 ? 'primary' : 'default'} onClick={() => this.onChangeValue(300)}>\n              $300\n            </Button>\n            <Button type={price === 400 ? 'primary' : 'default'} onClick={() => this.onChangeValue(400)}>\n              $400\n            </Button>\n            <Button type={price === 500 ? 'primary' : 'default'} onClick={() => this.onChangeValue(500)}>\n              $500\n            </Button>\n            <Button type={price === 1000 ? 'primary' : 'default'} onClick={() => this.onChangeValue(1000)}>\n              $1000\n            </Button>\n          </div>\n          <div className=\"tip-input\">\n            <p>Enter tip amount</p>\n            <InputNumber min={1} onChange={this.onChangeValue.bind(this)} value={price} />\n          </div>\n          <Button\n            className=\"primary\"\n            disabled={submiting}\n            loading={submiting}\n            onClick={() => onFinish(price)}\n          >\n            SEND TIP\n          </Button>\n        </div>\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}