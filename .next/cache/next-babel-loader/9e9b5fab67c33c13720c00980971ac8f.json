{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { PureComponent } from 'react';\nimport { Form, Button, Input, Row, Col } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  }\n};\nexport class PerformerPaypalForm extends PureComponent {\n  render() {\n    var _user$paypalSetting;\n\n    const {\n      onFinish,\n      user,\n      updating\n    } = this.props;\n    return __jsx(Form, _extends({}, layout, {\n      name: \"nest-messages\",\n      onFinish: onFinish.bind(this),\n      validateMessages: validateMessages,\n      initialValues: (user === null || user === void 0 ? void 0 : (_user$paypalSetting = user.paypalSetting) === null || _user$paypalSetting === void 0 ? void 0 : _user$paypalSetting.value) || {\n        email: '',\n        phoneNumber: ''\n      },\n      labelAlign: \"left\",\n      className: \"account-form\"\n    }), __jsx(Row, null, __jsx(Col, {\n      lg: 12,\n      xs: 24\n    }, __jsx(Form.Item, {\n      name: \"email\",\n      label: \"Paypal account email\" // help=\"You must upgrade to Business account to receive the payout from Admin\"\n\n    }, __jsx(Input, null)), __jsx(Form.Item, {\n      className: \"text-center\"\n    }, __jsx(Button, {\n      className: \"secondary\",\n      htmlType: \"submit\",\n      disabled: updating,\n      loading: updating\n    }, \"Submit\")))));\n  }\n\n}","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/paypalForm.tsx"],"names":["PureComponent","Form","Button","Input","Row","Col","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","PerformerPaypalForm","render","onFinish","user","updating","props","bind","paypalSetting","value","phoneNumber"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SACEC,IADF,EACQC,MADR,EACgBC,KADhB,EACuBC,GADvB,EAC4BC,GAD5B,QAEO,MAFP;AAKA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADG;AAEbC,EAAAA,UAAU,EAAE;AAAED,IAAAA,IAAI,EAAE;AAAR;AAFC,CAAf;AAKA,MAAME,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE,yBADa;AAEvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,uBADF;AAELC,IAAAA,MAAM,EAAE;AAFH;AAFgB,CAAzB;AAcA,OAAO,MAAMC,mBAAN,SAAkCf,aAAlC,CAAwD;AAC7DgB,EAAAA,MAAM,GAAG;AAAA;;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,QAA+B,KAAKC,KAA1C;AACA,WACE,MAAC,IAAD,eACMd,MADN;AAEE,MAAA,IAAI,EAAC,eAFP;AAGE,MAAA,QAAQ,EAAEW,QAAQ,CAACI,IAAT,CAAc,IAAd,CAHZ;AAIE,MAAA,gBAAgB,EAAEX,gBAJpB;AAKE,MAAA,aAAa,EAAE,CAAAQ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,mCAAAA,IAAI,CAAEI,aAAN,4EAAqBC,KAArB,KAA8B;AAC3CV,QAAAA,KAAK,EAAE,EADoC;AAE3CW,QAAAA,WAAW,EAAE;AAF8B,OAL/C;AASE,MAAA,UAAU,EAAC,MATb;AAUE,MAAA,SAAS,EAAC;AAVZ,QAYE,MAAC,GAAD,QACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE;AAAjB,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,sBAFR,CAGE;;AAHF,OAKE,MAAC,KAAD,OALF,CADF,EAQE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC;AAArB,OACE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,QAAQ,EAAC,QAAvC;AAAgD,MAAA,QAAQ,EAAEL,QAA1D;AAAoE,MAAA,OAAO,EAAEA;AAA7E,gBADF,CARF,CADF,CAZF,CADF;AA6CD;;AAhD4D","sourcesContent":["import { PureComponent } from 'react';\nimport {\n  Form, Button, Input, Row, Col\n} from 'antd';\nimport { IPerformer } from 'src/interfaces';\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }\n};\n\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  }\n};\n\ninterface IProps {\n  onFinish: Function;\n  user: IPerformer;\n  updating?: boolean;\n}\n\nexport class PerformerPaypalForm extends PureComponent<IProps> {\n  render() {\n    const { onFinish, user, updating } = this.props;\n    return (\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish.bind(this)}\n        validateMessages={validateMessages}\n        initialValues={user?.paypalSetting?.value || {\n          email: '',\n          phoneNumber: ''\n        }}\n        labelAlign=\"left\"\n        className=\"account-form\"\n      >\n        <Row>\n          <Col lg={12} xs={24}>\n            <Form.Item\n              name=\"email\"\n              label=\"Paypal account email\"\n              // help=\"You must upgrade to Business account to receive the payout from Admin\"\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item className=\"text-center\">\n              <Button className=\"secondary\" htmlType=\"submit\" disabled={updating} loading={updating}>\n                Submit\n              </Button>\n            </Form.Item>\n          </Col>\n          {/* <Col lg={12} xs={24}>\n            <Form.Item\n              name=\"phoneNumber\"\n              label=\"Paypal Phone Number\"\n              validateTrigger={['onChange', 'onBlur']}\n              rules={[{ required: true },\n                {\n                  pattern: new RegExp(/^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/u),\n                  message: 'Please enter valid phone number format eg +86 800 555 1234'\n                }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col> */}\n        </Row>\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}