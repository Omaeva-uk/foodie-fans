{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport PerformerCard from '@components/performer/grid-card';\nimport { Row, Col, Alert, Spin } from 'antd';\n\nvar ScrollListPerformers = function ScrollListPerformers(_ref) {\n  var loadMore = _ref.loadMore,\n      performers = _ref.performers,\n      total = _ref.total,\n      loading = _ref.loading,\n      notFoundText = _ref.notFoundText,\n      countries = _ref.countries;\n  return __jsx(React.Fragment, null, __jsx(InfiniteScroll, {\n    dataLength: performers.length,\n    hasMore: performers && performers.length < total,\n    loader: null,\n    next: loadMore,\n    endMessage: null,\n    scrollThreshold: 0.9\n  }, __jsx(Row, null, performers.length > 0 && performers.map(function (p) {\n    return __jsx(Col, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      lg: 6,\n      key: p._id\n    }, __jsx(PerformerCard, {\n      performer: p,\n      countries: countries\n    }));\n  }))), !performers.length && !loading && __jsx(\"div\", {\n    className: \"main-container custom text-center\"\n  }, __jsx(Alert, {\n    type: \"info\",\n    message: notFoundText || 'No profile was found'\n  })), loading && __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(Spin, null)));\n};\n\n_c = ScrollListPerformers;\nexport default ScrollListPerformers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollListPerformers\");","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/components/performer/scroll-list.tsx"],"names":["InfiniteScroll","PerformerCard","Row","Col","Alert","Spin","ScrollListPerformers","loadMore","performers","total","loading","notFoundText","countries","length","map","p","_id"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,iCAA3B;AAEA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SACEC,GADF,EACOC,GADP,EACYC,KADZ,EACmBC,IADnB,QAEO,MAFP;;AAcA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,MAC3BC,QAD2B,QAC3BA,QAD2B;AAAA,MACjBC,UADiB,QACjBA,UADiB;AAAA,MACLC,KADK,QACLA,KADK;AAAA,MACEC,OADF,QACEA,OADF;AAAA,MACWC,YADX,QACWA,YADX;AAAA,MACyBC,SADzB,QACyBA,SADzB;AAAA,SAG3B,4BACE,MAAC,cAAD;AACE,IAAA,UAAU,EAAEJ,UAAU,CAACK,MADzB;AAEE,IAAA,OAAO,EAAEL,UAAU,IAAIA,UAAU,CAACK,MAAX,GAAoBJ,KAF7C;AAGE,IAAA,MAAM,EAAE,IAHV;AAIE,IAAA,IAAI,EAAEF,QAJR;AAKE,IAAA,UAAU,EAAE,IALd;AAME,IAAA,eAAe,EAAE;AANnB,KAQE,MAAC,GAAD,QACGC,UAAU,CAACK,MAAX,GAAoB,CAApB,IACIL,UAAU,CAACM,GAAX,CAAe,UAACC,CAAD;AAAA,WAChB,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAA4B,MAAA,EAAE,EAAE,CAAhC;AAAmC,MAAA,GAAG,EAAEA,CAAC,CAACC;AAA1C,OACE,MAAC,aAAD;AAAe,MAAA,SAAS,EAAED,CAA1B;AAA6B,MAAA,SAAS,EAAEH;AAAxC,MADF,CADgB;AAAA,GAAf,CAFP,CARF,CADF,EAkBG,CAACJ,UAAU,CAACK,MAAZ,IAAsB,CAACH,OAAvB,IAAkC;AAAK,IAAA,SAAS,EAAC;AAAf,KAAmD,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,OAAO,EAAEC,YAAY,IAAI;AAA5C,IAAnD,CAlBrC,EAmBGD,OAAO,IACR;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,IAAD,OADF,CApBF,CAH2B;AAAA,CAA7B;;KAAMJ,oB;AA8BN,eAAeA,oBAAf","sourcesContent":["import InfiniteScroll from 'react-infinite-scroll-component';\nimport { ICountry, IPerformer } from 'src/interfaces';\nimport PerformerCard from '@components/performer/grid-card';\nimport {\n  Row, Col, Alert, Spin\n} from 'antd';\n\ninterface IProps {\n  performers: IPerformer[];\n  total: number;\n  loadMore(): Function;\n  loading: boolean;\n  // eslint-disable-next-line react/require-default-props\n  notFoundText?: string;\n  countries: ICountry[]\n}\n\nconst ScrollListPerformers = ({\n  loadMore, performers, total, loading, notFoundText, countries\n}: IProps) => (\n  <>\n    <InfiniteScroll\n      dataLength={performers.length}\n      hasMore={performers && performers.length < total}\n      loader={null}\n      next={loadMore}\n      endMessage={null}\n      scrollThreshold={0.9}\n    >\n      <Row>\n        {performers.length > 0\n          && performers.map((p: any) => (\n            <Col xs={12} sm={12} md={6} lg={6} key={p._id}>\n              <PerformerCard performer={p} countries={countries} />\n            </Col>\n          ))}\n      </Row>\n    </InfiniteScroll>\n    {!performers.length && !loading && <div className=\"main-container custom text-center\"><Alert type=\"info\" message={notFoundText || 'No profile was found'} /></div>}\n    {loading && (\n    <div className=\"text-center\">\n      <Spin />\n    </div>\n    )}\n  </>\n);\n\nexport default ScrollListPerformers;\n"]},"metadata":{},"sourceType":"module"}