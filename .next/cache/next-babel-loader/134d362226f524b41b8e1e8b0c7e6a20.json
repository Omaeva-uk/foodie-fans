{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nimport { getGlobalConfig } from './config';\nexport var PerformerService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(PerformerService, _APIRequest);\n\n  var _super = _createSuper(PerformerService);\n\n  function PerformerService() {\n    _classCallCheck(this, PerformerService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PerformerService, [{\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/performers/user/search', query));\n    }\n  }, {\n    key: \"randomSearch\",\n    value: function randomSearch(query) {\n      return this.get(this.buildUrl('/performers/search/random', query));\n    }\n  }, {\n    key: \"me\",\n    value: function me(headers) {\n      return this.get('/performers/me', headers);\n    }\n  }, {\n    key: \"findOne\",\n    value: function findOne(id, headers) {\n      return this.get(\"/performers/\".concat(id), headers);\n    }\n  }, {\n    key: \"getAvatarUploadUrl\",\n    value: function getAvatarUploadUrl() {\n      var config = getGlobalConfig();\n      return \"\".concat(config.NEXT_PUBLIC_API_ENDPOINT, \"/performers/avatar/upload\");\n    }\n  }, {\n    key: \"getCoverUploadUrl\",\n    value: function getCoverUploadUrl() {\n      var config = getGlobalConfig();\n      return \"\".concat(config.NEXT_PUBLIC_API_ENDPOINT, \"/performers/cover/upload\");\n    }\n  }, {\n    key: \"getVideoUploadUrl\",\n    value: function getVideoUploadUrl() {\n      var config = getGlobalConfig();\n      return \"\".concat(config.NEXT_PUBLIC_API_ENDPOINT, \"/performers/welcome-video/upload\");\n    }\n  }, {\n    key: \"getDocumentUploadUrl\",\n    value: function getDocumentUploadUrl() {\n      var config = getGlobalConfig();\n      return \"\".concat(config.NEXT_PUBLIC_API_ENDPOINT, \"/performers/documents/upload\");\n    }\n  }, {\n    key: \"updateMe\",\n    value: function updateMe(id, payload) {\n      return this.put(\"/performers/\".concat(id), payload);\n    }\n  }, {\n    key: \"getTopPerformer\",\n    value: function getTopPerformer(query) {\n      return this.get(this.buildUrl('/performers/top', query));\n    }\n  }, {\n    key: \"updateBanking\",\n    value: function updateBanking(id, payload) {\n      return this.put(\"/performers/\".concat(id, \"/banking-settings\"), payload);\n    }\n  }, {\n    key: \"updatePaymentGateway\",\n    value: function updatePaymentGateway(id, payload) {\n      return this.put(\"/performers/\".concat(id, \"/payment-gateway-settings\"), payload);\n    }\n  }, {\n    key: \"getBookmarked\",\n    value: function getBookmarked(payload) {\n      return this.get(this.buildUrl('/reactions/performers/bookmark', payload));\n    }\n  }, {\n    key: \"uploadDocuments\",\n    value: function uploadDocuments(documents, onProgress) {\n      return this.upload('/performers/documents/upload', documents, {\n        onProgress: onProgress\n      });\n    }\n  }]);\n\n  return PerformerService;\n}(APIRequest);\nexport var performerService = new PerformerService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/performer.service.ts"],"names":["APIRequest","getGlobalConfig","PerformerService","query","get","buildUrl","headers","id","config","NEXT_PUBLIC_API_ENDPOINT","payload","put","documents","onProgress","upload","performerService"],"mappings":";;;;;;;;;;AACA,SAASA,UAAT,QAAsC,eAAtC;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,WAAaC,gBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,gBAAOC,KAAP,EAAuC;AACrC,aAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,yBAAd,EAAyCF,KAAzC,CAAT,CAAP;AACD;AAHH;AAAA;AAAA,WAKE,sBAAaA,KAAb,EAA6C;AAC3C,aAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,2BAAd,EAA2CF,KAA3C,CAAT,CAAP;AACD;AAPH;AAAA;AAAA,WASE,YAAGG,OAAH,EAAwE;AACtE,aAAO,KAAKF,GAAL,CAAS,gBAAT,EAA2BE,OAA3B,CAAP;AACD;AAXH;AAAA;AAAA,WAaE,iBAAQC,EAAR,EAAoBD,OAApB,EAAyD;AACvD,aAAO,KAAKF,GAAL,uBAAwBG,EAAxB,GAA8BD,OAA9B,CAAP;AACD;AAfH;AAAA;AAAA,WAiBE,8BAAqB;AACnB,UAAME,MAAM,GAAGP,eAAe,EAA9B;AACA,uBAAUO,MAAM,CAACC,wBAAjB;AACD;AApBH;AAAA;AAAA,WAsBE,6BAAoB;AAClB,UAAMD,MAAM,GAAGP,eAAe,EAA9B;AACA,uBAAUO,MAAM,CAACC,wBAAjB;AACD;AAzBH;AAAA;AAAA,WA2BE,6BAAoB;AAClB,UAAMD,MAAM,GAAGP,eAAe,EAA9B;AACA,uBAAUO,MAAM,CAACC,wBAAjB;AACD;AA9BH;AAAA;AAAA,WAgCE,gCAAuB;AACrB,UAAMD,MAAM,GAAGP,eAAe,EAA9B;AACA,uBAAUO,MAAM,CAACC,wBAAjB;AACD;AAnCH;AAAA;AAAA,WAqCE,kBAASF,EAAT,EAAqBG,OAArB,EAAmC;AACjC,aAAO,KAAKC,GAAL,uBAAwBJ,EAAxB,GAA8BG,OAA9B,CAAP;AACD;AAvCH;AAAA;AAAA,WAyCE,yBAAgBP,KAAhB,EAAgD;AAC9C,aAAO,KAAKC,GAAL,CAAS,KAAKC,QAAL,CAAc,iBAAd,EAAiCF,KAAjC,CAAT,CAAP;AACD;AA3CH;AAAA;AAAA,WA6CE,uBAAcI,EAAd,EAA0BG,OAA1B,EAAmC;AACjC,aAAO,KAAKC,GAAL,uBAAwBJ,EAAxB,wBAA+CG,OAA/C,CAAP;AACD;AA/CH;AAAA;AAAA,WAiDE,8BAAqBH,EAArB,EAAyBG,OAAzB,EAAkC;AAChC,aAAO,KAAKC,GAAL,uBAAwBJ,EAAxB,gCAAuDG,OAAvD,CAAP;AACD;AAnDH;AAAA;AAAA,WAqDE,uBAAcA,OAAd,EAAuB;AACrB,aAAO,KAAKN,GAAL,CAAS,KAAKC,QAAL,CAAc,gCAAd,EAAgDK,OAAhD,CAAT,CAAP;AACD;AAvDH;AAAA;AAAA,WAyDE,yBAAgBE,SAAhB,EAGKC,UAHL,EAG4B;AAC1B,aAAO,KAAKC,MAAL,CAAY,8BAAZ,EAA4CF,SAA5C,EAAuD;AAC5DC,QAAAA,UAAU,EAAVA;AAD4D,OAAvD,CAAP;AAGD;AAhEH;;AAAA;AAAA,EAAsCb,UAAtC;AAmEA,OAAO,IAAMe,gBAAgB,GAAG,IAAIb,gBAAJ,EAAzB","sourcesContent":["import { IPerformer } from 'src/interfaces';\nimport { APIRequest, IResponse } from './api-request';\nimport { getGlobalConfig } from './config';\n\nexport class PerformerService extends APIRequest {\n  search(query?: { [key: string]: any }) {\n    return this.get(this.buildUrl('/performers/user/search', query));\n  }\n\n  randomSearch(query?: { [key: string]: any }) {\n    return this.get(this.buildUrl('/performers/search/random', query));\n  }\n\n  me(headers?: { [key: string]: string }): Promise<IResponse<IPerformer>> {\n    return this.get('/performers/me', headers);\n  }\n\n  findOne(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/performers/${id}`, headers);\n  }\n\n  getAvatarUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/avatar/upload`;\n  }\n\n  getCoverUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/cover/upload`;\n  }\n\n  getVideoUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/welcome-video/upload`;\n  }\n\n  getDocumentUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/documents/upload`;\n  }\n\n  updateMe(id: string, payload: any) {\n    return this.put(`/performers/${id}`, payload);\n  }\n\n  getTopPerformer(query?: { [key: string]: any }) {\n    return this.get(this.buildUrl('/performers/top', query));\n  }\n\n  updateBanking(id: string, payload) {\n    return this.put(`/performers/${id}/banking-settings`, payload);\n  }\n\n  updatePaymentGateway(id, payload) {\n    return this.put(`/performers/${id}/payment-gateway-settings`, payload);\n  }\n\n  getBookmarked(payload) {\n    return this.get(this.buildUrl('/reactions/performers/bookmark', payload));\n  }\n\n  uploadDocuments(documents: {\n    file: File;\n    fieldname: string;\n  }[], onProgress?: Function) {\n    return this.upload('/performers/documents/upload', documents, {\n      onProgress\n    });\n  }\n}\n\nexport const performerService = new PerformerService();\n"]},"metadata":{},"sourceType":"module"}