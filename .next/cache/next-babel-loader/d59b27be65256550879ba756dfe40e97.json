{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class FeedService extends APIRequest {\n  search(query) {\n    return this.get(this.buildUrl('/feeds/performers', query));\n  }\n\n  userSearch(query) {\n    return this.get(this.buildUrl('/feeds/users', query));\n  }\n\n  userHomeFeeds(query) {\n    return this.get(this.buildUrl('/feeds/users/home-feeds', query));\n  }\n\n  delete(id) {\n    return this.del(`/feeds/performers/${id}`);\n  }\n\n  findById(id, headers) {\n    return this.get(`/feeds/performers/${id}`, headers);\n  }\n\n  findOne(id, headers) {\n    return this.get(`/feeds/users/${id}`, headers);\n  }\n\n  update(id, payload) {\n    return this.put(`/feeds/performers/${id}`, payload);\n  }\n\n  create(data) {\n    return this.post('/feeds/performers', data);\n  }\n\n  uploadPhoto(file, payload, onProgress) {\n    return this.upload('/feeds/performers/photo/upload', [{\n      fieldname: 'file',\n      file\n    }], {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  uploadThumbnail(file, payload, onProgress) {\n    return this.upload('/feeds/performers/thumbnail/upload', [{\n      fieldname: 'file',\n      file\n    }], {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  uploadVideo(file, payload, onProgress) {\n    return this.upload('/feeds/performers/video/upload', [{\n      fieldname: 'file',\n      file\n    }], {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  uploadTeaser(file, payload, onProgress) {\n    return this.upload('/feeds/performers/teaser/upload', [{\n      fieldname: 'file',\n      file\n    }], {\n      onProgress,\n      customData: payload\n    });\n  }\n\n  addPoll(payload) {\n    return this.post('/feeds/performers/polls', payload);\n  }\n\n  votePoll(pollId) {\n    return this.post(`/feeds/users/vote/${pollId}`);\n  }\n\n  getBookmark(payload) {\n    return this.get(this.buildUrl('/reactions/feeds/bookmark', payload));\n  }\n\n}\nexport const feedService = new FeedService();","map":{"version":3,"sources":["c:/Users/Admin/Desktop/Work/foodiefans/foodiefans-main/user/src/services/feed.service.ts"],"names":["APIRequest","FeedService","search","query","get","buildUrl","userSearch","userHomeFeeds","delete","id","del","findById","headers","findOne","update","payload","put","create","data","post","uploadPhoto","file","onProgress","upload","fieldname","customData","uploadThumbnail","uploadVideo","uploadTeaser","addPoll","votePoll","pollId","getBookmark","feedService"],"mappings":"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","sourcesContent":["import { APIRequest } from './api-request';\n\nexport class FeedService extends APIRequest {\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/performers', query)\n    );\n  }\n\n  userSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users', query)\n    );\n  }\n\n  userHomeFeeds(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users/home-feeds', query)\n    );\n  }\n\n  delete(id: string) {\n    return this.del(`/feeds/performers/${id}`);\n  }\n\n  findById(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/feeds/performers/${id}`, headers);\n  }\n\n  findOne(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/feeds/users/${id}`, headers);\n  }\n\n  update(id: string, payload: any) {\n    return this.put(`/feeds/performers/${id}`, payload);\n  }\n\n  create(data) {\n    return this.post('/feeds/performers', data);\n  }\n\n  uploadPhoto(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/photo/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadThumbnail(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/thumbnail/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadVideo(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/video/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadTeaser(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/teaser/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  addPoll(payload) {\n    return this.post('/feeds/performers/polls', payload);\n  }\n\n  votePoll(pollId: string) {\n    return this.post(`/feeds/users/vote/${pollId}`);\n  }\n\n  getBookmark(payload) {\n    return this.get(this.buildUrl('/reactions/feeds/bookmark', payload));\n  }\n}\n\nexport const feedService = new FeedService();\n"]},"metadata":{},"sourceType":"module"}